{"version":3,"file":"index.js","sources":["../src/formBuilder/checkbox/FBCheckbox.tsx","../src/formBuilder/FontAwesomeIcon.tsx","../src/formBuilder/Collapse/Collapse.tsx","../src/formBuilder/radio/FBRadioButton.tsx","../src/formBuilder/radio/FBRadioGroup.tsx","../src/formBuilder/Tooltip.tsx","../src/formBuilder/utils.tsx","../src/formBuilder/dependencies/DependencyWarning.tsx","../src/formBuilder/dependencies/CardSelector.tsx","../src/formBuilder/CardEnumOptions.tsx","../src/formBuilder/dependencies/ValueSelector.tsx","../src/formBuilder/dependencies/DependencyPossibility.tsx","../src/formBuilder/dependencies/DependencyField.tsx","../src/formBuilder/CardModal.tsx","../src/formBuilder/GeneralParameterInputs.tsx","../src/formBuilder/CardGeneralParameterInputs.tsx","../src/formBuilder/Add.tsx","../src/formBuilder/Card.tsx","../src/formBuilder/defaults/defaultInputs.tsx","../src/formBuilder/Section.tsx","../src/formBuilder/styles.ts","../src/formBuilder/inputs/PlaceholderInput.tsx","../src/formBuilder/defaults/shortAnswerInputs.tsx","../src/formBuilder/defaults/longAnswerInputs.tsx","../src/formBuilder/defaults/numberInputs.tsx","../src/formBuilder/defaults/arrayInputs.tsx","../src/formBuilder/defaults/referenceInputs.tsx","../src/formBuilder/defaults/defaultFormInputs.ts","../src/formBuilder/FormBuilder.tsx","../src/formBuilder/CardGallery.tsx","../src/formBuilder/PredefinedGallery.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport classnames from 'classnames';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  checkbox: {\n    '& *': {\n      display: 'inline-block',\n    },\n    '& input': {\n      marginRight: '5px',\n    },\n  },\n});\n\ninterface FBCheckboxProps {\n  onChangeValue: (_arg0: { [key: string]: any }) => void;\n  isChecked: boolean;\n  id?: string;\n  label?: string;\n  use?: string;\n  value?: string;\n  disabled?: boolean;\n  dataTest?: string;\n  labelClassName?: string;\n}\n\nconst FBCheckbox: FC<FBCheckboxProps> = ({\n  onChangeValue,\n  value = '',\n  isChecked = false,\n  label = '',\n  use = 'action',\n  disabled = false,\n  id = '',\n  dataTest = '',\n  labelClassName = '',\n}) => {\n  const classjss = useStyles();\n  const classes = classnames('fb-checkbox', {\n    'edit-checkbox': !disabled && use === 'edit',\n    'action-checkbox': !disabled && use === 'action',\n    'disabled-checked-checkbox': disabled && isChecked,\n    'disabled-unchecked-checkbox': disabled && !isChecked,\n  });\n  const potentialCheckboxId = id !== '' ? id : label;\n  const checkboxId =\n    potentialCheckboxId !== '' ? potentialCheckboxId : undefined;\n  return (\n    <div data-test='checkbox' className={`${classes} ${classjss.checkbox}`}>\n      <input\n        type='checkbox'\n        id={checkboxId}\n        data-test={dataTest || undefined}\n        onChange={(event) => {\n          if (!disabled) {\n            onChangeValue(event);\n          }\n        }}\n        value={value}\n        disabled={disabled}\n        checked={isChecked}\n      />\n      <div className='checkbox-overlay'>\n        {label && (\n          <label htmlFor={checkboxId} className={labelClassName || undefined}>\n            {label}\n          </label>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FBCheckbox;\n","import React, { FC } from 'react';\nimport classnames from 'classnames';\nimport {\n  FontAwesomeIcon as FortAwesomeFontAwesomeIcon,\n  FontAwesomeIconProps,\n} from '@fortawesome/react-fontawesome';\n\nconst FontAwesomeIcon: FC<FontAwesomeIconProps> = ({\n  className,\n  ...otherProps\n}) => {\n  const props = Object.assign(\n    { className: classnames([className, 'fa']) },\n    otherProps,\n  );\n  return <FortAwesomeFontAwesomeIcon {...props} />;\n};\n\nexport default FontAwesomeIcon;\n","import React, { FC, ReactNode, MouseEvent } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { Collapse as RSCollapse } from 'reactstrap';\nimport classnames from 'classnames';\nimport { faCaretDown, faCaretRight } from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\n\nconst useStyles = createUseStyles({\n  collapseElement: {\n    '& .disabled': { '.toggle-collapse': { cursor: 'default' } },\n    '& h4': { marginTop: '7px', padding: '13px 10px 10px 10px' },\n    '& .toggle-collapse': {\n      fontSize: '2.3rem',\n      cursor: 'pointer',\n      marginLeft: '33px',\n      '& .fa-caret-right': {\n        marginRight: '9px',\n      },\n    },\n  },\n});\n\ninterface CollapseProps {\n  // Determines if the Collapse component is open\n  isOpen: boolean;\n  // Toggles the isOpen boolean between true and false\n  toggleCollapse: (event: MouseEvent<SVGSVGElement>) => void;\n  // The title to display in the collapse header\n  title: ReactNode;\n  // Anything to be rendered within the collapse\n  children: Array<ReactNode>;\n  // If true will gray out and disable */\n  disableToggle?: boolean;\n  className?: string;\n}\n\nconst Collapse: FC<CollapseProps> = (props) => {\n  const classes = classnames(\n    `collapse-element ${props.className || ''} ${useStyles().collapseElement}`,\n    {\n      disabled: props.disableToggle,\n    },\n  );\n\n  return (\n    <div className={classes}>\n      <div className='d-flex'>\n        <span className='toggle-collapse'>\n          <FontAwesomeIcon\n            onClick={(event) => {\n              if (!props.disableToggle) {\n                props.toggleCollapse(event);\n              }\n            }}\n            icon={props.isOpen ? faCaretDown : faCaretRight}\n          />\n        </span>\n        <h4>{props.title}</h4>\n      </div>\n      <RSCollapse isOpen={props.isOpen}>\n        <div>{props.children}</div>\n      </RSCollapse>\n    </div>\n  );\n};\n\nexport default Collapse;\n","import React, { useState, ReactElement } from 'react';\nimport classnames from 'classnames';\n\ntype Props = {\n  label: ReactElement | string;\n  value?: any;\n  name?: string;\n  checked?: boolean;\n  required?: boolean;\n  disabled?: boolean;\n  autoFocus?: boolean;\n  onChange: (selection: string) => void;\n};\n\nexport default function FBRadioButton(props: Props): ReactElement {\n  const {\n    label,\n    value,\n    checked,\n    name,\n    onChange,\n    required,\n    disabled,\n    autoFocus,\n  } = props;\n  const [id] = useState(`radio-${Math.floor(Math.random() * 1000000)}`);\n  const classes = classnames('fb-radio-button', { disabled });\n  return (\n    <div className={classes} key={value}>\n      <input\n        id={id}\n        type='radio'\n        name={name}\n        value={value}\n        checked={checked}\n        required={required}\n        disabled={disabled}\n        autoFocus={autoFocus}\n        onChange={() => onChange(value)}\n      />\n      <label htmlFor={id}>{label}</label>\n    </div>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport classnames from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport FBRadioButton from './FBRadioButton';\n\nconst useStyles = createUseStyles({\n  radio: {\n    '& .fb-radio-button': {\n      display: 'block',\n      '& input[type=\"radio\"]': {\n        marginRight: '5px',\n        marginBottom: 0,\n        height: '1em',\n        verticalAlign: 'middle',\n      },\n      '& input[type=\"radio\"] + label': {\n        marginTop: 0,\n        marginBottom: 0,\n        verticalAlign: 'middle',\n      },\n    },\n  },\n});\n\ntype FBRadioGroupPropsType = {\n  options: Array<{ label: string | ReactElement; value: string | number }>;\n  onChange: (selection: string) => void;\n  defaultValue?: any;\n  horizontal?: boolean;\n  id?: string | number;\n  required?: boolean;\n  disabled?: boolean;\n  autoFocus?: boolean;\n  className?: string;\n};\n\nexport default function FBRadioGroup(\n  props: FBRadioGroupPropsType,\n): ReactElement {\n  const {\n    options,\n    defaultValue,\n    onChange,\n    horizontal,\n    id,\n    autoFocus,\n    disabled,\n  } = props;\n  const name = Math.random().toString();\n  const classjss = useStyles();\n  const classes = classnames('fb-radio-group', {\n    horizontal,\n  });\n\n  // Conditionallly add 'id' prop in case id was not passed in from parent.\n  let elementId = {};\n  if (id) {\n    elementId = { id };\n  }\n\n  return (\n    <div {...elementId} className={`${classes} ${classjss.radio}`}>\n      {options.map((option, index) => (\n        <FBRadioButton\n          value={option.value}\n          label={option.label}\n          {...elementId}\n          name={name}\n          key={option.value}\n          checked={option.value === defaultValue}\n          autoFocus={autoFocus && index === 1}\n          onChange={onChange}\n          disabled={disabled}\n        />\n      ))}\n    </div>\n  );\n}\n","/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\nimport React, { ReactElement } from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport {\n  faAsterisk,\n  faQuestionCircle,\n} from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from './FontAwesomeIcon';\n\nconst typeMap = {\n  alert: faAsterisk,\n  help: faQuestionCircle,\n};\n\nconst useStyles = createUseStyles({\n  toolTip: {\n    color: 'white',\n    'background-color': 'black',\n  },\n});\n\nexport default function Example({\n  text,\n  type,\n  id,\n}: {\n  text: string;\n  type: 'alert' | 'help';\n  id: string;\n}): ReactElement {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <span style={{ textDecoration: 'underline', color: 'blue' }} id={id}>\n        <FontAwesomeIcon icon={typeMap[type]} />\n      </span>\n      <UncontrolledTooltip\n        autohide={false}\n        className={classes.toolTip}\n        placement='top'\n        target={id}\n      >\n        {text}\n      </UncontrolledTooltip>\n    </React.Fragment>\n  );\n}\n","import React, { ReactNode } from 'react';\nimport {\n  SectionType,\n  CardType,\n  CardProps,\n  ElementProps,\n  FormInput,\n  Mods,\n  CardComponentType,\n  DataOptions,\n  DataType,\n  FormElement,\n  CardComponentPropsType,\n  AddFormObjectParametersType,\n  DefinitionData,\n  InputSelectDataType,\n} from './types';\n\n// parse in either YAML or JSON\nexport function parse(text: string): any {\n  if (!text) return {};\n  return JSON.parse(text);\n}\n\n// stringify in either YAML or JSON\nexport function stringify(obj: any): string {\n  if (!obj) return '{}';\n  return JSON.stringify(obj);\n}\n\nexport function defaultDataProps(\n  category: string,\n  allFormInputs: { [key: string]: FormInput },\n): InputSelectDataType {\n  return allFormInputs[category]\n    .defaultDataSchema as unknown as InputSelectDataType;\n}\n\nexport function defaultUiProps(\n  category: string,\n  allFormInputs: { [key: string]: FormInput },\n): InputSelectDataType {\n  return allFormInputs[category]\n    .defaultUiSchema as unknown as InputSelectDataType;\n}\nexport function categoryType(\n  category: string,\n  allFormInputs: { [key: string]: FormInput },\n): DataType {\n  return allFormInputs[category].type;\n}\nexport function getCardBody(\n  category: string,\n  allFormInputs: { [key: string]: FormInput },\n) {\n  return (\n    (allFormInputs[category] && allFormInputs[category].cardBody) ||\n    (() => null)\n  );\n}\n\nexport function categoryToNameMap(allFormInputs: {\n  [key: string]: FormInput;\n}): { [key: string]: string } {\n  const categoryNameMap: { [key: string]: any } = {};\n  Object.keys(allFormInputs).forEach((inputName) => {\n    categoryNameMap[inputName] = allFormInputs[inputName].displayName;\n  });\n  return categoryNameMap;\n}\n\nfunction updateElementNames(elementArray: Array<ElementProps>) {\n  const elementNames = elementArray.map((elem) => elem.name);\n  return elementArray.map((elem) => {\n    const newElem = elem;\n    newElem.neighborNames = elementNames;\n    return newElem;\n  });\n}\n\nexport function generateCategoryHash(allFormInputs: {\n  [key: string]: FormInput;\n}) {\n  const categoryHash: { [key: string]: any } = {};\n  Object.keys(allFormInputs).forEach((categoryName) => {\n    const formInput = allFormInputs[categoryName];\n    formInput.matchIf.forEach((match) => {\n      match.types.forEach((type) => {\n        const hash = `type:${type === 'null' ? '' : type};widget:${\n          match.widget || ''\n        };field:${match.field || ''};format:${match.format || ''};$ref:${\n          match.$ref ? 'true' : 'false'\n        };enum:${match.enum ? 'true' : 'false'}`;\n        if (categoryHash[hash]) {\n          throw new Error(`Duplicate hash: ${hash}`);\n        }\n        categoryHash[hash] = categoryName;\n      });\n    });\n  });\n  return categoryHash;\n}\n\n// determines a card's category based on it's properties\n// mostly useful for reading a schema for the first time\nexport function getCardCategory(\n  cardProps: CardProps,\n  categoryHash: { [key: string]: string },\n): string {\n  const currentHash = `type:${cardProps.dataOptions.type || ''};widget:${\n    cardProps.uiOptions['ui:widget'] || ''\n  };field:${cardProps.uiOptions['ui:field'] || ''};format:${\n    cardProps.dataOptions.format || ''\n  };$ref:${cardProps.$ref !== undefined ? 'true' : 'false'};enum:${\n    cardProps.dataOptions.enum ? 'true' : 'false'\n  }`;\n  const category = categoryHash[currentHash];\n  if (!category) {\n    if (cardProps.$ref) return 'ref';\n    // eslint-disable-next-line no-console\n    console.error(`No match for card': ${currentHash} among set`);\n    return 'shortAnswer';\n  }\n  return category;\n}\n\n// check for unsupported feature in schema and uischema\nconst supportedPropertyParameters = new Set([\n  'title',\n  'description',\n  'enum',\n  'minLength',\n  'maxLength',\n  'multipleOf',\n  'minimum',\n  'maximum',\n  'format',\n  'exclusiveMinimum',\n  'exclusiveMaximum',\n  'type',\n  'default',\n  'pattern',\n  'required',\n  'properties',\n  'items',\n  'definitions',\n  '$ref',\n  'minItems',\n  'maxItems',\n  'enumNames',\n  'dependencies',\n  '$id',\n  '$schema',\n  'meta',\n  'additionalProperties',\n]);\n\nconst supportedUiParameters = new Set([\n  'ui:order',\n  'ui:widget',\n  'ui:autofocus',\n  'ui:autocomplete',\n  'ui:options',\n  'ui:field',\n  'ui:placeholder',\n  'ui:column',\n  'items',\n  'definitions',\n]);\n\n// recursively called function to check an object for unsupported features\nfunction checkObjectForUnsupportedFeatures(\n  schema: { [key: string]: any },\n  uischema: { [key: string]: any },\n  supportedWidgets: Set<string>,\n  supportedFields: Set<string>,\n  supportedOptions: Set<string>,\n) {\n  // add each unsupported feature to this array\n  const unsupportedFeatures: Array<string> = [];\n\n  // check for unsupported whole object features\n  if (schema && typeof schema === 'object') {\n    Object.keys(schema).forEach((property) => {\n      if (\n        !supportedPropertyParameters.has(property) &&\n        property !== 'properties'\n      ) {\n        unsupportedFeatures.push(`Unrecognized Object Property: ${property}`);\n      }\n    });\n  }\n\n  if (uischema && typeof uischema === 'object') {\n    Object.keys(uischema).forEach((uiProperty) => {\n      let propDefined = false;\n      // search for the property in the schema properties and dependencies\n      if (\n        schema.properties &&\n        Object.keys(schema.properties).includes(uiProperty)\n      ) {\n        propDefined = true;\n      }\n      if (schema.dependencies) {\n        Object.keys(schema.dependencies).forEach((dependencyKey) => {\n          Object.keys(schema.dependencies[dependencyKey]).forEach(\n            (parameter) => {\n              if (parameter === 'oneOf') {\n                schema.dependencies[dependencyKey].oneOf.forEach(\n                  (grouping: { [key: string]: any }) => {\n                    if (grouping.properties) {\n                      if (\n                        Object.keys(grouping.properties).includes(uiProperty)\n                      ) {\n                        propDefined = true;\n                      }\n                    }\n                  },\n                );\n              } else if (parameter === 'properties') {\n                if (\n                  Object.keys(\n                    schema.dependencies[dependencyKey].properties,\n                  ).includes(uiProperty)\n                ) {\n                  propDefined = true;\n                }\n              }\n            },\n          );\n        });\n      }\n\n      if (!propDefined && !supportedUiParameters.has(uiProperty)) {\n        unsupportedFeatures.push(\n          `Unrecognized UI schema property: ${uiProperty}`,\n        );\n      }\n    });\n  }\n\n  // check for unsupported property parameters\n  if (schema.properties) {\n    Object.entries(schema.properties).forEach(\n      ([parameter, element]: [string, any]) => {\n        if (\n          element &&\n          typeof element === 'object' &&\n          element.type &&\n          element.type !== 'object'\n        ) {\n          // make sure that the type is valid\n          if (\n            !['array', 'string', 'integer', 'number', 'boolean'].includes(\n              element.type,\n            )\n          ) {\n            unsupportedFeatures.push(\n              `Unrecognized type: ${element.type} in ${parameter}`,\n            );\n          }\n          // check the properties of each property if it is a basic object\n          Object.keys(element).forEach((key) => {\n            if (!supportedPropertyParameters.has(key)) {\n              unsupportedFeatures.push(\n                `Property Parameter: ${key} in ${parameter}`,\n              );\n            }\n          });\n        } else {\n          // check the properties of each property if it is a basic object\n          Object.keys(element).forEach((key) => {\n            if (!supportedPropertyParameters.has(key)) {\n              unsupportedFeatures.push(\n                `Property Parameter: ${key} in ${parameter}`,\n              );\n            }\n          });\n        }\n\n        // check for unsupported UI components\n        if (\n          uischema &&\n          uischema[parameter] &&\n          element &&\n          (!element.type || element.type !== 'object')\n        ) {\n          // check for unsupported ui properties\n          Object.keys(uischema[parameter]).forEach((uiProp) => {\n            if (!supportedUiParameters.has(uiProp)) {\n              unsupportedFeatures.push(\n                `UI Property: ${uiProp} for ${parameter}`,\n              );\n            }\n\n            // check for unsupported ui widgets\n            if (\n              uiProp === 'ui:widget' &&\n              !supportedWidgets.has(uischema[parameter][uiProp])\n            ) {\n              unsupportedFeatures.push(\n                `UI Widget: ${uischema[parameter][uiProp]} for ${parameter}`,\n              );\n            }\n\n            // check for unsupported ui fields\n            if (\n              uiProp === 'ui:field' &&\n              !supportedFields.has(uischema[parameter][uiProp])\n            ) {\n              unsupportedFeatures.push(\n                `UI Field: ${uischema[parameter][uiProp]} for ${parameter}`,\n              );\n            }\n\n            // check unsupported ui option\n            if (uiProp === 'ui:options') {\n              Object.keys(uischema[parameter]['ui:options']).forEach(\n                (uiOption) => {\n                  if (!supportedOptions.has(uiOption)) {\n                    unsupportedFeatures.push(\n                      `UI Property: ui:options.${uiOption} for ${parameter}`,\n                    );\n                  }\n                },\n              );\n            }\n          });\n        }\n      },\n    );\n  }\n\n  return unsupportedFeatures;\n}\n\n// parent function that checks for unsupported features in an entire document\nexport function checkForUnsupportedFeatures(\n  schema: { [key: string]: any },\n  uischema: { [key: string]: any },\n  allFormInputs: { [key: string]: FormInput },\n): string[] {\n  // add each unsupported feature to this array\n  const unsupportedFeatures = [];\n\n  const widgets: string[] = [];\n  const fields: string[] = [];\n  const options: string[] = [];\n  Object.keys(allFormInputs).forEach((inputType) => {\n    allFormInputs[inputType].matchIf.forEach((match) => {\n      if (match.widget && !widgets.includes(match.widget)) {\n        widgets.push(match.widget);\n      }\n      if (match.field && !fields.includes(match.field)) {\n        fields.push(match.field);\n      }\n    });\n    if (\n      allFormInputs[inputType].possibleOptions &&\n      Array.isArray(allFormInputs[inputType].possibleOptions)\n    ) {\n      options.push(...allFormInputs[inputType].possibleOptions!);\n    }\n  });\n  const supportedWidgets = new Set(widgets);\n  const supportedFields = new Set(fields);\n  const supportedOptions = new Set(options);\n\n  // check for unsupported whole form features\n  if (schema && typeof schema === 'object' && schema.type === 'object') {\n    unsupportedFeatures.push(\n      ...checkObjectForUnsupportedFeatures(\n        schema,\n        uischema,\n        supportedWidgets,\n        supportedFields,\n        supportedOptions,\n      ),\n    );\n  } else {\n    unsupportedFeatures.push('jsonSchema form is not of type object');\n  }\n\n  return unsupportedFeatures;\n}\n\n// make an element out of the corresponding properties and UI properties\nfunction generateDependencyElement(\n  name: string,\n  dataProps: any,\n  uiProperties: any,\n  requiredNames: any,\n  categoryHash: { [key: string]: string },\n  definitionData?: DefinitionData,\n  definitionUi?: { [key: string]: any },\n  useDefinitionDetails = true, // determines whether to use an element's definition details or not.\n) {\n  let uiProps = {\n    ...uiProperties,\n  };\n  const newElement: FormElement = {};\n  let elementDetails =\n    dataProps && typeof dataProps === 'object' ? dataProps : {};\n\n  // populate newElement with reference if applicable\n  if (elementDetails.$ref !== undefined && definitionData) {\n    const pathArr =\n      typeof elementDetails.$ref === 'string'\n        ? elementDetails.$ref.split('/')\n        : [];\n    if (\n      pathArr[0] === '#' &&\n      pathArr[1] === 'definitions' &&\n      definitionData[pathArr[2]] &&\n      useDefinitionDetails === true\n    ) {\n      elementDetails = {\n        ...elementDetails,\n        ...definitionData[pathArr[2]],\n      };\n    }\n\n    const definedUiProps = (definitionUi || {})[pathArr[2]];\n    uiProps = {\n      ...(definedUiProps || {}),\n      ...uiProps,\n    };\n  }\n\n  newElement.name = name;\n  newElement.required = requiredNames.includes(name);\n  newElement.$ref =\n    typeof elementDetails.$ref === 'string' ? elementDetails.$ref : undefined;\n\n  if (elementDetails.type && elementDetails.type === 'object') {\n    // create a section\n    newElement.schema = elementDetails;\n    newElement.uischema = uiProps || {};\n    newElement.propType = 'section';\n  } else {\n    // create a card\n    newElement.dataOptions = elementDetails;\n    newElement.uiOptions = uiProps || {};\n\n    // ensure that uiOptions does not have duplicate keys with dataOptions\n    const reservedKeys = Object.keys(newElement.dataOptions!);\n    Object.keys(newElement.uiOptions!).forEach((uiKey) => {\n      if (reservedKeys.includes(uiKey)) {\n        newElement.uiOptions![`ui:*${uiKey}`] = newElement.uiOptions![uiKey];\n      }\n    });\n\n    newElement.dataOptions!.category = getCardCategory(\n      newElement as CardProps,\n      categoryHash,\n    );\n    newElement.propType = 'card';\n  }\n  return newElement;\n}\n\n// generate an array of element objects from a schema and uischema\nexport function generateElementPropsFromSchemas(parameters: {\n  schema: { [key: string]: any };\n  uischema: { [key: string]: any };\n  definitionData?: DefinitionData;\n  definitionUi?: { [key: string]: any };\n  categoryHash: { [key: string]: string };\n}): ElementProps[] {\n  const { schema, uischema, definitionData, definitionUi, categoryHash } =\n    parameters;\n\n  if (!schema.properties) return [];\n\n  const elementDict: { [key: string]: any } = {};\n  const requiredNames = schema.required ? schema.required : [];\n\n  // read regular elements from properties\n  Object.entries(schema.properties).forEach(([parameter, element]) => {\n    const newElement: FormElement = {};\n    let elementDetails: FormElement =\n      element && typeof element === 'object' ? element : {};\n\n    // populate newElement with reference if applicable\n    if (elementDetails?.$ref !== undefined && definitionData) {\n      if (\n        elementDetails.$ref &&\n        !elementDetails.$ref.startsWith('#/definitions')\n      ) {\n        throw new Error(\n          `Invalid definition, not at '#/definitions': ${elementDetails.$ref}`,\n        );\n      }\n      const pathArr =\n        elementDetails.$ref !== undefined ? elementDetails.$ref.split('/') : [];\n      if (\n        pathArr[0] === '#' &&\n        pathArr[1] === 'definitions' &&\n        definitionData[pathArr[2]]\n      ) {\n        elementDetails = {\n          ...definitionData[pathArr[2]],\n          ...elementDetails,\n        };\n      }\n\n      const definedUiProps = (definitionUi || {})[pathArr[2]];\n      uischema[parameter] = {\n        ...(definedUiProps || {}),\n        ...uischema[parameter],\n      };\n    }\n    newElement.name = parameter;\n    newElement.required = requiredNames.includes(parameter);\n    newElement.$ref = elementDetails.$ref;\n    newElement.dataOptions = elementDetails;\n\n    if (elementDetails.type && elementDetails.type === 'object') {\n      // create a section\n      newElement.schema = elementDetails;\n      newElement.uischema = uischema[parameter] || {};\n      newElement.propType = 'section';\n    } else {\n      // create a card\n      newElement.uiOptions = uischema[parameter] || {};\n\n      // ensure that uiOptions does not have duplicate keys with dataOptions\n      const reservedKeys = Object.keys(newElement.dataOptions);\n      Object.keys(newElement.uiOptions!).forEach((uiKey) => {\n        if (reservedKeys.includes(uiKey)) {\n          newElement.uiOptions![`ui:*${uiKey}`] = newElement.uiOptions![uiKey];\n        }\n      });\n\n      newElement.dataOptions.category = getCardCategory(\n        newElement as CardProps,\n        categoryHash,\n      );\n      newElement.propType = 'card';\n    }\n    elementDict[newElement.name!] = newElement;\n  });\n  // read dependent elements from dependencies\n  if (schema.dependencies) {\n    const useDefinitionDetails = false;\n    Object.keys(schema.dependencies).forEach((parent) => {\n      const group = schema.dependencies[parent];\n      if (group.oneOf) {\n        let possibilityIndex = 0;\n        group.oneOf.forEach((possibility: { [key: string]: any }) => {\n          if (!(elementDict[parent] || {}).dependents) {\n            elementDict[parent] = elementDict[parent] || {};\n            elementDict[parent].dependents = [];\n          }\n          elementDict[parent].dependents.push({\n            children: [],\n            value: possibility.properties[parent],\n          });\n          const requiredValues = possibility.required || [];\n          Object.entries(possibility.properties).forEach(\n            ([parameter, element]) => {\n              // create a new element if not present in main properties\n              if (\n                !elementDict[parameter] ||\n                (parameter !== parent &&\n                  Object.keys(elementDict[parameter]).length === 1 &&\n                  elementDict[parameter].dependents)\n              ) {\n                const newElement = generateDependencyElement(\n                  parameter,\n                  element,\n                  uischema[parameter],\n                  requiredNames,\n                  categoryHash,\n                  definitionData,\n                  definitionUi,\n                  useDefinitionDetails,\n                );\n                if (\n                  elementDict[parameter] &&\n                  elementDict[parameter].dependents\n                ) {\n                  newElement.dependents = elementDict[parameter].dependents;\n                }\n                newElement.required = requiredValues.includes(newElement.name);\n                elementDict[newElement.name!] = newElement;\n              }\n              if (parameter !== parent) {\n                const newElement = elementDict[parameter];\n                newElement.dependent = true;\n                newElement.parent = parent;\n                elementDict[parent].dependents[possibilityIndex].children.push(\n                  parameter,\n                );\n              }\n            },\n          );\n          possibilityIndex += 1;\n        });\n      } else if (group.properties) {\n        const requiredValues = group.required || [];\n        Object.entries(group.properties).forEach(([parameter, element]) => {\n          const newElement = generateDependencyElement(\n            parameter,\n            element,\n            uischema[parameter],\n            requiredNames,\n            categoryHash,\n            definitionData,\n            definitionUi,\n            useDefinitionDetails,\n          );\n          newElement.required = requiredValues.includes(newElement.name);\n          newElement.dependent = true;\n          newElement.parent = parent;\n          elementDict[newElement.name!] = newElement;\n          if (elementDict[parent]) {\n            if (elementDict[parent].dependents) {\n              elementDict[parent].dependents[0].children.push(parameter);\n            } else {\n              elementDict[parent].dependents = [{ children: [parameter] }];\n            }\n          } else {\n            elementDict[parent] = {};\n            elementDict[parent].dependents = [{ children: [parameter] }];\n          }\n        });\n      } else {\n        // eslint-disable-next-line no-console\n        console.error('unsupported dependency type encountered');\n      }\n    });\n  }\n\n  // now reorder in accordance with ui:order if defined\n  const cardPropList: FormElement[] = [];\n  if (uischema['ui:order']) {\n    // in case there are any options not in ui:order\n    const remainder: FormElement[] = [];\n    Object.keys(elementDict).forEach((name) => {\n      if (!uischema['ui:order'].includes(name))\n        remainder.push(elementDict[name]);\n    });\n\n    // map ui order elements into the right order\n    uischema['ui:order'].forEach((name: string) => {\n      // if contains the wildcard *, insert remainder cards there\n      if (name === '*') {\n        remainder.forEach((remCard) => {\n          cardPropList.push(remCard);\n        });\n      } else if (elementDict[name]) {\n        cardPropList.push(elementDict[name]);\n      }\n    });\n  } else {\n    Object.keys(elementDict).forEach((name) => {\n      cardPropList.push(elementDict[name]);\n    });\n  }\n\n  updateElementNames(cardPropList as ElementProps[]);\n\n  return cardPropList as ElementProps[];\n}\n\n// determine the number of element objects from schema and uischema\nexport function countElementsFromSchema(schemaData: any): number {\n  if (!schemaData.properties) return 0;\n  const elementDict: { [key: string]: any } = {};\n  let elementCount = 0;\n\n  // read regular elements from properties\n  Object.entries(schemaData.properties).forEach(([parameter]) => {\n    elementDict[parameter] = {};\n    elementCount += 1;\n  });\n  // read dependent elements from dependencies\n  if (schemaData.dependencies) {\n    Object.keys(schemaData.dependencies).forEach((parent) => {\n      const group = schemaData.dependencies[parent];\n      if (group.oneOf) {\n        let possibilityIndex = 0;\n        group.oneOf.forEach((possibility: { [key: string]: any }) => {\n          if (!(elementDict[parent] || {}).dependents) {\n            elementDict[parent] = elementDict[parent] || {};\n            elementDict[parent].dependents = [];\n          }\n          elementDict[parent].dependents.push({\n            children: [],\n            value: possibility.properties[parent],\n          });\n          Object.entries(possibility.properties).forEach(([parameter]) => {\n            // create a new element if not present in main properties\n            if (!Object.keys(elementDict).includes(parameter)) {\n              elementDict[parameter] = {};\n              elementCount += 1;\n            }\n            if (parameter !== parent) {\n              const newElement = elementDict[parameter];\n              newElement.dependent = true;\n              newElement.parent = parent;\n              elementDict[parent].dependents[possibilityIndex].children.push(\n                parameter,\n              );\n            }\n          });\n          possibilityIndex += 1;\n        });\n      } else if (group.properties) {\n        Object.entries(group.properties).forEach(([parameter]) => {\n          elementDict[parameter] = elementDict[parameter] || {};\n          elementCount += 1;\n          if (elementDict[parent]) {\n            if (elementDict[parent].dependents) {\n              elementDict[parent].dependents[0].children.push(parameter);\n            } else {\n              elementDict[parent].dependents = [{ children: [parameter] }];\n            }\n          } else {\n            elementDict[parent] = {};\n            elementDict[parent].dependents = [{ children: [parameter] }];\n          }\n        });\n      } else {\n        // eslint-disable-next-line no-console\n        console.error('unsupported dependency type encountered');\n      }\n    });\n  }\n\n  return elementCount;\n}\n\n// convert an element into a schema equivalent\nfunction generateSchemaElementFromElement(element: ElementProps) {\n  if (element.$ref !== undefined) {\n    const title =\n      element.schema !== undefined && element.schema.title !== undefined\n        ? element.schema.title\n        : element.dataOptions.title;\n    const description =\n      element.schema !== undefined && element.schema.description !== undefined\n        ? element.schema.description\n        : element.dataOptions.description;\n\n    let returnElement: FormElement = {\n      $ref: element.$ref,\n      title: title,\n      description: description,\n    };\n\n    const length = element?.schema?.required?.length;\n    if (length !== undefined && length > 0) {\n      returnElement = { ...returnElement, required: element.schema.required };\n    }\n    return returnElement;\n  } else if (element.propType === 'card') {\n    if (element.dataOptions.category === 'section') {\n      return {\n        type: 'object',\n      };\n    } else {\n      const prop: { [key: string]: any } = {};\n\n      Object.keys(element.dataOptions).forEach((key) => {\n        if (\n          ![\n            'category',\n            'hideKey',\n            'path',\n            'definitionData',\n            'definitionUi',\n            'allFormInputs',\n          ].includes(key) &&\n          element.dataOptions[key] !== ''\n        )\n          prop[key] = element.dataOptions[key];\n      });\n      return prop;\n    }\n  } else if (element.propType === 'section') {\n    return element.schema;\n  } else {\n    throw new Error('Element that is neither card, section, nor ref');\n  }\n}\n\n// generate a new schema from a complete array of card objects\nexport function generateSchemaFromElementProps(elementArr: ElementProps[]): {\n  [key: string]: any;\n  definitions?: { [key: string]: any };\n} {\n  if (!elementArr) return {};\n  const newSchema: { [key: string]: any } = {};\n\n  const props: { [key: string]: any } = {};\n  const dependencies: { [key: string]: any } = {};\n  const elementDict: { [key: string]: ElementProps } = {};\n  const dependentElements = new Set();\n  for (let index = 0; index < elementArr.length; index += 1) {\n    const element = elementArr[index];\n    elementDict[element.name] = { ...element };\n    if (element.dependents)\n      element.dependents.forEach((possibility) => {\n        possibility.children.forEach((dependentElement) => {\n          dependentElements.add(dependentElement);\n        });\n      });\n  }\n  Object.keys(elementDict).forEach((elementName) => {\n    const element = elementDict[elementName];\n    if (element.dependents && element.dependents[0]) {\n      if (element.dependents[0].value) {\n        // handle value based case\n        dependencies[elementName] = {\n          oneOf: element.dependents.map((possibility: FormElement) => {\n            const childrenComponents: { [key: string]: any } = {};\n            const requiredValues: string[] = [];\n            possibility?.children?.forEach((child) => {\n              if (elementDict[child]) {\n                childrenComponents[child] = generateSchemaElementFromElement(\n                  elementDict[child],\n                );\n                if (elementDict[child].required) requiredValues.push(child);\n              }\n            });\n            return {\n              properties: {\n                [elementName]: possibility.value,\n                ...childrenComponents,\n              },\n              required: requiredValues,\n            };\n          }),\n        };\n      } else {\n        // handle definition based case\n        const childrenComponents: { [key: string]: any } = {};\n        const requiredValues: string[] = [];\n        element.dependents[0].children.forEach((child) => {\n          childrenComponents[child] = generateSchemaElementFromElement(\n            elementDict[child],\n          );\n          if (elementDict[child].required) requiredValues.push(child);\n        });\n        dependencies[elementName] = {\n          properties: childrenComponents,\n          required: requiredValues,\n        };\n      }\n    }\n    if (!dependentElements.has(elementName)) {\n      props[element.name] = generateSchemaElementFromElement(element);\n    }\n  });\n\n  newSchema.properties = props;\n  newSchema.dependencies = dependencies;\n  newSchema.required = elementArr\n    .filter(({ required, dependent }) => required && !dependent)\n    .map(({ name }) => name);\n\n  return newSchema;\n}\n\nexport function generateUiSchemaFromElementProps(\n  elementArr: Array<ElementProps>,\n  definitionUi: any,\n): { [key: string]: any; definitions?: { [key: string]: any } } {\n  if (!elementArr) return {};\n\n  const uiSchema: { [key: string]: any } = {};\n  const uiOrder: { [key: string]: any } = [];\n  const definitions = definitionUi;\n\n  elementArr.forEach((element) => {\n    uiOrder.push(element.name);\n    if (element.$ref !== undefined) {\n      // look for the reference\n      const pathArr =\n        typeof element.$ref === 'string' ? element.$ref.split('/') : [];\n      if (definitions && definitions[pathArr[2]]) {\n        uiSchema[element.name] = definitions[pathArr[2]];\n      }\n    }\n    if (element.propType === 'card' && element.uiOptions) {\n      Object.keys(element.uiOptions).forEach((uiOption) => {\n        if (!uiSchema[element.name]) uiSchema[element.name] = {};\n        if (uiOption.startsWith('ui:*')) {\n          uiSchema[element.name][uiOption.substring(4)] =\n            element.uiOptions[uiOption];\n        } else {\n          uiSchema[element.name][uiOption] = element.uiOptions[uiOption];\n        }\n      });\n    } else if (\n      element.propType === 'section' &&\n      Object.keys(element.uischema).length > 0\n    ) {\n      uiSchema[element.name] = element.uischema;\n    }\n  });\n\n  uiSchema['ui:order'] = uiOrder;\n\n  return uiSchema;\n}\n\nexport function getCardParameterInputComponentForType(\n  category: string,\n  allFormInputs: { [key: string]: FormInput },\n): CardComponentType {\n  return (\n    (allFormInputs[category] && allFormInputs[category].modalBody) ||\n    (() => null)\n  );\n}\n\n// takes in an array of Card Objects and updates both schemas\nexport function updateSchemas(\n  elementArr: ElementProps[],\n  parameters: {\n    schema: { [key: string]: any; definitions?: { [key: string]: any } };\n    uischema: { [key: string]: any; definitions?: { [key: string]: any } };\n    onChange: (\n      schema: { [key: string]: any },\n      uischema: { [key: string]: any },\n    ) => any;\n    definitionData?: { [key: string]: any };\n    definitionUi?: { [key: string]: any };\n  },\n) {\n  const { schema, uischema, onChange, definitionUi } = parameters;\n  const newSchema = Object.assign(\n    { ...schema },\n    generateSchemaFromElementProps(elementArr),\n  );\n\n  const newUiSchema: {\n    [key: string]: any;\n    definitions?: { [key: string]: any };\n  } = generateUiSchemaFromElementProps(elementArr, definitionUi);\n  if (uischema.definitions) {\n    newUiSchema.definitions = uischema.definitions;\n  }\n\n  // mandate that the type is an object if not already done\n  newSchema.type = 'object';\n  onChange(newSchema, newUiSchema);\n}\n\nexport const DEFAULT_INPUT_NAME = 'newInput';\n\n// ensure that each added block has a unique name\nfunction getIdFromElementsBlock(elements: Array<ElementProps>) {\n  const names = elements.map((element) => element.name);\n  const defaultNameLength = DEFAULT_INPUT_NAME.length;\n\n  return names.length > 0\n    ? Math.max(\n        ...names.map((name) => {\n          if (name.startsWith(DEFAULT_INPUT_NAME)) {\n            const index = name.substring(defaultNameLength, name.length);\n            const value = Number.parseInt(index);\n\n            if (!isNaN(value)) {\n              return value;\n            }\n          }\n\n          return 0;\n        }),\n      ) + 1\n    : 1;\n}\n\n// given an initial schema, update with a new card appended\nexport function addCardObj(parameters: AddFormObjectParametersType) {\n  const {\n    schema,\n    uischema,\n    mods,\n    onChange,\n    definitionData,\n    definitionUi,\n    index,\n    categoryHash,\n  } = parameters;\n  const newElementObjArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  const i = getIdFromElementsBlock(newElementObjArr);\n  const dataOptions = getNewElementDefaultDataOptions(i, mods);\n\n  const newElement: ElementProps = {\n    name: `${DEFAULT_INPUT_NAME}${i}`,\n    required: false,\n    dataOptions: dataOptions,\n    uiOptions: (mods && mods.newElementDefaultUiSchema) || {},\n    propType: 'card',\n    schema: {},\n    uischema: {},\n    neighborNames: [],\n  };\n\n  if (index !== undefined && index !== null) {\n    newElementObjArr.splice(index + 1, 0, newElement);\n  } else {\n    newElementObjArr.push(newElement);\n  }\n  updateSchemas(newElementObjArr, {\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    onChange,\n  });\n}\n\n// given an initial schema, update with a new section appended\nexport function addSectionObj(parameters: AddFormObjectParametersType) {\n  const {\n    schema,\n    uischema,\n    onChange,\n    definitionData,\n    definitionUi,\n    index,\n    categoryHash,\n  } = parameters;\n  const newElementObjArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  const i = getIdFromElementsBlock(newElementObjArr);\n\n  const newElement: ElementProps = {\n    name: `${DEFAULT_INPUT_NAME}${i}`,\n    required: false,\n    dataOptions: {\n      title: `New Input ${i}`,\n      type: 'object',\n      default: '',\n    },\n    uiOptions: {},\n    propType: 'section',\n    schema: { title: `New Input ${i}`, type: 'object' },\n    uischema: {},\n    neighborNames: [],\n  };\n\n  if (index !== undefined && index !== null) {\n    newElementObjArr.splice(index + 1, 0, newElement);\n  } else {\n    newElementObjArr.push(newElement);\n  }\n  updateSchemas(newElementObjArr, {\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    onChange,\n  });\n}\n\n// generate an array of Card and Section components from a schema\nexport function generateElementComponentsFromSchemas(parameters: {\n  schemaData: { [key: string]: any };\n  uiSchemaData: { [key: string]: any };\n  onChange: (\n    schema: { [key: string]: any },\n    uischema: { [key: string]: any },\n  ) => any;\n  definitionData?: { [key: string]: any };\n  definitionUi?: { [key: string]: any };\n  hideKey?: boolean;\n  path: string;\n  cardOpenArray: Array<boolean>;\n  setCardOpenArray: (newArr: Array<boolean>) => void;\n  allFormInputs: { [key: string]: FormInput };\n  mods?: Mods;\n  categoryHash: { [key: string]: string };\n  Card: CardType;\n  Section: SectionType;\n}): ReactNode[] {\n  const {\n    schemaData,\n    uiSchemaData,\n    onChange,\n    definitionData,\n    definitionUi,\n    hideKey,\n    path,\n    cardOpenArray,\n    setCardOpenArray,\n    allFormInputs,\n    mods,\n    categoryHash,\n    Card,\n    Section,\n  } = parameters;\n\n  const schema = parse(stringify(schemaData));\n  const uischema = parse(stringify(uiSchemaData));\n\n  if (!schema.properties) return [];\n  const elementPropArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  const elementList = elementPropArr.map((elementProp, index) => {\n    const MIN_CARD_OPEN_ARRAY_LENGTH = index + 1;\n    const currentLength = cardOpenArray.length;\n    const addProperties = {\n      schema,\n      uischema,\n      mods,\n      onChange,\n      definitionData: definitionData || {},\n      definitionUi: definitionUi || {},\n      index,\n      categoryHash,\n    };\n\n    if (currentLength < MIN_CARD_OPEN_ARRAY_LENGTH) {\n      cardOpenArray.push(\n        ...new Array(MIN_CARD_OPEN_ARRAY_LENGTH - currentLength).fill(false),\n      );\n    }\n    const expanded =\n      (cardOpenArray && index < cardOpenArray.length && cardOpenArray[index]) ||\n      false;\n    if (elementProp.propType === 'card') {\n      // choose the appropriate type specific parameters\n      const TypeSpecificParameters = getCardParameterInputComponentForType(\n        elementProp.dataOptions.category || 'string',\n        allFormInputs,\n      );\n\n      // add a fully defined card component to the list of components\n      return (\n        <Card\n          componentProps={\n            Object.assign(\n              {\n                name: elementPropArr[index].name,\n                required: elementPropArr[index].required,\n                hideKey,\n                path: `${path}_${elementPropArr[index].name}`,\n                definitionData,\n                definitionUi,\n                neighborNames: elementPropArr[index].neighborNames,\n                dependents: elementPropArr[index].dependents,\n                dependent: elementPropArr[index].dependent,\n                parent: elementPropArr[index].parent,\n              },\n              elementPropArr[index].uiOptions,\n              elementPropArr[index].dataOptions,\n            ) as CardComponentPropsType\n          }\n          key={`${path}_${elementPropArr[index].name}`}\n          TypeSpecificParameters={TypeSpecificParameters}\n          onChange={(newCardObj: { [key: string]: any }) => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n\n            // extract uiOptions and other properties\n            const newDataProps: { [key: string]: any } = {};\n            const newUiProps: { [key: string]: any } = {};\n            Object.keys(newCardObj).forEach((propName) => {\n              if (propName.startsWith('ui:')) {\n                if (propName.startsWith('ui:*')) {\n                  newUiProps[propName.substring(4)] = newCardObj[propName];\n                } else {\n                  newUiProps[propName] = newCardObj[propName];\n                }\n              } else if (\n                ![\n                  'name',\n                  'required',\n                  'neighborNames',\n                  'dependents',\n                  'dependent',\n                  'parent',\n                ].includes(propName)\n              ) {\n                newDataProps[propName] = newCardObj[propName];\n              }\n            });\n\n            if (newElementObjArr[index].propType === 'card') {\n              const oldElement = newElementObjArr[index];\n              newElementObjArr[index] = {\n                ...oldElement,\n                dataOptions: newDataProps,\n                uiOptions: newUiProps,\n                required: newCardObj.required,\n                dependents: newCardObj.dependents,\n                dependent: newCardObj.dependent,\n                parent: newCardObj.parent,\n                name: newCardObj.name,\n                $ref: newCardObj.$ref,\n                propType: 'card',\n              };\n            } else {\n              throw new Error('Card editing non card element');\n            }\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onDelete={() => {\n            // splice out this index from the card array\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr.splice(index, 1);\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              ...cardOpenArray.slice(index + 1),\n            ]);\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveUp={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === 0) return;\n\n            const tempBlock = newElementObjArr[index - 1];\n            newElementObjArr[index - 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveDown={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === elementPropArr.length - 1) return;\n\n            const tempBlock = newElementObjArr[index + 1];\n            newElementObjArr[index + 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          addElem={(choice: string) => {\n            if (choice === 'card') {\n              addCardObj(addProperties);\n            } else if (choice === 'section') {\n              addSectionObj(addProperties);\n            }\n            setCardOpenArray([...cardOpenArray, false]);\n          }}\n          cardOpen={expanded}\n          setCardOpen={(newState: boolean) =>\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              newState,\n              ...cardOpenArray.slice(index + 1),\n            ])\n          }\n          allFormInputs={allFormInputs}\n          mods={mods}\n          addProperties={addProperties}\n        />\n      );\n    } else if (elementProp.propType === 'section') {\n      // create a section with the appropriate schemas here\n      const addProperties = {\n        schema,\n        uischema,\n        mods,\n        onChange,\n        definitionData: definitionData || {},\n        definitionUi: definitionUi || {},\n        index,\n        categoryHash,\n      };\n      return (\n        <Section\n          schema={elementProp.schema}\n          uischema={elementProp.uischema}\n          onChange={(\n            newSchema: { [key: string]: any },\n            newUiSchema: { [key: string]: any },\n            newRef?: string,\n          ) => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n\n            const oldSection = newElementObjArr[index];\n\n            newElementObjArr[index] = {\n              ...oldSection,\n              schema: newSchema,\n              uischema: newUiSchema,\n              propType: 'section',\n            };\n\n            if (newRef) newElementObjArr[index].$ref = newRef;\n\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onNameChange={(newName: string) => {\n            const oldSection = elementProp;\n\n            // check if newName overlaps with an existing name\n            if (elementPropArr.map((elem) => elem.name).includes(newName))\n              return;\n\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr[index] = {\n              ...oldSection,\n              name: newName,\n            };\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onRequireToggle={() => {\n            const oldSection = elementProp;\n\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr[index] = {\n              ...oldSection,\n              required: !oldSection.required,\n            };\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onDependentsChange={(\n            newDependents: Array<{\n              children: Array<string>;\n              value?: any;\n            }>,\n          ) => {\n            const oldSection = elementProp;\n\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr[index] = {\n              ...oldSection,\n              dependents: newDependents,\n            };\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              onChange,\n              definitionData,\n              definitionUi,\n            });\n          }}\n          onDelete={() => {\n            // splice out this index from the card array\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr.splice(index, 1);\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              ...cardOpenArray.slice(index + 1),\n            ]);\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveUp={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === 0) return;\n\n            const tempBlock = newElementObjArr[index - 1];\n            newElementObjArr[index - 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveDown={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === elementPropArr.length - 1) return;\n\n            const tempBlock = newElementObjArr[index + 1];\n            newElementObjArr[index + 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          name={elementProp.name}\n          key={`${path}_${elementPropArr[index].name}`}\n          required={elementProp.required}\n          path={`${path}_${elementProp.name}`}\n          definitionData={definitionData || {}}\n          definitionUi={definitionUi || {}}\n          hideKey={hideKey}\n          reference={elementProp.$ref}\n          neighborNames={elementProp.neighborNames}\n          dependents={elementProp.dependents!}\n          dependent={elementProp.dependent}\n          parent={elementProp.parent}\n          parentProperties={addProperties}\n          cardOpen={expanded}\n          setCardOpen={(newState: boolean) =>\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              newState,\n              ...cardOpenArray.slice(index + 1),\n            ])\n          }\n          allFormInputs={allFormInputs}\n          categoryHash={categoryHash}\n          mods={mods}\n        />\n      );\n    } else {\n      return (\n        <div>\n          <h2> Error parsing element </h2>\n        </div>\n      );\n    }\n  });\n\n  return elementList;\n}\n\n// function called when drag and drop ends\nexport function onDragEnd(\n  result: any,\n  details: {\n    schema: { [key: string]: any };\n    uischema: { [key: string]: any };\n    onChange: (\n      schema: { [key: string]: any },\n      uischema: { [key: string]: any },\n    ) => any;\n    definitionData?: { [key: string]: any };\n    definitionUi?: { [key: string]: any };\n    categoryHash: { [key: string]: string };\n  },\n) {\n  const {\n    schema,\n    uischema,\n    onChange,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  } = details;\n  const src = result.source.index;\n  const dest = result.destination.index;\n  const newElementObjArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  const tempBlock = newElementObjArr[src];\n  newElementObjArr[src] = newElementObjArr[dest];\n  newElementObjArr[dest] = tempBlock;\n\n  updateSchemas(newElementObjArr, {\n    schema,\n    uischema,\n    definitionData: definitionData || {},\n    definitionUi: definitionUi || {},\n    onChange,\n  });\n}\n\n// helper function to recursively update sections\nfunction propagateElementChange(\n  elementArr: ElementProps[],\n  definitionData: { [key: string]: any },\n  definitionUi: { [key: string]: any },\n  categoryHash: { [key: string]: string },\n) {\n  const updatedElementArr: ElementProps[] = [];\n  elementArr.forEach((element) => {\n    // update section and it's children\n    if (element.propType === 'section') {\n      const childrenElements = generateElementPropsFromSchemas({\n        schema: element.schema,\n        uischema: element.uischema,\n        definitionData,\n        definitionUi,\n        categoryHash,\n      });\n      const updatedChildren = propagateElementChange(\n        childrenElements,\n        definitionData,\n        definitionUi,\n        categoryHash,\n      );\n      const newUiSchema = Object.assign(\n        { ...element.uischema },\n        generateSchemaFromElementProps(updatedChildren),\n      );\n      const newSchema = Object.assign(\n        { ...element.schema },\n        generateSchemaFromElementProps(updatedChildren),\n      );\n      const newElement = {\n        ...element,\n        schema: newSchema,\n        uischema: newUiSchema,\n      };\n      updatedElementArr.push(newElement);\n    } else {\n      updatedElementArr.push(element);\n    }\n  });\n  return updatedElementArr;\n}\n\n// propogate changes in a schema and ui schema with updated definitions but outdated body componenents\nexport function propagateDefinitionChanges(\n  schema: { [key: string]: any },\n  uischema: { [key: string]: any },\n  onChange: (\n    schema: { [key: string]: any },\n    uischema: { [key: string]: any },\n  ) => void,\n  categoryHash: { [key: string]: string },\n) {\n  const definitionData = schema.definitions;\n  const definitionUi = uischema.definitions;\n  const bodyElements = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n  const updatedBodyElements = propagateElementChange(\n    bodyElements,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  );\n\n  updateSchemas(updatedBodyElements, {\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    onChange,\n  });\n}\n\n// Member-wise subtraction of array2 from array1\nexport function subtractArray(array1: string[], array2?: string[]): string[] {\n  if (array2 === undefined || array2 === null) return array1;\n\n  // Create a map for performant array filtering on large arrays\n  const keys: { [key: string]: any } = array2.reduce(\n    (acc, curr) => ({\n      ...acc,\n      [curr]: true,\n    }),\n    {},\n  );\n\n  return array1.filter((v: string) => !keys[v]);\n}\n\nexport function excludeKeys(\n  obj: { [key: string]: any },\n  keys?: string[] | null,\n) {\n  if (!keys) return { ...obj };\n\n  // Create a map for performant object filtering\n  const keysHash: { [key: string]: any } = keys.reduce(\n    (acc, curr) => ({\n      ...acc,\n      [curr]: true,\n    }),\n    {},\n  );\n\n  // Create a map for performant array filtering\n  return Object.keys(obj).reduce(\n    (acc, curr) => (keysHash[curr] ? acc : { ...acc, [curr]: obj[curr] }),\n    {},\n  );\n}\n\nexport function getNewElementDefaultDataOptions(\n  i: number,\n  mods?: Mods,\n): DataOptions {\n  if (mods && mods.newElementDefaultDataOptions !== undefined) {\n    const title = `${mods.newElementDefaultDataOptions.title} ${i}`;\n    return { ...mods.newElementDefaultDataOptions, ...{ title: title } };\n  } else {\n    return {\n      title: `New Input ${i}`,\n      type: 'string',\n      default: '',\n    };\n  }\n}\n\nexport function getRandomId(): string {\n  const chars = [\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'u',\n    'v',\n    'w',\n    'x',\n    'y',\n    'z',\n  ];\n  const numberOfChars = chars.length;\n  const randomIdLength = 50;\n\n  return Array.from({ length: randomIdLength })\n    .map(() => chars[Math.floor(Math.random() * numberOfChars)])\n    .join('');\n}\n","import React, { useState, ReactElement } from 'react';\nimport { getRandomId } from '../utils';\nimport Tooltip from '../Tooltip';\n\ninterface DependencyWarningProps {\n  parameters: {\n    [key: string]: any;\n    name?: string;\n    dependents?: Array<{\n      children: Array<string>;\n      value?: any;\n    }>;\n    type?: string;\n    enum?: Array<string | number>;\n    neighborNames?: Array<string>;\n    schema?: string;\n  };\n}\n\n// warning message if not all possibilities specified\nexport default function DependencyWarning({\n  parameters,\n}: DependencyWarningProps): ReactElement | null {\n  const [elementId] = useState(getRandomId());\n  if (\n    parameters.enum &&\n    parameters.dependents &&\n    parameters.dependents.length &&\n    parameters.dependents[0].value\n  ) {\n    // get the set of defined enum values\n    const definedVals = new Set([]);\n    (parameters.dependents || []).forEach((possibility) => {\n      if (possibility.value && possibility.value.enum)\n        possibility.value.enum.forEach((val: never) => definedVals.add(val));\n    });\n    const undefinedVals: never[] = [];\n    if (Array.isArray(parameters.enum))\n      parameters.enum.forEach((val) => {\n        if (!definedVals.has(val as never)) undefinedVals.push(val as never);\n      });\n    if (undefinedVals.length === 0) return null;\n    return (\n      <React.Fragment>\n        <p>\n          Warning! The following values do not have associated dependency\n          values:{' '}\n          <Tooltip\n            id={`${elementId}_valuewarning`}\n            type='help'\n            text='Each possible value for a value-based dependency must be defined to work properly'\n          />\n        </p>\n\n        <ul>\n          {undefinedVals.map((val, index) => (\n            <li key={index}>{val}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  return null;\n}\n","import React, { useState, ReactElement } from 'react';\nimport Select from 'react-select';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\nimport { getRandomId } from '../utils';\n\n// a field that lets you choose adjacent blocks\nexport default function CardSelector({\n  possibleChoices,\n  chosenChoices,\n  onChange,\n  placeholder,\n  path,\n}: {\n  possibleChoices: Array<string>;\n  chosenChoices: Array<string>;\n  onChange: (chosenChoices: Array<string>) => void;\n  placeholder: string;\n  path: string;\n}): ReactElement {\n  const [elementId] = useState(getRandomId());\n  return (\n    <React.Fragment>\n      <ul>\n        {chosenChoices.map((chosenChoice, index) => (\n          <li key={`${elementId}_neighbor_${index}`}>\n            {chosenChoice}{' '}\n            <FontAwesomeIcon\n              icon={faTimes}\n              onClick={() =>\n                onChange([\n                  ...chosenChoices.slice(0, index),\n                  ...chosenChoices.slice(index + 1),\n                ])\n              }\n            />\n          </li>\n        ))}\n      </ul>\n      <Select\n        value={{\n          value: '',\n          label: '',\n        }}\n        placeholder={placeholder}\n        options={possibleChoices\n          .filter((choice) => !chosenChoices.includes(choice))\n          .map((choice) => ({\n            value: choice,\n            label: choice,\n          }))}\n        onChange={(val: any) => {\n          onChange([...chosenChoices, val.value]);\n        }}\n        className='card-modal-select'\n      />\n    </React.Fragment>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport { Input } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from './FontAwesomeIcon';\n\nconst useStyles = createUseStyles({\n  cardEnumOption: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    marginBottom: '.5em',\n    '& input': { width: '80%', marginRight: '1em', marginBottom: 0 },\n    '& .delete-button': {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n    },\n  },\n});\n\ninterface CardEnumOptionsProps {\n  initialValues: Array<any>;\n  names?: Array<string>;\n  showNames: boolean;\n  onChange: (newEnums: Array<any>, newEnumNames?: Array<string>) => void;\n  type: string;\n}\n\n// Input field corresponding to an array of values, add and remove\nexport default function CardEnumOptions({\n  initialValues,\n  names,\n  showNames,\n  onChange,\n  type,\n}: CardEnumOptionsProps): ReactElement {\n  const classes = useStyles();\n\n  const possibleValues = [];\n  for (let index = 0; index < initialValues.length; index += 1) {\n    const value = initialValues[index];\n    let name = `${value}`;\n    if (names && index < names.length) name = names[index];\n    possibleValues.push(\n      <div key={index} className={classes.cardEnumOption}>\n        <Input\n          value={value === undefined || value === null ? '' : value}\n          placeholder='Possible Value'\n          key={`val-${index}`}\n          type={type === 'string' ? 'text' : 'number'}\n          onChange={(ev: any) => {\n            let newVal;\n            switch (type) {\n              case 'string':\n                newVal = ev.target.value;\n                break;\n              case 'number':\n              case 'integer':\n                newVal = parseFloat(ev.target.value);\n                if (Number.isInteger(newVal))\n                  newVal = parseInt(ev.target.value, 10);\n                // TODO: Possible unused condition, since we know it is a number or integer in this case.\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore\n                if (Number.isNaN(newVal)) newVal = type === 'string' ? '' : 0;\n                break;\n              default:\n                throw new Error(`Enum called with unknown type ${type}`);\n            }\n            onChange(\n              [\n                ...initialValues.slice(0, index),\n                newVal,\n                ...initialValues.slice(index + 1),\n              ],\n              names,\n            );\n          }}\n          className='card-text'\n        />\n        <Input\n          value={name || ''}\n          placeholder='Label'\n          key={`name-${index}`}\n          type='text'\n          onChange={(ev: any) => {\n            if (names)\n              onChange(initialValues, [\n                ...names.slice(0, index),\n                ev.target.value,\n                ...names.slice(index + 1),\n              ]);\n          }}\n          className='card-text'\n          style={{ display: showNames ? 'initial' : 'none' }}\n        />\n        <div className='delete-button'>\n          <FontAwesomeIcon\n            icon={faTimes}\n            onClick={() => {\n              // remove this value\n              onChange(\n                [\n                  ...initialValues.slice(0, index),\n                  ...initialValues.slice(index + 1),\n                ],\n                names\n                  ? [...names.slice(0, index), ...names.slice(index + 1)]\n                  : undefined,\n              );\n            }}\n          />\n        </div>\n      </div>,\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {possibleValues}\n      <FontAwesomeIcon\n        icon={faPlus}\n        onClick={() => {\n          // add a new dropdown option\n          onChange(\n            [...initialValues, type === 'string' ? '' : 0],\n            names ? [...names, ''] : undefined,\n          );\n        }}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { useState, ReactElement } from 'react';\nimport { Input } from 'reactstrap';\nimport { faTimes, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport CardEnumOptions from '../CardEnumOptions';\nimport CardSelector from './CardSelector';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\nimport { getRandomId } from '../utils';\n\ntype combinationValue = string | number | any[] | { [key: string]: any };\n\n// handle value options for different card types\nexport default function ValueSelector({\n  possibility,\n  onChange,\n  parentEnums,\n  parentType,\n  parentName,\n  parentSchema,\n  path,\n}: {\n  possibility: {\n    children: Array<string>;\n    value?: any;\n  };\n  onChange: (newPossibility: { children: Array<string>; value?: any }) => void;\n  parentEnums?: Array<string | number>;\n  parentType?: string;\n  parentName?: string;\n  parentSchema?: any;\n  path: string;\n}): ReactElement {\n  const [elementId] = useState(getRandomId());\n  if (possibility.value) {\n    // enum type\n    if (parentEnums) {\n      const enumType = typeof parentEnums[0] === 'number' ? 'number' : 'string';\n      if (enumType === 'string')\n        return (\n          <CardSelector\n            possibleChoices={parentEnums.map((val) => `${val}`)}\n            chosenChoices={possibility.value.enum}\n            onChange={(chosenChoices: Array<string>) =>\n              onChange({ ...possibility, value: { enum: chosenChoices } })\n            }\n            placeholder='Allowed value'\n            path={path}\n          />\n        );\n      if (enumType === 'number')\n        return (\n          <CardSelector\n            possibleChoices={parentEnums.map((val) => `${val}`)}\n            chosenChoices={possibility.value.enum}\n            onChange={(chosenChoices: Array<string>) =>\n              onChange({\n                ...possibility,\n                value: {\n                  enum: chosenChoices.map((val) => Number.parseFloat(val)),\n                },\n              })\n            }\n            placeholder='Allowed value'\n            path={path}\n          />\n        );\n    }\n    // check box type\n    if (parentType === 'boolean') {\n      return (\n        <FBCheckbox\n          onChangeValue={() => {\n            if (possibility.value.enum && possibility.value.enum[0]) {\n              onChange({\n                ...possibility,\n                value: { enum: [false] },\n              });\n            } else {\n              onChange({\n                ...possibility,\n                value: { enum: [true] },\n              });\n            }\n          }}\n          isChecked={possibility.value.enum && possibility.value.enum[0]}\n          label={parentName}\n        />\n      );\n    }\n    // object type\n    if (parentType === 'object') {\n      const enumArr: Array<{\n        [key: string]: combinationValue;\n      }> = possibility.value.enum;\n\n      const getInput = (\n        val: string | number | any[] | { [key: string]: any },\n        index: number,\n        key: string,\n      ) => {\n        switch (typeof val) {\n          case 'string':\n            return (\n              <Input\n                value={val || ''}\n                placeholder='String value'\n                type='text'\n                onChange={(ev: any) => {\n                  const newVal = ev.target.value;\n                  const oldCombo = possibility.value.enum[index];\n                  onChange({\n                    ...possibility,\n                    value: {\n                      enum: [\n                        ...enumArr.slice(0, index),\n                        { ...oldCombo, [key]: newVal },\n                        ...enumArr.slice(index + 1),\n                      ],\n                    },\n                  });\n                }}\n                className='card-modal-text'\n              />\n            );\n            break;\n          case 'number':\n            return (\n              <Input\n                value={val || ''}\n                placeholder='Number value'\n                type='number'\n                onChange={(ev: any) => {\n                  const newVal = Number.parseFloat(ev.target.value);\n                  const oldCombo = possibility.value.enum[index];\n                  onChange({\n                    ...possibility,\n                    value: {\n                      enum: [\n                        ...enumArr.slice(0, index),\n                        { ...oldCombo, [key]: newVal },\n                        ...enumArr.slice(index + 1),\n                      ],\n                    },\n                  });\n                }}\n                className='card-modal-number'\n              />\n            );\n            break;\n          // TODO: arrays are classified as objects - this may be unreachable code.\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          case 'array':\n            return (\n              <Input\n                value={JSON.stringify(val) || ''}\n                placeholder='Array in JSON'\n                type='textarea'\n                onChange={(ev: any) => {\n                  let newVal = val;\n                  try {\n                    newVal = JSON.parse(ev.target.value);\n                  } catch (error) {\n                    // eslint-disable-next-line no-console\n                    console.error('invalid JSON array input');\n                  }\n                  const oldCombo = possibility.value.enum[index];\n                  onChange({\n                    ...possibility,\n                    value: {\n                      enum: [\n                        ...enumArr.slice(0, index),\n                        { ...oldCombo, [key]: newVal },\n                        ...enumArr.slice(index + 1),\n                      ],\n                    },\n                  });\n                }}\n                className='card-modal-text'\n              />\n            );\n            break;\n          case 'object':\n            return (\n              <Input\n                value={JSON.stringify(val) || ''}\n                placeholder='Object in JSON'\n                type='textarea'\n                onChange={(ev: any) => {\n                  let newVal = val;\n                  try {\n                    newVal = JSON.parse(ev.target.value);\n                  } catch (error) {\n                    // eslint-disable-next-line no-console\n                    console.error('invalid JSON object input');\n                  }\n                  const oldCombo = possibility.value.enum[index];\n                  onChange({\n                    ...possibility,\n                    value: {\n                      enum: [\n                        ...enumArr.slice(0, index),\n                        { ...oldCombo, [key]: newVal },\n                        ...enumArr.slice(index + 1),\n                      ],\n                    },\n                  });\n                }}\n                className='card-modal-text'\n              />\n            );\n            break;\n        }\n      };\n\n      return (\n        <div>\n          {enumArr.map((combination, index) => (\n            <li key={`${elementId}_possibleValue${index}`}>\n              {Object.keys(combination).map((key) => {\n                const val: combinationValue = combination[key];\n                return (\n                  <div key={key}>\n                    <h5>{key}:</h5>\n                    {getInput(val, index, key)}\n                  </div>\n                );\n              })}\n              <FontAwesomeIcon\n                icon={faTimes}\n                onClick={() =>\n                  onChange({\n                    ...possibility,\n                    value: {\n                      enum: [\n                        ...enumArr.slice(0, index),\n                        ...enumArr.slice(index + 1),\n                      ],\n                    },\n                  })\n                }\n              />\n            </li>\n          ))}\n          <FontAwesomeIcon\n            icon={faPlus}\n            onClick={() => {\n              const newCase: { [key: string]: any } = {};\n              const propArr: { [key: string]: any } = parentSchema\n                ? parentSchema.properties\n                : {};\n              Object.keys(propArr).forEach((key) => {\n                if (\n                  propArr[key].type === 'number' ||\n                  propArr[key].type === 'integer'\n                ) {\n                  newCase[key] = 0;\n                } else if (propArr[key].type === 'array' || propArr[key].enum) {\n                  newCase[key] = [];\n                } else if (\n                  propArr[key].type === 'object' ||\n                  propArr[key].properties\n                ) {\n                  newCase[key] = {};\n                } else {\n                  newCase[key] = '';\n                }\n              });\n              onChange({\n                ...possibility,\n                value: { enum: [...enumArr, newCase] },\n              });\n            }}\n          />\n        </div>\n      );\n    }\n    return (\n      <CardEnumOptions\n        initialValues={possibility.value.enum}\n        onChange={(newEnum: Array<any>) =>\n          onChange({ ...possibility, value: { enum: newEnum } })\n        }\n        type={parentType || 'string'}\n        showNames={false}\n      />\n    );\n  } else {\n    return <h5> Appear if defined </h5>;\n  }\n}\n","import React, { useState, ReactElement } from 'react';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport Tooltip from '../Tooltip';\nimport CardSelector from './CardSelector';\nimport ValueSelector from './ValueSelector';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\nimport { getRandomId } from '../utils';\n\n// a possible dependency\nexport default function DependencyPossibility({\n  possibility,\n  neighborNames,\n  path,\n  onChange,\n  onDelete,\n  parentEnums,\n  parentType,\n  parentName,\n  parentSchema,\n}: {\n  possibility: {\n    children: Array<string>;\n    value?: any;\n  };\n  neighborNames: Array<string>;\n  path: string;\n  onChange: (newPossibility: { children: Array<string>; value?: any }) => void;\n  onDelete: () => void;\n  parentEnums?: Array<string | number>;\n  parentType?: string;\n  parentName?: string;\n  parentSchema?: any;\n}): ReactElement {\n  const [elementId] = useState(getRandomId());\n  return (\n    <div className='form-dependency-condition'>\n      <h5>\n        Display the following:{' '}\n        <Tooltip\n          id={`${elementId}_bulk`}\n          type='help'\n          text='Choose the other form elements that depend on this one'\n        />\n      </h5>\n      <CardSelector\n        possibleChoices={\n          neighborNames.filter((name) => name !== parentName) || []\n        }\n        chosenChoices={possibility.children}\n        onChange={(chosenChoices: Array<string>) =>\n          onChange({ ...possibility, children: [...chosenChoices] })\n        }\n        placeholder='Choose a dependent...'\n        path={path}\n      />\n      <h5>\n        If \"{parentName}\" has {possibility.value ? 'the value:' : 'a value.'}\n      </h5>\n      <div style={{ display: possibility.value ? 'block' : 'none' }}>\n        <ValueSelector\n          possibility={possibility}\n          onChange={(newPossibility: {\n            children: Array<string>;\n            value?: any;\n          }) => onChange(newPossibility)}\n          parentEnums={parentEnums}\n          parentType={parentType}\n          parentName={parentName}\n          parentSchema={parentSchema}\n          path={path}\n        />\n      </div>\n      <FontAwesomeIcon icon={faTimes} onClick={() => onDelete()} />\n    </div>\n  );\n}\n","import React, { useState, ReactElement } from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport FBRadioGroup from '../radio/FBRadioGroup';\nimport Tooltip from '../Tooltip';\nimport DependencyWarning from './DependencyWarning';\nimport DependencyPossibility from './DependencyPossibility';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\nimport { getRandomId } from '../utils';\n\nconst useStyles = createUseStyles({\n  dependencyField: {\n    '& .fa': { cursor: 'pointer' },\n    '& .plus': { marginLeft: '1em' },\n    '& h4': { marginBottom: '.5em' },\n    '& h5': { fontSize: '1em' },\n    '& .form-dependency-select': { fontSize: '0.75em', marginBottom: '1em' },\n    '& .form-dependency-conditions': {\n      textAlign: 'left',\n      '& .form-dependency-condition': {\n        padding: '1em',\n        border: '1px solid gray',\n        borderRadius: '4px',\n        margin: '1em',\n        '& *': { textAlign: 'initial' },\n      },\n    },\n    '& p': { fontSize: '0.75em' },\n    '& .fb-radio-button': {\n      display: 'block',\n    },\n  },\n});\n\n// checks whether an array corresponds to oneOf dependencies\nfunction checkIfValueBasedDependency(\n  dependents: Array<{\n    children: Array<string>;\n    value?: any;\n  }>,\n) {\n  let valueBased = true;\n  if (dependents && Array.isArray(dependents) && dependents.length > 0) {\n    dependents.forEach((possibility) => {\n      if (!possibility.value || !possibility.value.enum) {\n        valueBased = false;\n      }\n    });\n  } else {\n    valueBased = false;\n  }\n\n  return valueBased;\n}\n\ntype DependencyParams = {\n  [key: string]: any;\n  name?: string;\n  dependents?: Array<{\n    children: Array<string>;\n    value?: any;\n  }>;\n  type?: string;\n  enum?: Array<string | number>;\n  neighborNames?: Array<string>;\n  schema?: any;\n};\n\nexport default function DependencyField({\n  parameters,\n  onChange,\n}: {\n  parameters: DependencyParams;\n  onChange: (newParams: DependencyParams) => void;\n}): ReactElement {\n  const [elementId] = useState(getRandomId());\n  const classes = useStyles();\n  const valueBased = checkIfValueBasedDependency(parameters.dependents || []);\n  return (\n    <div className={`form-dependency ${classes.dependencyField}`}>\n      <h4>\n        Dependencies{' '}\n        <Tooltip\n          id={`${elementId}_dependent`}\n          type='help'\n          text='Control whether other form elements show based on this one'\n        />\n      </h4>\n      {!!parameters.dependents && parameters.dependents.length > 0 && (\n        <React.Fragment>\n          <FBRadioGroup\n            defaultValue={valueBased ? 'value' : 'definition'}\n            horizontal={false}\n            options={[\n              {\n                value: 'definition',\n                label: 'Any value dependency',\n              },\n              {\n                value: 'value',\n                label: (\n                  <React.Fragment>\n                    Specific value dependency{' '}\n                    <Tooltip\n                      id={`${elementId}_valuebased`}\n                      type='help'\n                      text=\"Specify whether these elements should show based on this element's value\"\n                    />\n                  </React.Fragment>\n                ),\n              },\n            ]}\n            onChange={(selection) => {\n              if (parameters.dependents) {\n                const newDependents = [...parameters.dependents];\n                if (selection === 'definition') {\n                  parameters.dependents.forEach((possibility, index) => {\n                    newDependents[index] = {\n                      ...possibility,\n                      value: undefined,\n                    };\n                  });\n                } else {\n                  parameters.dependents.forEach((possibility, index) => {\n                    newDependents[index] = {\n                      ...possibility,\n                      value: { enum: [] },\n                    };\n                  });\n                }\n                onChange({\n                  ...parameters,\n                  dependents: newDependents,\n                });\n              }\n            }}\n          />\n        </React.Fragment>\n      )}\n      <DependencyWarning parameters={parameters} />\n      <div className='form-dependency-conditions'>\n        {parameters.dependents\n          ? parameters.dependents.map((possibility, index) => (\n              <DependencyPossibility\n                possibility={possibility}\n                neighborNames={parameters.neighborNames || []}\n                parentEnums={parameters.enum}\n                parentType={parameters.type}\n                parentName={parameters.name}\n                parentSchema={parameters.schema}\n                path={parameters.path}\n                key={`${elementId}_possibility${index}`}\n                onChange={(newPossibility: {\n                  children: Array<string>;\n                  value?: any;\n                }) => {\n                  const newDependents = parameters.dependents\n                    ? [...parameters.dependents]\n                    : [];\n                  newDependents[index] = newPossibility;\n                  onChange({\n                    ...parameters,\n                    dependents: newDependents,\n                  });\n                }}\n                onDelete={() => {\n                  const newDependents = parameters.dependents\n                    ? [...parameters.dependents]\n                    : [];\n                  onChange({\n                    ...parameters,\n                    dependents: [\n                      ...newDependents.slice(0, index),\n                      ...newDependents.slice(index + 1),\n                    ],\n                  });\n                }}\n              />\n            ))\n          : ''}\n\n        <span className='plus' id={`${elementId}_adddependency`}>\n          <FontAwesomeIcon\n            icon={faPlus}\n            onClick={() => {\n              const newDependents = parameters.dependents\n                ? [...parameters.dependents]\n                : [];\n              newDependents.push({\n                children: [],\n                value: valueBased ? { enum: [] } : undefined,\n              });\n              onChange({\n                ...parameters,\n                dependents: newDependents,\n              });\n            }}\n          />\n        </span>\n        <UncontrolledTooltip\n          placement='top'\n          target={`${elementId}_adddependency`}\n        >\n          Add another dependency relation linking this element and other form\n          elements\n        </UncontrolledTooltip>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  Modal,\n  ModalHeader,\n  Button,\n  ModalBody,\n  ModalFooter,\n  Input,\n} from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport DependencyField from './dependencies/DependencyField';\nimport type { CardModalType, CardComponentPropsType } from './types';\nimport Tooltip from './Tooltip';\n\nconst useStyles = createUseStyles({\n  cardModal: {\n    '& .card-modal-header': { paddingTop: '.5em', paddingBottom: '.5em' },\n    '& .card-modal-entries': { padding: '1em' },\n    '& h4, h5, p, label, li': { marginTop: '.5em', marginBottom: '.5em' },\n    '& h5, p, label, li': { fontSize: '14px' },\n    '& h4': { fontSize: '16px' },\n    '& h3': { fontSize: '18px', marginBottom: 0 },\n    '& .card-modal-entries > div > input': {\n      marginBottom: '1em',\n      height: '32px',\n    },\n    '& .fa-question-circle, & .fa-circle-question': { color: 'gray' },\n    '& .card-modal-boolean': {\n      '& *': { marginRight: '0.25em', height: 'auto', display: 'inline-block' },\n    },\n    '& .card-modal-select': {\n      '& input': { margin: '0', height: '20px' },\n      marginBottom: '1em',\n    },\n  },\n});\n\nconst CardModal: CardModalType = ({\n  componentProps,\n  onChange,\n  isOpen,\n  onClose,\n  TypeSpecificParameters,\n}) => {\n  const classes = useStyles();\n  // assign state values for parameters that should only change on hitting \"Save\"\n  const [componentPropsState, setComponentProps] = useState(componentProps);\n\n  useEffect(() => {\n    setComponentProps(componentProps);\n  }, [componentProps]);\n\n  return (\n    <Modal isOpen={isOpen} data-test='card-modal' className={classes.cardModal}>\n      <ModalHeader className='card-modal-header'>\n        <div style={{ display: componentProps.hideKey ? 'none' : 'initial' }}>\n          <h3>Additional Settings</h3>\n        </div>\n      </ModalHeader>\n      <ModalBody className='card-modal-entries'>\n        <TypeSpecificParameters\n          parameters={componentPropsState}\n          onChange={(newState: CardComponentPropsType) => {\n            setComponentProps({\n              ...componentPropsState,\n              ...newState,\n            });\n          }}\n        />\n        <div>\n          <h4>\n            Column Size{' '}\n            <a\n              href='https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              <Tooltip\n                id='column_size_tooltip'\n                type='help'\n                text='Set the column size of the input'\n              />\n            </a>\n          </h4>\n          <Input\n            value={\n              componentPropsState['ui:column']\n                ? componentPropsState['ui:column']\n                : ''\n            }\n            placeholder='Column size'\n            key='ui:column'\n            type='number'\n            min={0}\n            onChange={(ev) => {\n              setComponentProps({\n                ...componentPropsState,\n                'ui:column': ev.target.value,\n              });\n            }}\n            className='card-modal-text'\n          />\n        </div>\n        <DependencyField\n          parameters={componentPropsState}\n          onChange={(newState) => {\n            setComponentProps({\n              ...componentPropsState,\n              ...newState,\n            });\n          }}\n        />\n      </ModalBody>\n      <ModalFooter>\n        <Button\n          onClick={() => {\n            onClose();\n            onChange(componentPropsState);\n          }}\n          color='primary'\n        >\n          Save\n        </Button>\n        <Button\n          onClick={() => {\n            onClose();\n            setComponentProps(componentProps);\n          }}\n          color='secondary'\n        >\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default CardModal;\n","import React, { FC } from 'react';\nimport { getCardBody } from './utils';\nimport type { Mods, FormInput, CardComponentPropsType } from './types';\n\ninterface GeneralParameterInputsProps {\n  category: string;\n  parameters: CardComponentPropsType;\n  onChange: (newParams: CardComponentPropsType) => void;\n  mods?: Mods;\n  allFormInputs: { [key: string]: FormInput };\n}\n\n// specify the inputs required for any type of object\nconst GeneralParameterInputs: FC<GeneralParameterInputsProps> = ({\n  category,\n  parameters,\n  onChange,\n  mods,\n  allFormInputs,\n}) => {\n  const CardBody = getCardBody(category, allFormInputs);\n  return (\n    <div>\n      <CardBody parameters={parameters} onChange={onChange} mods={mods || {}} />\n    </div>\n  );\n};\n\nexport default GeneralParameterInputs;\n","import React, { ReactElement } from 'react';\nimport Select from 'react-select';\nimport { Input, FormGroup, FormFeedback } from 'reactstrap';\nimport classnames from 'classnames';\nimport GeneralParameterInputs from './GeneralParameterInputs';\nimport {\n  defaultUiProps,\n  defaultDataProps,\n  categoryToNameMap,\n  categoryType,\n  subtractArray,\n  getRandomId,\n} from './utils';\nimport type {\n  Mods,\n  ModLabels,\n  FormInput,\n  CardComponentPropsType,\n} from './types';\nimport Tooltip from './Tooltip';\n\n// specify the inputs required for any type of object\nexport default function CardGeneralParameterInputs({\n  parameters,\n  onChange,\n  allFormInputs,\n  mods,\n  showObjectNameInput = true,\n}: {\n  parameters: CardComponentPropsType;\n  onChange: (newParams: CardComponentPropsType) => void;\n  mods?: Mods;\n  allFormInputs: { [key: string]: FormInput };\n  showObjectNameInput?: boolean;\n}): ReactElement {\n  const [keyState, setKeyState] = React.useState(parameters.name);\n  const [keyError, setKeyError] = React.useState<null | string>(null);\n  const [titleState, setTitleState] = React.useState(parameters.title);\n  const [descriptionState, setDescriptionState] = React.useState(\n    parameters.description,\n  );\n  const [elementId] = React.useState(getRandomId());\n  const categoryMap = categoryToNameMap(allFormInputs);\n\n  const fetchLabel = (\n    labelName: string,\n    defaultLabel: string,\n  ): string | undefined => {\n    return mods &&\n      mods.labels &&\n      typeof mods.labels[labelName as keyof ModLabels] === 'string'\n      ? mods.labels[labelName as keyof ModLabels]\n      : defaultLabel;\n  };\n\n  const objectNameLabel = fetchLabel('objectNameLabel', 'Object Name');\n  const displayNameLabel = fetchLabel('displayNameLabel', 'Display Name');\n  const descriptionLabel = fetchLabel('descriptionLabel', 'Description');\n  const inputTypeLabel = fetchLabel('inputTypeLabel', 'Input Type');\n\n  const availableInputTypes = () => {\n    const definitionsInSchema =\n      parameters.definitionData &&\n      Object.keys(parameters.definitionData).length !== 0;\n\n    // Hide the \"Reference\" option if there are no definitions in the schema\n    let inputKeys = Object.keys(categoryMap).filter(\n      (key) => key !== 'ref' || definitionsInSchema,\n    );\n    // Exclude hidden inputs based on mods\n    if (mods) inputKeys = subtractArray(inputKeys, mods.deactivatedFormInputs);\n\n    return inputKeys\n      .map((key) => ({ value: key, label: categoryMap[key] }))\n      .sort((a, b) => a.label.localeCompare(b.label));\n  };\n\n  return (\n    <React.Fragment>\n      <div className='card-entry-row'>\n        {showObjectNameInput && (\n          <div className='card-entry'>\n            <h5>\n              {`${objectNameLabel} `}\n              <Tooltip\n                text={\n                  mods &&\n                  mods.tooltipDescriptions &&\n                  typeof mods.tooltipDescriptions.cardObjectName === 'string'\n                    ? mods.tooltipDescriptions.cardObjectName\n                    : 'The back-end name of the object'\n                }\n                id={`${elementId}_nameinfo`}\n                type='help'\n              />\n            </h5>\n\n            <FormGroup>\n              <Input\n                invalid={keyError !== null}\n                value={keyState || ''}\n                placeholder='Key'\n                type='text'\n                onChange={(ev) => setKeyState(ev.target.value)}\n                onBlur={(ev) => {\n                  const { value } = ev.target;\n                  if (\n                    value === parameters.name ||\n                    !(\n                      parameters.neighborNames &&\n                      parameters.neighborNames.includes(value)\n                    )\n                  ) {\n                    setKeyError(null);\n                    onChange({\n                      ...parameters,\n                      name: value,\n                    });\n                  } else {\n                    setKeyState(parameters.name);\n                    setKeyError(`\"${value}\" is already in use.`);\n                    onChange({ ...parameters });\n                  }\n                }}\n                className='card-text'\n              />\n              <FormFeedback>{keyError}</FormFeedback>\n            </FormGroup>\n          </div>\n        )}\n        <div\n          className={`card-entry ${\n            parameters.$ref === undefined ? '' : 'disabled-input'\n          }`}\n        >\n          <h5>\n            {`${displayNameLabel} `}\n            <Tooltip\n              text={\n                mods &&\n                mods.tooltipDescriptions &&\n                typeof mods.tooltipDescriptions.cardDisplayName === 'string'\n                  ? mods.tooltipDescriptions.cardDisplayName\n                  : 'The user-facing name of this object'\n              }\n              id={`${elementId}-titleinfo`}\n              type='help'\n            />\n          </h5>\n          <Input\n            value={titleState || ''}\n            placeholder='Title'\n            type='text'\n            onChange={(ev) => setTitleState(ev.target.value)}\n            onBlur={(ev) => {\n              onChange({ ...parameters, title: ev.target.value });\n            }}\n            className='card-text'\n          />\n        </div>\n      </div>\n      <div className='card-entry-row'>\n        <div\n          className={`card-entry ${parameters.$ref ? 'disabled-input' : ''}`}\n        >\n          <h5>\n            {`${descriptionLabel} `}\n            <Tooltip\n              text={\n                mods &&\n                mods.tooltipDescriptions &&\n                typeof mods.tooltipDescriptions.cardDescription === 'string'\n                  ? mods.tooltipDescriptions.cardDescription\n                  : 'This will appear as help text on the form'\n              }\n              id={`${elementId}-descriptioninfo`}\n              type='help'\n            />\n          </h5>\n          <FormGroup>\n            <Input\n              value={descriptionState || ''}\n              placeholder='Description'\n              type='text'\n              onChange={(ev) => setDescriptionState(ev.target.value)}\n              onBlur={(ev) => {\n                onChange({ ...parameters, description: ev.target.value });\n              }}\n              className='card-text'\n            />\n          </FormGroup>\n        </div>\n        <div\n          className={classnames('card-entry', {\n            'wide-card-entry': !showObjectNameInput,\n          })}\n        >\n          <h5>\n            {`${inputTypeLabel} `}\n            <Tooltip\n              text={\n                mods &&\n                mods.tooltipDescriptions &&\n                typeof mods.tooltipDescriptions.cardInputType === 'string'\n                  ? mods.tooltipDescriptions.cardInputType\n                  : 'The type of form input displayed on the form'\n              }\n              id={`${elementId}-inputinfo`}\n              type='help'\n            />\n          </h5>\n          <Select\n            value={{\n              value: parameters.category,\n              label: categoryMap[parameters.category!],\n            }}\n            placeholder={inputTypeLabel}\n            options={availableInputTypes()}\n            onChange={(val: any) => {\n              // figure out the new 'type'\n              const newCategory = val.value;\n\n              const newProps = {\n                ...defaultUiProps(newCategory, allFormInputs),\n                ...defaultDataProps(newCategory, allFormInputs),\n                name: parameters.name,\n                required: parameters.required,\n              };\n              if (newProps.$ref !== undefined && !newProps.$ref) {\n                // assign an initial reference\n                const firstDefinition = Object.keys(\n                  parameters.definitionData!,\n                )[0];\n                newProps.$ref = `#/definitions/${firstDefinition || 'empty'}`;\n              }\n              onChange({\n                ...newProps,\n                title: newProps.title || parameters.title,\n                default: newProps.default || '',\n                type: newProps.type || categoryType(newCategory, allFormInputs),\n                category: newProps.category || newCategory,\n              });\n            }}\n            className='card-select'\n          />\n        </div>\n      </div>\n\n      <div className='card-category-options'>\n        <GeneralParameterInputs\n          category={parameters.category!}\n          parameters={parameters}\n          onChange={onChange}\n          mods={mods}\n          allFormInputs={allFormInputs}\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  makeStyles,\n  Popover,\n  Button,\n  Tooltip,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Typography,\n} from '@mui/material';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from './FontAwesomeIcon'; // Assuming this FontAwesome component works with Material-UI\nimport { getRandomId } from './utils';\nimport type { ModLabels } from './types';\n\nexport default function Add({\n  addElem,\n  hidden,\n  tooltipDescription,\n  labels,\n}: {\n  addElem: (choice: string) => void;\n  hidden?: boolean;\n  tooltipDescription?: string;\n  labels?: ModLabels;\n}) {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [createChoice, setCreateChoice] = useState('card');\n  const [elementId] = useState(getRandomId());\n\n  const handleOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div style={{ display: hidden ? 'none' : 'initial' }}>\n      <Tooltip\n        title={tooltipDescription || 'Create new form element'}\n        placement='top'\n      >\n        <Button onClick={handleOpen} variant={'outlined'} color={'primary'}>\n          Add new form element\n        </Button>\n      </Tooltip>\n      <Popover\n        open={Boolean(anchorEl)}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n      >\n        <Typography variant='h6' style={{ padding: '8px 16px' }}>\n          Create New\n        </Typography>\n        <div style={{ padding: 16 }}>\n          <RadioGroup\n            value={createChoice}\n            onChange={(event) => setCreateChoice(event.target.value)}\n          >\n            <FormControlLabel\n              value='card'\n              control={<Radio />}\n              label={labels?.addElementLabel ?? 'Form element'}\n            />\n            <FormControlLabel\n              value='section'\n              control={<Radio />}\n              label={labels?.addSectionLabel ?? 'Form section'}\n            />\n          </RadioGroup>\n          <div>\n            <Button onClick={handleClose}>Cancel</Button>\n            <Button\n              onClick={() => {\n                addElem(createChoice);\n                handleClose();\n              }}\n              color='primary'\n            >\n              Create\n            </Button>\n          </div>\n        </div>\n      </Popover>\n    </div>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport {\n  faArrowUp,\n  faArrowDown,\n  faPencilAlt,\n  faTrash,\n} from '@fortawesome/free-solid-svg-icons';\nimport FBCheckbox from './checkbox/FBCheckbox';\nimport Collapse from './Collapse/Collapse';\nimport CardModal from './CardModal';\nimport CardGeneralParameterInputs from './CardGeneralParameterInputs';\nimport Add from './Add';\nimport FontAwesomeIcon from './FontAwesomeIcon';\nimport Tooltip from './Tooltip';\nimport { getRandomId } from './utils';\nimport type { CardPropsType, CardComponentPropsType } from './types';\n\nconst useStyles = createUseStyles({\n  cardEntries: {\n    'border-bottom': '1px solid gray',\n    margin: '.5em 1.5em 0 1.5em',\n    '& h5': {\n      color: 'black',\n      'font-size': '14px',\n      'font-weight': 'bold',\n    },\n    '& .card-entry-row': {\n      display: 'flex',\n    },\n    '& .card-entry': {\n      margin: 0,\n      width: '50%',\n      'text-align': 'left',\n      padding: '0.5em',\n      '&.wide-card-entry': {\n        width: '100%',\n      },\n    },\n    '& input': {\n      border: '1px solid gray',\n      'border-radius': '4px',\n    },\n    '& .card-category-options': {\n      padding: '.5em',\n    },\n    '& .card-select': {\n      border: '1px solid gray',\n      'border-radius': '4px',\n    },\n    '& .card-array': {\n      '& .fa-plus-square, & .fa-square-plus': { display: 'none' },\n      '& .section-entries': {\n        '& .fa-plus-square, & .fa-square-plus': { display: 'initial' },\n      },\n    },\n    '& .card-enum': {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%',\n      backgroundColor: 'lightGray',\n      textAlign: 'left',\n      padding: '1em',\n      '& h3': { fontSize: '16px', margin: '0 0 .5em 0' },\n      '& label': { color: 'black', fontSize: '14px' },\n      '& .card-enum-header': {\n        marginTop: '0.5em',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        '& h5': { width: '50%', fontWeight: 'bold', fontSize: '14px' },\n      },\n      '& .fa': { cursor: 'pointer' },\n    },\n  },\n  cardInteractions: {\n    margin: '.5em 1.5em',\n    textAlign: 'left',\n    '& .fa': {\n      marginRight: '1em',\n      borderRadius: '4px',\n      padding: '.25em',\n      height: '25px',\n      width: '25px',\n    },\n    '& .fa-arrow-up, .fa-arrow-down': { marginRight: '.5em' },\n    '& .fa-trash': { border: '1px solid #DE5354', color: '#DE5354' },\n    '& .fb-checkbox': { display: 'inline-block' },\n    '& .interactions-left, & .interactions-right': {\n      display: 'inline-block',\n      width: '48%',\n      margin: '0 auto',\n    },\n    '& .interactions-left': { textAlign: 'left' },\n    '& .interactions-right': { textAlign: 'right' },\n  },\n});\n\nexport default function Card({\n  componentProps,\n  onChange,\n  onDelete,\n  onMoveUp,\n  onMoveDown,\n  TypeSpecificParameters,\n  addElem,\n  cardOpen,\n  setCardOpen,\n  allFormInputs,\n  mods,\n  showObjectNameInput = true,\n  addProperties,\n}: CardPropsType): ReactElement {\n  const classes = useStyles();\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [elementId] = React.useState(getRandomId());\n\n  return (\n    <React.Fragment>\n      <Collapse\n        isOpen={cardOpen}\n        toggleCollapse={() => setCardOpen(!cardOpen)}\n        title={\n          <React.Fragment>\n            <span onClick={() => setCardOpen(!cardOpen)} className='label'>\n              {componentProps.title || componentProps.name}{' '}\n              {componentProps.parent ? (\n                <Tooltip\n                  text={`Depends on ${componentProps.parent}`}\n                  id={`${elementId}_parentinfo`}\n                  type='alert'\n                />\n              ) : (\n                ''\n              )}\n              {componentProps.$ref !== undefined ? (\n                <Tooltip\n                  text={`Is an instance of pre-configured component ${componentProps.$ref}`}\n                  id={`${elementId}_refinfo`}\n                  type='alert'\n                />\n              ) : (\n                ''\n              )}\n            </span>\n            <span className='arrows'>\n              <span id={`${elementId}_moveupbiginfo`}>\n                <FontAwesomeIcon\n                  icon={faArrowUp}\n                  onClick={() => (onMoveUp ? onMoveUp() : {})}\n                />\n              </span>\n              <UncontrolledTooltip\n                placement='top'\n                target={`${elementId}_moveupbiginfo`}\n              >\n                Move form element up\n              </UncontrolledTooltip>\n              <span id={`${elementId}_movedownbiginfo`}>\n                <FontAwesomeIcon\n                  icon={faArrowDown}\n                  onClick={() => (onMoveDown ? onMoveDown() : {})}\n                />\n              </span>\n              <UncontrolledTooltip\n                placement='top'\n                target={`${elementId}_movedownbiginfo`}\n              >\n                Move form element down\n              </UncontrolledTooltip>\n            </span>\n          </React.Fragment>\n        }\n        className={`card-container ${\n          componentProps.dependent ? 'card-dependent' : ''\n        } ${componentProps.$ref === undefined ? '' : 'card-reference'}`}\n      >\n        <div className={classes.cardEntries}>\n          <CardGeneralParameterInputs\n            parameters={componentProps}\n            onChange={onChange}\n            allFormInputs={allFormInputs}\n            mods={mods}\n            showObjectNameInput={showObjectNameInput}\n          />\n        </div>\n        <div className={classes.cardInteractions}>\n          <span id={`${elementId}_editinfo`}>\n            <FontAwesomeIcon\n              icon={faPencilAlt}\n              onClick={() => setModalOpen(true)}\n            />\n          </span>\n          <UncontrolledTooltip placement='top' target={`${elementId}_editinfo`}>\n            Additional configurations for this form element\n          </UncontrolledTooltip>\n          <span id={`${elementId}_trashinfo`}>\n            <FontAwesomeIcon\n              icon={faTrash}\n              onClick={() => onDelete && onDelete()}\n            />\n          </span>\n          <UncontrolledTooltip\n            placement='top'\n            target={`${elementId}_trashinfo`}\n          >\n            Delete form element\n          </UncontrolledTooltip>\n          <FBCheckbox\n            onChangeValue={() =>\n              onChange({\n                ...componentProps,\n                required: !componentProps.required,\n              })\n            }\n            isChecked={!!componentProps.required}\n            label='Required'\n            id={`${elementId}_required`}\n          />\n        </div>\n        <CardModal\n          componentProps={componentProps as CardComponentPropsType}\n          isOpen={modalOpen}\n          onClose={() => setModalOpen(false)}\n          onChange={(newComponentProps: CardComponentPropsType) => {\n            onChange(newComponentProps);\n          }}\n          TypeSpecificParameters={TypeSpecificParameters}\n        />\n      </Collapse>\n      {mods?.components?.add && mods?.components?.add(addProperties)}\n      {!mods?.components?.add && addElem && (\n        <Add\n          tooltipDescription={((mods || {}).tooltipDescriptions || {}).add}\n          addElem={(choice: string) => addElem(choice)}\n        />\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Input } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport CardEnumOptions from '../CardEnumOptions';\nimport { getRandomId } from '../utils';\nimport type {\n  FormInput,\n  CardComponentType,\n  CardComponentPropsType,\n} from '../types';\nimport { InputType } from 'reactstrap/types/lib/Input';\n\nconst useStyles = createUseStyles({\n  hidden: {\n    display: 'none',\n  },\n});\n\n// specify the inputs required for a string type object\nexport const CardDefaultParameterInputs: CardComponentType = ({\n  parameters,\n  onChange,\n}) => {\n  return <div />;\n};\n\nconst getInputCardBodyComponent = ({ type }: { type: InputType }) =>\n  function InputCardBodyComponent({\n    parameters,\n    onChange,\n  }: {\n    parameters: CardComponentPropsType;\n    onChange: (newParams: CardComponentPropsType) => void;\n  }) {\n    return (\n      <React.Fragment>\n        <h5>Default value</h5>\n        <Input\n          value={(parameters.default || '') as string | number}\n          placeholder='Default'\n          type={type}\n          onChange={(ev) =>\n            onChange({ ...parameters, default: ev.target.value })\n          }\n          className='card-text'\n        />\n      </React.Fragment>\n    );\n  };\n\nconst Checkbox: CardComponentType = ({ parameters, onChange }) => {\n  return (\n    <div className='card-boolean'>\n      <FBCheckbox\n        onChangeValue={() => {\n          onChange({\n            ...parameters,\n            default: parameters.default ? parameters.default !== true : true,\n          });\n        }}\n        isChecked={parameters.default ? parameters.default === true : false}\n        label='Default'\n      />\n    </div>\n  );\n};\n\nfunction MultipleChoice({\n  parameters,\n  onChange,\n}: {\n  parameters: CardComponentPropsType;\n  onChange: (newParams: CardComponentPropsType) => void;\n}) {\n  const classes = useStyles();\n  const enumArray = Array.isArray(parameters.enum) ? parameters.enum : [];\n  // eslint-disable-next-line no-restricted-globals\n  const containsUnparsableString = enumArray.some((val) => {\n    return isNaN(val as number);\n  });\n  const containsString =\n    containsUnparsableString ||\n    enumArray.some((val) => typeof val === 'string');\n  const [isNumber, setIsNumber] = React.useState(\n    !!enumArray.length && !containsString,\n  );\n  const [elementId] = React.useState(getRandomId());\n  return (\n    <div className='card-enum'>\n      <h3>Possible Values</h3>\n      <FBCheckbox\n        onChangeValue={() => {\n          if (Array.isArray(parameters.enumNames)) {\n            // remove the enumNames\n            onChange({\n              ...parameters,\n              enumNames: null,\n            });\n          } else {\n            // create enumNames as a copy of enum values\n            onChange({\n              ...parameters,\n              enumNames: enumArray.map((val) => `${val}`),\n            });\n          }\n        }}\n        isChecked={Array.isArray(parameters.enumNames)}\n        label='Display label is different from value'\n        id={`${elementId}_different`}\n      />\n      <div\n        className={\n          containsUnparsableString || !enumArray.length ? classes.hidden : ''\n        }\n      >\n        <FBCheckbox\n          onChangeValue={() => {\n            if (containsString || !isNumber) {\n              // attempt converting enum values into numbers\n              try {\n                const newEnum = enumArray.map((val) => {\n                  let newNum = 0;\n                  if (val) newNum = parseFloat(val as string) || 0;\n                  if (Number.isNaN(newNum))\n                    throw new Error(`Could not convert ${val}`);\n                  return newNum;\n                });\n                setIsNumber(true);\n                onChange({\n                  ...parameters,\n                  enum: newEnum,\n                });\n              } catch (error) {\n                // eslint-disable-next-line no-console\n                console.error(error);\n              }\n            } else {\n              // convert enum values back into strings\n              const newEnum = enumArray.map((val) => `${val || 0}`);\n              setIsNumber(false);\n              onChange({\n                ...parameters,\n                enum: newEnum,\n              });\n            }\n          }}\n          isChecked={isNumber}\n          disabled={containsUnparsableString}\n          label='Force number'\n          id={`${elementId}_forceNumber`}\n        />\n      </div>\n      <CardEnumOptions\n        initialValues={enumArray}\n        names={\n          Array.isArray(parameters.enumNames)\n            ? parameters.enumNames.map((val) => `${val}`)\n            : undefined\n        }\n        showNames={Array.isArray(parameters.enumNames)}\n        onChange={(newEnum: Array<string>, newEnumNames?: Array<string>) =>\n          onChange({\n            ...parameters,\n            enum: newEnum,\n            enumNames: newEnumNames,\n          })\n        }\n        type={isNumber ? 'number' : 'string'}\n      />\n    </div>\n  );\n}\n\nconst defaultInputs: { [key: string]: FormInput } = {\n  dateTime: {\n    displayName: 'Date-Time',\n    matchIf: [\n      {\n        types: ['string'],\n        format: 'date-time',\n      },\n    ],\n    defaultDataSchema: {\n      format: 'date-time',\n    },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: getInputCardBodyComponent({ type: 'datetime-local' }),\n    modalBody: CardDefaultParameterInputs,\n  },\n  date: {\n    displayName: 'Date',\n    matchIf: [\n      {\n        types: ['string'],\n        format: 'date',\n      },\n    ],\n    defaultDataSchema: {\n      format: 'date',\n    },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: getInputCardBodyComponent({ type: 'date' }),\n    modalBody: CardDefaultParameterInputs,\n  },\n  time: {\n    displayName: 'Time',\n    matchIf: [\n      {\n        types: ['string'],\n        format: 'time',\n      },\n    ],\n    defaultDataSchema: {\n      format: 'time',\n    },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: getInputCardBodyComponent({ type: 'time' }),\n    modalBody: CardDefaultParameterInputs,\n  },\n  checkbox: {\n    displayName: 'Checkbox',\n    matchIf: [\n      {\n        types: ['boolean'],\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'boolean',\n    cardBody: Checkbox,\n    modalBody: CardDefaultParameterInputs,\n  },\n  radio: {\n    displayName: 'Radio',\n    matchIf: [\n      {\n        types: ['string', 'number', 'integer', 'array', 'boolean', 'null'],\n        widget: 'radio',\n        enum: true,\n      },\n    ],\n    defaultDataSchema: { enum: [] },\n    defaultUiSchema: {\n      'ui:widget': 'radio',\n    },\n    type: 'string',\n    cardBody: MultipleChoice,\n    modalBody: CardDefaultParameterInputs,\n  },\n  dropdown: {\n    displayName: 'Dropdown',\n    matchIf: [\n      {\n        types: ['string', 'number', 'integer', 'array', 'boolean', 'null'],\n        enum: true,\n      },\n    ],\n    defaultDataSchema: { enum: [] },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: MultipleChoice,\n    modalBody: CardDefaultParameterInputs,\n  },\n};\n\nexport default defaultInputs;\n","import React, { ReactElement } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Select from 'react-select';\nimport { createUseStyles } from 'react-jss';\nimport {\n  Alert,\n  Input,\n  UncontrolledTooltip,\n  FormGroup,\n  FormFeedback,\n} from 'reactstrap';\nimport {\n  faArrowUp,\n  faArrowDown,\n  faPencilAlt,\n  faTrash,\n} from '@fortawesome/free-solid-svg-icons';\nimport FBCheckbox from './checkbox/FBCheckbox';\nimport Collapse from './Collapse/Collapse';\nimport CardModal from './CardModal';\nimport { CardDefaultParameterInputs } from './defaults/defaultInputs';\nimport Tooltip from './Tooltip';\nimport Add from './Add';\nimport Card from './Card';\nimport {\n  checkForUnsupportedFeatures,\n  generateElementComponentsFromSchemas,\n  countElementsFromSchema,\n  addCardObj,\n  addSectionObj,\n  onDragEnd,\n} from './utils';\nimport FontAwesomeIcon from './FontAwesomeIcon';\nimport { getRandomId } from './utils';\nimport type { SectionPropsType } from './types';\n\nconst useStyles = createUseStyles({\n  sectionContainer: {\n    '& .section-head': {\n      display: 'flex',\n      borderBottom: '1px solid gray',\n      margin: '0.5em 1.5em 0 1.5em',\n      '& h5': {\n        color: 'black',\n        fontSize: '14px',\n        fontWeight: 'bold',\n      },\n      '& .section-entry': {\n        width: '33%',\n        textAlign: 'left',\n        padding: '0.5em',\n      },\n      '& .section-reference': { width: '100%' },\n    },\n    '& .section-footer': {\n      marginTop: '1em',\n      textAlign: 'center',\n      '& .fa': { cursor: 'pointer' },\n    },\n    '& .section-interactions': {\n      margin: '0.5em 1.5em',\n      textAlign: 'left',\n      borderTop: '1px solid gray',\n      paddingTop: '1em',\n      '& .fa': {\n        marginRight: '1em',\n        borderRadius: '4px',\n        padding: '0.25em',\n        height: '25px',\n        width: '25px',\n      },\n      '& .fa-pencil-alt, &.fa-pencil, & .fa-arrow-up, & .fa-arrow-down': {\n        border: '1px solid #1d71ad',\n        color: '#1d71ad',\n      },\n      '& .fa-trash': { border: '1px solid #de5354', color: '#de5354' },\n      '& .fa-arrow-up, & .fa-arrow-down': { marginRight: '0.5em' },\n      '& .fb-checkbox': {\n        display: 'inline-block',\n        label: { color: '#9aa4ab' },\n      },\n      '& .interactions-left, & .interactions-right': {\n        display: 'inline-block',\n        width: '48%',\n        margin: '0 auto',\n      },\n      '& .interactions-left': { textAlign: 'left' },\n      '& .interactions-right': { textAlign: 'right' },\n    },\n  },\n});\n\nexport default function Section({\n  name,\n  required,\n  schema,\n  uischema,\n  onChange,\n  onNameChange,\n  onRequireToggle,\n  onDependentsChange,\n  onDelete,\n  onMoveUp,\n  onMoveDown,\n  path,\n  definitionData,\n  definitionUi,\n  hideKey,\n  reference,\n  dependents,\n  dependent,\n  parent,\n  parentProperties,\n  neighborNames,\n  cardOpen,\n  setCardOpen,\n  allFormInputs,\n  mods,\n  categoryHash,\n}: SectionPropsType): ReactElement {\n  const classes = useStyles();\n  const unsupportedFeatures = checkForUnsupportedFeatures(\n    schema || {},\n    uischema || {},\n    allFormInputs,\n  );\n  const schemaData = schema || {};\n  const elementNum = countElementsFromSchema(schemaData);\n  const defaultCollapseStates = [...Array(elementNum)].map(() => false);\n  const [cardOpenArray, setCardOpenArray] = React.useState(\n    defaultCollapseStates,\n  );\n  // keep name in state to avoid losing focus\n  const [keyName, setKeyName] = React.useState(name);\n  const [keyError, setKeyError] = React.useState<null | string>(null);\n  // keep requirements in state to avoid rapid updates\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [elementId] = React.useState(getRandomId());\n  const addProperties = {\n    schema,\n    uischema,\n    mods,\n    onChange,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  };\n  const hideAddButton =\n    schemaData.properties && Object.keys(schemaData.properties).length !== 0;\n\n  return (\n    <React.Fragment>\n      <Collapse\n        isOpen={cardOpen}\n        toggleCollapse={() => setCardOpen(!cardOpen)}\n        title={\n          <React.Fragment>\n            <span onClick={() => setCardOpen(!cardOpen)} className='label'>\n              {schemaData.title || keyName}{' '}\n              {parent ? (\n                <Tooltip\n                  text={`Depends on ${parent}`}\n                  id={`${elementId}_parentinfo`}\n                  type='alert'\n                />\n              ) : (\n                ''\n              )}\n            </span>\n            <span className='arrows'>\n              <span id={`${elementId}_moveupbiginfo`}>\n                <FontAwesomeIcon\n                  icon={faArrowUp}\n                  onClick={() => (onMoveUp ? onMoveUp() : {})}\n                />\n              </span>\n              <UncontrolledTooltip\n                placement='top'\n                target={`${elementId}_moveupbiginfo`}\n              >\n                Move form element up\n              </UncontrolledTooltip>\n              <span id={`${elementId}_movedownbiginfo`}>\n                <FontAwesomeIcon\n                  icon={faArrowDown}\n                  onClick={() => (onMoveDown ? onMoveDown() : {})}\n                />\n              </span>\n              <UncontrolledTooltip\n                placement='top'\n                target={`${elementId}_movedownbiginfo`}\n              >\n                Move form element down\n              </UncontrolledTooltip>\n            </span>\n          </React.Fragment>\n        }\n        className={`section-container ${classes.sectionContainer} ${\n          dependent ? 'section-dependent' : ''\n        } ${reference ? 'section-reference' : ''}`}\n      >\n        <div\n          className={`section-entries ${reference ? 'section-reference' : ''}`}\n        >\n          <div className='section-head'>\n            {reference ? (\n              <div className='section-entry section-reference'>\n                <h5>Reference Section</h5>\n                <Select\n                  value={{\n                    value: reference,\n                    label: reference,\n                  }}\n                  placeholder='Reference'\n                  options={Object.keys(definitionData).map((key) => ({\n                    value: `#/definitions/${key}`,\n                    label: `#/definitions/${key}`,\n                  }))}\n                  onChange={(val: any) => {\n                    onChange(schema, uischema, val.value);\n                  }}\n                  className='section-select'\n                />\n              </div>\n            ) : (\n              ''\n            )}\n            <div className='section-entry' data-test='section-object-name'>\n              <h5>\n                Section Object Name{' '}\n                <Tooltip\n                  text={\n                    mods &&\n                    mods.tooltipDescriptions &&\n                    mods.tooltipDescriptions &&\n                    typeof mods.tooltipDescriptions.cardSectionObjectName ===\n                      'string'\n                      ? mods.tooltipDescriptions.cardSectionObjectName\n                      : 'The key to the object that will represent this form section.'\n                  }\n                  id={`${elementId}_nameinfo`}\n                  type='help'\n                />\n              </h5>\n              <FormGroup>\n                <Input\n                  invalid={keyError !== null}\n                  value={keyName || ''}\n                  placeholder='Key'\n                  type='text'\n                  onChange={(ev) => setKeyName(ev.target.value)}\n                  onBlur={(ev) => {\n                    const { value } = ev.target;\n                    if (\n                      value === name ||\n                      !(neighborNames && neighborNames.includes(value))\n                    ) {\n                      setKeyError(null);\n                      onNameChange(value);\n                    } else {\n                      setKeyName(name);\n                      setKeyError(`\"${value}\" is already in use.`);\n                      onNameChange(name);\n                    }\n                  }}\n                  className='card-text'\n                  readOnly={hideKey}\n                />\n                <FormFeedback>{keyError}</FormFeedback>\n              </FormGroup>\n            </div>\n            <div className='section-entry' data-test='section-display-name'>\n              <h5>\n                Section Display Name{' '}\n                <Tooltip\n                  text={\n                    mods &&\n                    mods.tooltipDescriptions &&\n                    mods.tooltipDescriptions &&\n                    typeof mods.tooltipDescriptions.cardSectionDisplayName ===\n                      'string'\n                      ? mods.tooltipDescriptions.cardSectionDisplayName\n                      : 'The name of the form section that will be shown to users of the form.'\n                  }\n                  id={`${elementId}_titleinfo`}\n                  type='help'\n                />\n              </h5>\n              <Input\n                value={schemaData.title || ''}\n                placeholder='Title'\n                type='text'\n                onChange={(ev) =>\n                  onChange(\n                    {\n                      ...schema,\n                      title: ev.target.value,\n                    },\n                    uischema,\n                  )\n                }\n                className='card-text'\n              />\n            </div>\n            <div className='section-entry' data-test='section-description'>\n              <h5>\n                Section Description{' '}\n                <Tooltip\n                  text={\n                    mods &&\n                    mods.tooltipDescriptions &&\n                    mods.tooltipDescriptions &&\n                    typeof mods.tooltipDescriptions.cardSectionDescription ===\n                      'string'\n                      ? mods.tooltipDescriptions.cardSectionDescription\n                      : 'A description of the section which will be visible on the form.'\n                  }\n                  id={`${elementId}_descriptioninfo`}\n                  type='help'\n                />\n              </h5>\n              <Input\n                value={schemaData.description || ''}\n                placeholder='Description'\n                type='text'\n                onChange={(ev) =>\n                  onChange(\n                    {\n                      ...schema,\n                      description: ev.target.value,\n                    },\n                    uischema,\n                  )\n                }\n                className='card-text'\n              />\n            </div>\n            <Alert\n              style={{\n                display: unsupportedFeatures.length === 0 ? 'none' : 'block',\n              }}\n              color='warning'\n            >\n              <h5>Unsupported Features:</h5>\n              {unsupportedFeatures.map((message) => (\n                <li key={`${elementId}_${message}`}>{message}</li>\n              ))}\n            </Alert>\n          </div>\n          <div className='section-body'>\n            <DragDropContext\n              onDragEnd={(result) =>\n                onDragEnd(result, {\n                  schema,\n                  uischema,\n                  onChange,\n                  definitionData,\n                  definitionUi,\n                  categoryHash,\n                })\n              }\n            >\n              <Droppable droppableId='droppable'>\n                {(providedDroppable) => (\n                  <div\n                    ref={providedDroppable.innerRef}\n                    {...providedDroppable.droppableProps}\n                  >\n                    {generateElementComponentsFromSchemas({\n                      schemaData: schema,\n                      uiSchemaData: uischema,\n                      onChange,\n                      path,\n                      definitionData,\n                      definitionUi,\n                      cardOpenArray,\n                      setCardOpenArray,\n                      allFormInputs,\n                      mods,\n                      categoryHash,\n                      Card,\n                      Section,\n                    }).map((element: any, index) => (\n                      <Draggable\n                        key={element.key}\n                        draggableId={element.key}\n                        index={index}\n                      >\n                        {(providedDraggable) => (\n                          <div\n                            ref={providedDraggable.innerRef}\n                            {...providedDraggable.draggableProps}\n                            {...providedDraggable.dragHandleProps}\n                          >\n                            {element}\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {providedDroppable.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n          </div>\n          <div className='section-footer'>\n            {!hideAddButton &&\n              mods?.components?.add &&\n              mods.components.add(addProperties)}\n            {!mods?.components?.add && (\n              <Add\n                tooltipDescription={\n                  ((mods || {}).tooltipDescriptions || {}).add\n                }\n                addElem={(choice: string) => {\n                  if (choice === 'card') {\n                    addCardObj(addProperties);\n                  } else if (choice === 'section') {\n                    addSectionObj(addProperties);\n                  }\n                }}\n                hidden={hideAddButton}\n              />\n            )}\n          </div>\n          <div className='section-interactions'>\n            <span id={`${elementId}_editinfo`}>\n              <FontAwesomeIcon\n                icon={faPencilAlt}\n                onClick={() => setModalOpen(true)}\n              />\n            </span>\n            <UncontrolledTooltip\n              placement='top'\n              target={`${elementId}_editinfo`}\n            >\n              Additional configurations for this form element\n            </UncontrolledTooltip>\n            <span id={`${elementId}_trashinfo`}>\n              <FontAwesomeIcon\n                icon={faTrash}\n                onClick={() => (onDelete ? onDelete() : {})}\n              />\n            </span>\n            <UncontrolledTooltip\n              placement='top'\n              target={`${elementId}_trashinfo`}\n            >\n              Delete form element\n            </UncontrolledTooltip>\n            <FBCheckbox\n              onChangeValue={() => onRequireToggle()}\n              isChecked={required}\n              label='Required'\n              id={`${elementId}_required`}\n            />\n          </div>\n        </div>\n        <CardModal\n          componentProps={{\n            dependents,\n            neighborNames,\n            name: keyName,\n            schema,\n            type: 'object',\n            'ui:column': uischema['ui:column'] ?? '',\n            'ui:options': uischema['ui:options'] ?? '',\n          }}\n          isOpen={modalOpen}\n          onClose={() => setModalOpen(false)}\n          onChange={(newComponentProps: { [key: string]: any }) => {\n            onDependentsChange(newComponentProps.dependents);\n            onChange(schema, {\n              ...uischema,\n              'ui:column': newComponentProps['ui:column'],\n            });\n          }}\n          TypeSpecificParameters={CardDefaultParameterInputs}\n        />\n      </Collapse>\n      {mods?.components?.add && mods.components.add(parentProperties)}\n      {!mods?.components?.add && (\n        <Add\n          tooltipDescription={((mods || {}).tooltipDescriptions || {}).add}\n          addElem={(choice: string) => {\n            if (choice === 'card') {\n              addCardObj(parentProperties);\n            } else if (choice === 'section') {\n              addSectionObj(parentProperties);\n            }\n            setCardOpen(false);\n          }}\n        />\n      )}\n    </React.Fragment>\n  );\n}\n","export const arrows = {\n  '& .arrows': {\n    float: 'right',\n    '& .fa-arrow-up, & .fa-arrow-down': {\n      'border-radius': '4px',\n      padding: '.25em',\n      margin: '0 .5em 0 0',\n      border: '1px solid #1d71ad',\n      color: '#1d71ad',\n      height: '28px',\n      width: '28px',\n    },\n  },\n};\n","import React, { useState } from 'react';\nimport type { CardComponentType } from '../types';\nimport { getRandomId } from '../utils';\nimport Tooltip from '../Tooltip';\nimport { Input } from 'reactstrap';\n\nexport const PlaceholderInput: CardComponentType = ({\n  parameters,\n  onChange,\n}) => {\n  const [elementId] = useState(getRandomId());\n  return (\n    <React.Fragment>\n      <h4>\n        Placeholder{' '}\n        <a\n          href='https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-placeholder'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <Tooltip\n            id={`${elementId}_placeholder`}\n            type='help'\n            text='Hint to the user as to what kind of information is expected in the field'\n          />\n        </a>\n      </h4>\n      <Input\n        value={parameters['ui:placeholder'] ? parameters['ui:placeholder'] : ''}\n        placeholder='Placeholder'\n        key='placeholder'\n        type='text'\n        onChange={(ev) => {\n          onChange({\n            ...parameters,\n            'ui:placeholder': ev.target.value,\n          });\n        }}\n        className='card-modal-text'\n      />\n    </React.Fragment>\n  );\n};\n","import React, { useState } from 'react';\nimport Select from 'react-select';\nimport { Input } from 'reactstrap';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport Tooltip from '../Tooltip';\nimport { getRandomId } from '../utils';\nimport type { CardComponentType, FormInput, DataType } from '../types';\nimport { PlaceholderInput } from '../inputs/PlaceholderInput';\n\nconst formatDictionary = {\n  '': 'None',\n  email: 'Email',\n  hostname: 'Hostname',\n  uri: 'URI',\n  regex: 'Regular Expression',\n};\n\ntype FormatDictionaryKey = '' | 'email' | 'hostname' | 'uri' | 'regex';\n\nconst formatTypeDictionary = {\n  email: 'email',\n  url: 'uri',\n};\n\ntype FormatTypeDictionaryKey = 'email' | 'url';\n\nconst autoDictionary = {\n  '': 'None',\n  email: 'Email',\n  username: 'User Name',\n  password: 'Password',\n  'street-address': 'Street Address',\n  country: 'Country',\n};\n\ntype AutoDictionaryKey =\n  | ''\n  | 'email'\n  | 'username'\n  | 'password'\n  | 'street-address'\n  | 'country';\n\n// specify the inputs required for a string type object\nconst CardShortAnswerParameterInputs: CardComponentType = ({\n  parameters,\n  onChange,\n}) => {\n  const [elementId] = useState(getRandomId());\n  return (\n    <div>\n      <h4>Minimum Length</h4>\n      <Input\n        value={parameters.minLength ? parameters.minLength : ''}\n        placeholder='Minimum Length'\n        key='minLength'\n        type='number'\n        onChange={(ev) => {\n          onChange({\n            ...parameters,\n            minLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>Maximum Length</h4>\n      <Input\n        value={parameters.maxLength ? parameters.maxLength : ''}\n        placeholder='Maximum Length'\n        key='maxLength'\n        type='number'\n        onChange={(ev) => {\n          onChange({\n            ...parameters,\n            maxLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>\n        Regular Expression Pattern{' '}\n        <a\n          href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <Tooltip\n            id={`${elementId}_regex`}\n            type='help'\n            text='Regular expression pattern that this must satisfy'\n          />\n        </a>\n      </h4>\n      <Input\n        value={parameters.pattern ? parameters.pattern : ''}\n        placeholder='Regular Expression Pattern'\n        key='pattern'\n        type='text'\n        onChange={(ev) => {\n          onChange({\n            ...parameters,\n            pattern: ev.target.value,\n          });\n        }}\n        className='card-modal-text'\n      />\n      <h4>\n        Format{' '}\n        <Tooltip\n          id={`${elementId}_format`}\n          type='help'\n          text='Require string input to match a certain common format'\n        />\n      </h4>\n      <Select\n        value={{\n          value: Object.keys(formatDictionary).includes(parameters.format!)\n            ? formatDictionary[parameters.format as FormatDictionaryKey]\n            : '',\n          label: Object.keys(formatDictionary).includes(parameters.format!)\n            ? formatDictionary[parameters.format as FormatDictionaryKey]\n            : 'None',\n        }}\n        placeholder='Format'\n        key='format'\n        options={Object.keys(formatDictionary).map((key: string) => ({\n          value: key,\n          label: formatDictionary[key as FormatDictionaryKey],\n        }))}\n        onChange={(val: any) => {\n          onChange({\n            ...parameters,\n            format: val.value,\n          });\n        }}\n        className='card-modal-select'\n      />\n      <h5>\n        Auto Complete Category{' '}\n        <a\n          href='https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <Tooltip\n            id={`${elementId}_autocomplete`}\n            type='help'\n            text=\"Suggest entries based on the user's browser history\"\n          />\n        </a>\n      </h5>\n      <Select\n        value={{\n          value: parameters['ui:autocomplete']\n            ? autoDictionary[\n                typeof parameters['ui:autocomplete'] === 'string'\n                  ? (parameters['ui:autocomplete'] as AutoDictionaryKey)\n                  : ''\n              ]\n            : '',\n          label: parameters['ui:autocomplete']\n            ? autoDictionary[\n                typeof parameters['ui:autocomplete'] === 'string'\n                  ? (parameters['ui:autocomplete'] as AutoDictionaryKey)\n                  : ''\n              ]\n            : 'None',\n        }}\n        placeholder='Auto Complete'\n        key='ui:autocomplete'\n        options={Object.keys(autoDictionary).map((key) => ({\n          value: key,\n          label: autoDictionary[key as AutoDictionaryKey],\n        }))}\n        onChange={(val: any) => {\n          onChange({\n            ...parameters,\n            'ui:autocomplete': val.value,\n          });\n        }}\n        className='card-modal-select'\n      />\n      <PlaceholderInput parameters={parameters} onChange={onChange} />\n      <h4>\n        Column Size{' '}\n        <a\n          href='https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <Tooltip\n            id={`${elementId}_column_size`}\n            type='help'\n            text='Set the column size of the input'\n          />\n        </a>\n      </h4>\n      <Input\n        value={parameters['ui:column'] ? parameters['ui:column'] : ''}\n        placeholder='Column size'\n        key='ui:column'\n        type='number'\n        onChange={(ev) => {\n          onChange({\n            ...parameters,\n            'ui:column': ev.target.value,\n          });\n        }}\n        className='card-modal-text'\n      />\n      <div className='card-modal-boolean'>\n        <FBCheckbox\n          onChangeValue={() => {\n            onChange({\n              ...parameters,\n              'ui:autofocus': parameters['ui:autofocus']\n                ? parameters['ui:autofocus'] !== true\n                : true,\n            });\n          }}\n          isChecked={\n            parameters['ui:autofocus']\n              ? parameters['ui:autofocus'] === true\n              : false\n          }\n          label='Auto Focus'\n        />\n      </div>\n    </div>\n  );\n};\n\nconst ShortAnswerField: CardComponentType = ({ parameters, onChange }) => {\n  return (\n    <React.Fragment>\n      <h5>Default value</h5>\n      <Input\n        value={\n          parameters.default as string | number | readonly string[] | undefined\n        }\n        placeholder='Default'\n        type={\n          (formatTypeDictionary[\n            parameters.format as FormatTypeDictionaryKey\n          ] as 'email' | 'url') || 'text'\n        }\n        onChange={(ev) => onChange({ ...parameters, default: ev.target.value })}\n        className='card-text'\n      />\n    </React.Fragment>\n  );\n};\n\nconst Password: CardComponentType = ({ parameters, onChange }) => {\n  return (\n    <React.Fragment>\n      <h5>Default password</h5>\n      <Input\n        value={\n          parameters.default as string | number | readonly string[] | undefined\n        }\n        placeholder='Default'\n        type='password'\n        onChange={(ev) => onChange({ ...parameters, default: ev.target.value })}\n        className='card-text'\n      />\n    </React.Fragment>\n  );\n};\n\nconst shortAnswerInput: { [key: string]: FormInput } = {\n  shortAnswer: {\n    displayName: 'Short Answer',\n    matchIf: [\n      {\n        types: ['string'],\n      },\n      ...['email', 'hostname', 'uri', 'regex'].map((format) => ({\n        types: ['string'] as DataType[],\n        format,\n      })),\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: ShortAnswerField,\n    modalBody: CardShortAnswerParameterInputs,\n  },\n  password: {\n    displayName: 'Password',\n    matchIf: [\n      {\n        types: ['string'],\n        widget: 'password',\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {\n      'ui:widget': 'password',\n    },\n    type: 'string',\n    cardBody: Password,\n    modalBody: CardShortAnswerParameterInputs,\n  },\n};\n\nexport default shortAnswerInput;\n","import React, { useState } from 'react';\nimport { Input } from 'reactstrap';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport Tooltip from '../Tooltip';\nimport { getRandomId } from '../utils';\nimport type { FormInput, CardComponentType } from '../types';\nimport { PlaceholderInput } from '../inputs/PlaceholderInput';\n\n// specify the inputs required for a string type object\nconst CardLongAnswerParameterInputs: CardComponentType = ({\n  parameters,\n  onChange,\n}) => {\n  const [elementId] = useState(getRandomId());\n  return (\n    <div>\n      <h4>Minimum Length</h4>\n      <Input\n        value={parameters.minLength ? parameters.minLength : ''}\n        placeholder='Minimum Length'\n        key='minLength'\n        type='number'\n        onChange={(ev) => {\n          onChange({\n            ...parameters,\n            minLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>Maximum Length</h4>\n      <Input\n        value={parameters.maxLength ? parameters.maxLength : ''}\n        placeholder='Maximum Length'\n        key='maxLength'\n        type='number'\n        onChange={(ev) => {\n          onChange({\n            ...parameters,\n            maxLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>\n        Regular Expression Pattern{' '}\n        <a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions'>\n          <Tooltip\n            id={`${elementId}_regex`}\n            type='help'\n            text='Regular expression pattern that this must satisfy'\n          />\n        </a>\n      </h4>\n      <Input\n        value={parameters.pattern ? parameters.pattern : ''}\n        placeholder='Regular Expression Pattern'\n        key='pattern'\n        type='text'\n        onChange={(ev) => {\n          onChange({\n            ...parameters,\n            pattern: ev.target.value,\n          });\n        }}\n        className='card-modal-text'\n      />\n      <PlaceholderInput parameters={parameters} onChange={onChange} />\n      <div className='card-modal-boolean'>\n        <FBCheckbox\n          onChangeValue={() => {\n            onChange({\n              ...parameters,\n              'ui:autofocus': parameters['ui:autofocus']\n                ? parameters['ui:autofocus'] !== true\n                : true,\n            });\n          }}\n          isChecked={\n            parameters['ui:autofocus']\n              ? parameters['ui:autofocus'] === true\n              : false\n          }\n          label='Auto Focus'\n        />\n      </div>\n    </div>\n  );\n};\n\nconst LongAnswer: CardComponentType = ({ parameters, onChange }) => {\n  return (\n    <React.Fragment>\n      <h5>Default value</h5>\n      <Input\n        value={\n          parameters.default as string | number | readonly string[] | undefined\n        }\n        placeholder='Default'\n        type='textarea'\n        onChange={(ev) => onChange({ ...parameters, default: ev.target.value })}\n        className='card-textarea'\n      />\n    </React.Fragment>\n  );\n};\n\nconst longAnswerInput: { [key: string]: FormInput } = {\n  longAnswer: {\n    displayName: 'Long Answer',\n    matchIf: [\n      {\n        types: ['string'],\n        widget: 'textarea',\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {\n      'ui:widget': 'textarea',\n    },\n    type: 'string',\n    cardBody: LongAnswer,\n    modalBody: CardLongAnswerParameterInputs as CardComponentType,\n  },\n};\n\nexport default longAnswerInput;\n","import React, { useState } from 'react';\nimport { Input } from 'reactstrap';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport Tooltip from '../Tooltip';\nimport { getRandomId } from '../utils';\nimport type { FormInput, CardComponentType } from '../types';\n\n// specify the inputs required for a number type object\nconst CardNumberParameterInputs: CardComponentType = ({\n  parameters,\n  onChange,\n}) => {\n  const [elementId] = useState(getRandomId());\n  return (\n    <div>\n      <h4>\n        Multiple of{' '}\n        <Tooltip\n          id={`${elementId}_multiple`}\n          type='help'\n          text='Require number to be a multiple of this number'\n        />\n      </h4>\n      <Input\n        value={parameters.multipleOf ? parameters.multipleOf : ''}\n        placeholder='ex: 2'\n        key='multipleOf'\n        type='number'\n        onChange={(ev) => {\n          let newVal: null | number = parseFloat(ev.target.value);\n          if (Number.isNaN(newVal)) newVal = null;\n          onChange({\n            ...parameters,\n            multipleOf: newVal,\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>Minimum</h4>\n      <Input\n        value={parameters.minimum || parameters.exclusiveMinimum || ''}\n        placeholder='ex: 3'\n        key='minimum'\n        type='number'\n        onChange={(ev) => {\n          let newVal: null | number = parseFloat(ev.target.value);\n          if (Number.isNaN(newVal)) newVal = null;\n          // change either min or exclusiveMin depending on which one is active\n          if (parameters.exclusiveMinimum) {\n            onChange({\n              ...parameters,\n              exclusiveMinimum: newVal,\n              minimum: null,\n            });\n          } else {\n            onChange({\n              ...parameters,\n              minimum: newVal,\n              exclusiveMinimum: null,\n            });\n          }\n        }}\n        className='card-modal-number'\n      />\n      <div className='card-modal-boolean'>\n        <FBCheckbox\n          key='exclusiveMinimum'\n          onChangeValue={() => {\n            const newMin = parameters.minimum || parameters.exclusiveMinimum;\n            if (parameters.exclusiveMinimum) {\n              onChange({\n                ...parameters,\n                exclusiveMinimum: null,\n                minimum: newMin,\n              });\n            } else {\n              onChange({\n                ...parameters,\n                exclusiveMinimum: newMin,\n                minimum: null,\n              });\n            }\n          }}\n          isChecked={!!parameters.exclusiveMinimum}\n          disabled={!parameters.minimum && !parameters.exclusiveMinimum}\n          label='Exclusive Minimum'\n        />\n      </div>\n      <h4>Maximum</h4>\n      <Input\n        value={parameters.maximum || parameters.exclusiveMaximum || ''}\n        placeholder='ex: 8'\n        key='maximum'\n        type='number'\n        onChange={(ev) => {\n          let newVal: null | number = parseFloat(ev.target.value);\n          if (Number.isNaN(newVal)) newVal = null;\n          // change either max or exclusiveMax depending on which one is active\n          if (parameters.exclusiveMinimum) {\n            onChange({\n              ...parameters,\n              exclusiveMaximum: newVal,\n              maximum: null,\n            });\n          } else {\n            onChange({\n              ...parameters,\n              maximum: newVal,\n              exclusiveMaximum: null,\n            });\n          }\n        }}\n        className='card-modal-number'\n      />\n      <div className='card-modal-boolean'>\n        <FBCheckbox\n          key='exclusiveMaximum'\n          onChangeValue={() => {\n            const newMax = parameters.maximum || parameters.exclusiveMaximum;\n            if (parameters.exclusiveMaximum) {\n              onChange({\n                ...parameters,\n                exclusiveMaximum: null,\n                maximum: newMax,\n              });\n            } else {\n              onChange({\n                ...parameters,\n                exclusiveMaximum: newMax,\n                maximum: null,\n              });\n            }\n          }}\n          isChecked={!!parameters.exclusiveMaximum}\n          disabled={!parameters.maximum && !parameters.exclusiveMaximum}\n          label='Exclusive Maximum'\n        />\n      </div>\n    </div>\n  );\n};\n\nconst NumberField: CardComponentType = ({ parameters, onChange }) => {\n  return (\n    <React.Fragment>\n      <h5>Default number</h5>\n      <Input\n        value={\n          parameters.default as string | number | readonly string[] | undefined\n        }\n        placeholder='Default'\n        type='number'\n        onChange={(ev) =>\n          onChange({\n            ...parameters,\n            default: parseFloat(ev.target.value),\n          })\n        }\n        className='card-number'\n      />\n    </React.Fragment>\n  );\n};\n\nconst numberInputs: { [key: string]: FormInput } = {\n  integer: {\n    displayName: 'Integer',\n    matchIf: [\n      {\n        types: ['integer'],\n      },\n      {\n        types: ['integer'],\n        widget: 'number',\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'integer',\n    cardBody: NumberField,\n    modalBody: CardNumberParameterInputs,\n  },\n  number: {\n    displayName: 'Number',\n    matchIf: [\n      {\n        types: ['number'],\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'number',\n    cardBody: NumberField,\n    modalBody: CardNumberParameterInputs,\n  },\n};\n\nexport default numberInputs;\n","import React, { useState } from 'react';\nimport { Input } from 'reactstrap';\nimport {\n  excludeKeys,\n  generateElementComponentsFromSchemas,\n  generateCategoryHash,\n} from '../utils';\nimport Card from '../Card';\nimport Section from '../Section';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport shortAnswerInputs from './shortAnswerInputs';\nimport longAnswerInputs from './longAnswerInputs';\nimport numberInputs from './numberInputs';\nimport defaultInputs from './defaultInputs';\nimport { getRandomId } from '../utils';\nimport type {\n  FormInput,\n  CardComponentType,\n  CardComponentPropsType,\n} from '../types';\n\n// specify the inputs required for a string type object\nconst CardArrayParameterInputs: CardComponentType = ({\n  parameters,\n  onChange,\n}) => {\n  return (\n    <div>\n      <h4>Minimum Items</h4>\n      <Input\n        value={parameters.minItems || ''}\n        placeholder='ex: 2'\n        key='minimum'\n        type='number'\n        onChange={(ev) => {\n          onChange({\n            ...parameters,\n            minItems: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>Maximum Items</h4>\n      <Input\n        value={parameters.maxItems || ''}\n        placeholder='ex: 2'\n        key='maximum'\n        type='number'\n        onChange={(ev) => {\n          onChange({\n            ...parameters,\n            maxItems: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n    </div>\n  );\n};\n\nconst InnerCard: CardComponentType = ({ parameters, onChange, mods }) => {\n  const [elementId] = useState(getRandomId);\n  const newDataProps: { [key: string]: any } = {};\n  const newUiProps: { [key: string]: any } = {};\n  const allFormInputs = excludeKeys(\n    Object.assign({}, defaultFormInputs, (mods && mods.customFormInputs) || {}),\n    mods && mods.deactivatedFormInputs,\n  );\n\n  // parse components into data and ui relevant pieces\n  Object.keys(parameters).forEach((propName: string) => {\n    if (propName.startsWith('ui:*')) {\n      newUiProps[propName.substring(4)] =\n        parameters[propName as keyof CardComponentPropsType];\n    } else if (propName.startsWith('ui:')) {\n      newUiProps[propName] =\n        parameters[propName as keyof CardComponentPropsType];\n    } else if (!['name', 'required'].includes(propName)) {\n      newDataProps[propName] =\n        parameters[propName as keyof CardComponentPropsType];\n    }\n  });\n\n  const definitionData = parameters.definitionData\n    ? parameters.definitionData\n    : {};\n  const definitionUi = parameters.definitionUi ? parameters.definitionUi : {};\n  const [cardOpen, setCardOpen] = React.useState(false);\n  if (parameters.type !== 'array') {\n    return <h4>Not an array </h4>;\n  }\n  return (\n    <div className='card-array'>\n      <FBCheckbox\n        onChangeValue={() => {\n          if (newDataProps.items.type === 'object') {\n            onChange({\n              ...parameters,\n              items: {\n                ...newDataProps.items,\n                type: 'string',\n              },\n            });\n          } else {\n            onChange({\n              ...parameters,\n              items: {\n                ...newDataProps.items,\n                type: 'object',\n              },\n            });\n          }\n        }}\n        isChecked={newDataProps.items.type === 'object'}\n        label='Section'\n        id={`${elementId}_issection`}\n      />\n      {generateElementComponentsFromSchemas({\n        schemaData: { properties: { item: newDataProps.items } },\n        uiSchemaData: { item: newUiProps.items },\n        onChange: (schema, uischema) => {\n          onChange({\n            ...parameters,\n            items: schema.properties.item,\n            'ui:*items': uischema.item || {},\n          });\n        },\n        path: elementId,\n        definitionData,\n        definitionUi,\n        hideKey: true,\n        cardOpenArray: [cardOpen],\n        setCardOpenArray: (newArr) => setCardOpen(newArr[0]),\n        allFormInputs,\n        mods,\n        categoryHash: generateCategoryHash(allFormInputs),\n        Card: (props) => <Card {...props} showObjectNameInput={false} />,\n        Section,\n      })}\n    </div>\n  );\n};\n\nfunction getInnerCardComponent({\n  defaultFormInputs,\n}: {\n  defaultFormInputs: { [key: string]: FormInput };\n}): CardComponentType {\n  return InnerCard;\n}\n\nconst defaultFormInputs: { [key: string]: FormInput } = {\n  ...defaultInputs,\n  ...shortAnswerInputs,\n  ...longAnswerInputs,\n  ...numberInputs,\n};\ndefaultFormInputs.array = {\n  displayName: 'Array',\n  matchIf: [\n    {\n      types: ['array'],\n    },\n  ],\n  defaultDataSchema: {\n    items: { type: 'string' },\n  },\n  defaultUiSchema: {},\n  type: 'array',\n  cardBody: getInnerCardComponent({ defaultFormInputs }),\n  modalBody: CardArrayParameterInputs,\n};\n\nconst ArrayInputs: { [key: string]: FormInput } = {\n  array: {\n    displayName: 'Array',\n    matchIf: [\n      {\n        types: ['array'],\n      },\n    ],\n    defaultDataSchema: {\n      items: { type: 'string' },\n    },\n    defaultUiSchema: {},\n    type: 'array',\n    cardBody: getInnerCardComponent({ defaultFormInputs }),\n    modalBody: CardArrayParameterInputs,\n  },\n};\n\nexport default ArrayInputs;\n","import React from 'react';\nimport type { FormInput, CardComponentType } from '../types';\nimport Select from 'react-select';\nimport { PlaceholderInput } from '../inputs/PlaceholderInput';\n\nexport const CardReferenceParameterInputs: CardComponentType = ({\n  parameters,\n  onChange,\n}) => {\n  return (\n    <div>\n      <PlaceholderInput parameters={parameters} onChange={onChange} />\n    </div>\n  );\n};\n\nconst RefChoice: CardComponentType = ({ parameters, onChange }) => {\n  const pathArr = (parameters.$ref || '').split('/');\n  const currentValueLabel =\n    pathArr.length === 3 &&\n    pathArr[0] === '#' &&\n    pathArr[1] === 'definitions' &&\n    (parameters.definitionData || {})[pathArr[2]]\n      ? parameters.definitionData![pathArr[2]].title || parameters.$ref\n      : parameters.$ref;\n\n  return (\n    <div className='card-select'>\n      <Select\n        value={{\n          value: parameters.$ref,\n          label: currentValueLabel,\n        }}\n        placeholder='Reference'\n        options={Object.keys(parameters.definitionData || {}).map((key) => ({\n          value: `#/definitions/${key}`,\n          label:\n            parameters.definitionData![key].title || `#/definitions/${key}`,\n        }))}\n        onChange={(val: any) => {\n          onChange({ ...parameters, $ref: val.value });\n        }}\n        className='card-select'\n      />\n    </div>\n  );\n};\n\nconst referenceInputs: { [key: string]: FormInput } = {\n  ref: {\n    displayName: 'Reference',\n    matchIf: [\n      {\n        types: ['null'],\n        $ref: true,\n      },\n    ],\n    defaultDataSchema: {\n      $ref: '',\n      title: '',\n      description: '',\n    },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: RefChoice,\n    modalBody: CardReferenceParameterInputs,\n  },\n};\n\nexport default referenceInputs;\n","import shortAnswerInputs from './shortAnswerInputs';\nimport longAnswerInputs from './longAnswerInputs';\nimport numberInputs from './numberInputs';\nimport arrayInputs from './arrayInputs';\nimport defaultInputs from './defaultInputs';\nimport referenceInputs from './referenceInputs';\nimport { FormInput } from '../types';\n\nconst DEFAULT_FORM_INPUTS: { [key: string]: FormInput } = {\n  ...defaultInputs,\n  ...referenceInputs,\n  ...shortAnswerInputs,\n  ...longAnswerInputs,\n  ...numberInputs,\n  ...arrayInputs,\n};\n\nexport default DEFAULT_FORM_INPUTS;\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Alert, Input } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport Card from './Card';\nimport Section from './Section';\nimport Add from './Add';\nimport { arrows as arrowsStyle } from './styles';\nimport {\n  parse,\n  stringify,\n  checkForUnsupportedFeatures,\n  generateElementComponentsFromSchemas,\n  addCardObj,\n  addSectionObj,\n  onDragEnd,\n  countElementsFromSchema,\n  generateCategoryHash,\n  excludeKeys,\n} from './utils';\nimport DEFAULT_FORM_INPUTS from './defaults/defaultFormInputs';\nimport type {\n  Mods,\n  InitParameters,\n  AddFormObjectParametersType,\n} from './types';\n\nconst useStyles = createUseStyles({\n  formBuilder: {\n    'text-align': 'center',\n    '& .fa': {\n      cursor: 'pointer',\n    },\n    '& .fa-question-circle, & .fa-circle-question': {\n      color: 'gray',\n    },\n    '& .fa-asterisk': {\n      'font-size': '.9em',\n      color: 'green',\n    },\n    '& .fa-plus-square, & .fa-square-plus': {\n      color: 'green',\n      'font-size': '1.5em',\n      margin: '0 auto',\n    },\n    ...arrowsStyle,\n    '& .card-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      display: 'block',\n      width: '70%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid gray',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid gray',\n      },\n      '& .label': {\n        float: 'left',\n      },\n    },\n    '& .card-container:hover': { border: '1px solid green' },\n    '& .card-dependent': {\n      border: '1px dashed gray',\n    },\n    '& .card-requirements': {\n      border: '1px dashed black',\n    },\n    '& .section-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      display: 'block',\n      width: '90%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid gray',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid gray',\n      },\n      '& .label': {\n        float: 'left',\n      },\n    },\n    '& .section-container:hover': { border: '1px solid green' },\n    '& .section-dependent': {\n      border: '1px dashed gray',\n    },\n    '& .section-requirements': {\n      border: '1px dashed black',\n    },\n    '& .alert': {\n      textAlign: 'left',\n      width: '70%',\n      margin: '1em auto',\n      '& h5': {\n        color: 'black',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        margin: '0',\n      },\n      '& .fa': { fontSize: '14px' },\n    },\n    '& .disabled-unchecked-checkbox': {\n      color: 'gray',\n      '& div::before': { backgroundColor: 'lightGray' },\n    },\n    '& .disabled-input': {\n      '& input': { backgroundColor: 'lightGray' },\n      '& input:focus': {\n        backgroundColor: 'lightGray',\n        border: '1px solid gray',\n      },\n    },\n  },\n  formHead: {\n    display: 'block',\n    margin: '0 auto',\n    'background-color': '#EBEBEB',\n    border: '1px solid #858F96',\n    'border-radius': '4px',\n    width: '70%',\n    padding: '10px',\n    '& div': {\n      width: '30%',\n      display: 'inline-block',\n      'text-align': 'left',\n      padding: '10px',\n    },\n    '& .form-title': {\n      'text-align': 'left',\n    },\n    '& .form-description': {\n      'text-align': 'left',\n    },\n    '& h5': {\n      'font-size': '14px',\n      'line-height': '21px',\n      'font-weight': 'bold',\n    },\n  },\n  formBody: {\n    display: 'flex',\n    flexDirection: 'column',\n    '& .fa-pencil-alt, & .fa-pencil': {\n      border: '1px solid #1d71ad',\n      color: '#1d71ad',\n    },\n    '& .modal-body': {\n      maxHeight: '500px',\n      overflowY: 'scroll',\n    },\n    '& .card-add': {\n      cursor: 'pointer',\n      display: 'block',\n      color: '$green',\n      fontSize: '1.5em',\n    },\n  },\n  formFooter: {\n    marginTop: '1em',\n    textAlign: 'center',\n    '& .fa': { cursor: 'pointer', color: '$green', fontSize: '1.5em' },\n  },\n});\n\nexport default function FormBuilder({\n  schema,\n  uischema,\n  onMount,\n  onChange,\n  mods,\n  className,\n}: {\n  schema: string;\n  uischema: string;\n  onMount?: (parameters: InitParameters) => any;\n  onChange: (schema: string, uischema: string) => any;\n  mods?: Mods;\n  className?: string;\n}): ReactElement {\n  const classes = useStyles();\n  const schemaData = parse(schema);\n  schemaData.type = 'object';\n  const uiSchemaData = parse(uischema);\n  const allFormInputs = excludeKeys(\n    Object.assign(\n      {},\n      DEFAULT_FORM_INPUTS,\n      (mods && mods.customFormInputs) || {},\n    ),\n    mods && mods.deactivatedFormInputs,\n  );\n\n  const unsupportedFeatures = checkForUnsupportedFeatures(\n    schemaData,\n    uiSchemaData,\n    allFormInputs,\n  );\n\n  const elementNum = countElementsFromSchema(schemaData);\n  const defaultCollapseStates = [...Array(elementNum)].map(() => false);\n  const [cardOpenArray, setCardOpenArray] = React.useState(\n    defaultCollapseStates,\n  );\n  const categoryHash = generateCategoryHash(allFormInputs);\n\n  const [isFirstRender, setIsFirstRender] = useState(true);\n\n  const addProperties: AddFormObjectParametersType = {\n    schema: schemaData,\n    uischema: uiSchemaData,\n    mods: mods,\n    onChange: (\n      newSchema: { [key: string]: any },\n      newUiSchema: { [key: string]: any },\n    ) => onChange(stringify(newSchema), stringify(newUiSchema)),\n    definitionData: schemaData.definitions,\n    definitionUi: uiSchemaData.definitions,\n    categoryHash,\n  };\n\n  const hideAddButton =\n    schemaData.properties && Object.keys(schemaData.properties).length !== 0;\n\n  useEffect(() => {\n    if (isFirstRender) {\n      onMount &&\n        onMount({\n          categoryHash,\n        });\n      setIsFirstRender(false);\n    }\n  }, [isFirstRender, onMount, categoryHash]);\n\n  return (\n    <div className={`${classes.formBuilder} ${className || ''}`}>\n      <Alert\n        style={{\n          display: unsupportedFeatures.length === 0 ? 'none' : 'block',\n        }}\n        color='warning'\n      >\n        <h5>Unsupported Features:</h5>\n        {unsupportedFeatures.map((message, index) => (\n          <li key={index}>{message}</li>\n        ))}\n      </Alert>\n      {(!mods || mods.showFormHead !== false) && (\n        <div className={classes.formHead} data-test='form-head'>\n          <div>\n            <h5 data-test='form-name-label'>\n              {mods &&\n              mods.labels &&\n              typeof mods.labels.formNameLabel === 'string'\n                ? mods.labels.formNameLabel\n                : 'Form Title1'}\n            </h5>\n            <Input\n              value={schemaData.title || ''}\n              placeholder='Title'\n              type='text'\n              onChange={(ev) => {\n                onChange(\n                  stringify({\n                    ...schemaData,\n                    title: ev.target.value,\n                  }),\n                  uischema,\n                );\n              }}\n              className='form-title'\n            />\n          </div>\n          <div>\n            <h5 data-test='form-description-label'>\n              {mods &&\n              mods.labels &&\n              typeof mods.labels.formDescriptionLabel === 'string'\n                ? mods.labels.formDescriptionLabel\n                : 'Form Description'}\n            </h5>\n            <Input\n              value={schemaData.description || ''}\n              placeholder='Description'\n              type='text'\n              onChange={(ev) =>\n                onChange(\n                  stringify({\n                    ...schemaData,\n                    description: ev.target.value,\n                  }),\n                  uischema,\n                )\n              }\n              className='form-description'\n            />\n          </div>\n        </div>\n      )}\n      <div className={`form-body ${classes.formBody}`}>\n        <DragDropContext\n          onDragEnd={(result) =>\n            onDragEnd(result, {\n              schema: schemaData,\n              uischema: uiSchemaData,\n              onChange: (newSchema, newUiSchema) =>\n                onChange(stringify(newSchema), stringify(newUiSchema)),\n              definitionData: schemaData.definitions,\n              definitionUi: uiSchemaData.definitions,\n              categoryHash,\n            })\n          }\n        >\n          <Droppable droppableId='droppable'>\n            {(providedDroppable) => (\n              <div\n                ref={providedDroppable.innerRef}\n                {...providedDroppable.droppableProps}\n              >\n                {generateElementComponentsFromSchemas({\n                  schemaData,\n                  uiSchemaData,\n                  onChange: (newSchema, newUiSchema) =>\n                    onChange(stringify(newSchema), stringify(newUiSchema)),\n                  definitionData: schemaData.definitions,\n                  definitionUi: uiSchemaData.definitions,\n                  path: 'root',\n                  cardOpenArray,\n                  setCardOpenArray,\n                  allFormInputs,\n                  mods,\n                  categoryHash,\n                  Card,\n                  Section,\n                }).map((element: any, index) => (\n                  <Draggable\n                    key={element.key}\n                    draggableId={element.key}\n                    index={index}\n                  >\n                    {(providedDraggable) => (\n                      <div\n                        ref={providedDraggable.innerRef}\n                        {...providedDraggable.draggableProps}\n                        {...providedDraggable.dragHandleProps}\n                      >\n                        {element}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {providedDroppable.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n      <div className={`form-footer ${classes.formFooter}`}>\n        {!hideAddButton &&\n          mods?.components?.add &&\n          mods.components.add(addProperties)}\n        {!mods?.components?.add && (\n          <Add\n            tooltipDescription={((mods || {}).tooltipDescriptions || {}).add}\n            labels={mods?.labels ?? {}}\n            addElem={(choice: string) => {\n              if (choice === 'card') {\n                addCardObj(addProperties);\n              } else if (choice === 'section') {\n                addSectionObj(addProperties);\n              }\n            }}\n            hidden={hideAddButton}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport {\n  generateElementComponentsFromSchemas,\n  countElementsFromSchema,\n  addCardObj,\n  addSectionObj,\n} from './utils';\nimport Card from './Card';\nimport Section from './Section';\nimport Add from './Add';\nimport DEFAULT_FORM_INPUTS from './defaults/defaultFormInputs';\nimport type { Mods } from './types';\n\ninterface CardGalleryProps {\n  definitionSchema: { [key: string]: any };\n  definitionUiSchema: { [key: string]: any };\n  onChange: (\n    schema: { [key: string]: any },\n    uischema: { [key: string]: any },\n  ) => void;\n  mods?: Mods;\n  categoryHash: { [key: string]: string };\n}\n\nexport default function CardGallery({\n  definitionSchema,\n  definitionUiSchema,\n  onChange,\n  mods,\n  categoryHash,\n}: CardGalleryProps): ReactElement {\n  const elementNum = countElementsFromSchema({\n    properties: definitionSchema,\n  });\n  const defaultCollapseStates = [...Array(elementNum)].map(() => false);\n  const [cardOpenArray, setCardOpenArray] = React.useState(\n    defaultCollapseStates,\n  );\n  const allFormInputs = Object.assign(\n    {},\n    DEFAULT_FORM_INPUTS,\n    (mods && mods.customFormInputs) || {},\n  );\n  const componentArr = generateElementComponentsFromSchemas({\n    schemaData: { properties: definitionSchema },\n    uiSchemaData: definitionUiSchema,\n    onChange: (newDefinitions, newDefinitionUis) => {\n      const oldUi = newDefinitionUis;\n      const newUi: { [key: string]: any } = {};\n\n      Object.keys(oldUi).forEach((definedUi) => {\n        if (!['definitions', 'ui:order'].includes(definedUi))\n          newUi[definedUi] = oldUi[definedUi];\n      });\n      onChange(newDefinitions.properties, newUi);\n    },\n    path: 'definitions',\n    definitionData: definitionSchema,\n    definitionUi: definitionUiSchema,\n    cardOpenArray,\n    setCardOpenArray,\n    allFormInputs,\n    mods,\n    categoryHash,\n    Card,\n    Section,\n  }).map((element: any) => (\n    <div\n      key={typeof element.key === 'string' ? element.key : ''}\n      className='form_gallery_container'\n    >\n      {element}\n    </div>\n  ));\n\n  const hideAddButton =\n    !!definitionSchema && Object.keys(definitionSchema).length !== 0;\n\n  const addProperties = {\n    schema: { properties: definitionSchema },\n    uischema: definitionUiSchema,\n    mods: mods,\n    onChange: (\n      newDefinitions: { [key: string]: any },\n      newDefinitionUis: { [key: string]: any },\n    ) => {\n      const oldUi = newDefinitionUis;\n      const newUi: { [key: string]: any } = {};\n\n      Object.keys(oldUi).forEach((definedUiSchemaKey) => {\n        if (!['definitions', 'ui:order'].includes(definedUiSchemaKey))\n          newUi[definedUiSchemaKey] = oldUi[definedUiSchemaKey];\n      });\n      onChange(newDefinitions.properties, newUi);\n    },\n    definitionData: definitionSchema,\n    definitionUi: definitionUiSchema,\n    categoryHash,\n  };\n\n  return (\n    <div className='form_gallery'>\n      {componentArr}\n      {componentArr.length === 0 && <h5>No components in \"definitions\"</h5>}\n      <div className='form_footer'>\n        {!hideAddButton &&\n          mods?.components?.add &&\n          mods.components.add(addProperties)}\n        {!mods?.components?.add && (\n          <Add\n            tooltipDescription={((mods || {}).tooltipDescriptions || {}).add}\n            addElem={(choice: string) => {\n              if (choice === 'card') {\n                addCardObj(addProperties);\n              } else if (choice === 'section') {\n                addSectionObj(addProperties);\n              }\n            }}\n            hidden={hideAddButton}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport CardGallery from './CardGallery';\nimport {\n  parse,\n  stringify,\n  propagateDefinitionChanges,\n  generateCategoryHash,\n  excludeKeys,\n} from './utils';\nimport { arrows as arrowsStyle } from './styles';\nimport DEFAULT_FORM_INPUTS from './defaults/defaultFormInputs';\nimport type { Mods } from './types';\n\nconst useStyles = createUseStyles({\n  preDefinedGallery: {\n    display: 'flex',\n    flexDirection: 'column',\n    'text-align': 'center',\n    '& .fa': {\n      cursor: 'pointer',\n    },\n    '& .fa-question-circle, & .fa-circle-question': {\n      color: 'gray',\n    },\n    '& .fa-asterisk': {\n      'font-size': '.9em',\n      color: 'green',\n    },\n    ...arrowsStyle,\n    '& .form_footer': {\n      marginTop: '1em',\n      textAlign: 'center',\n      '& .fa': { cursor: 'pointer', color: '$green', fontSize: '1.5em' },\n    },\n    '& .fa-plus-square & .fa-square-plus': {\n      color: 'green',\n      'font-size': '1.5em',\n      margin: '0 auto',\n    },\n    '& .card-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      width: '70%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid gray',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid gray',\n      },\n      '& .label': {\n        float: 'left',\n      },\n    },\n    '& .card-requirements': {\n      border: '1px dashed black',\n    },\n    '& .section-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      display: 'block',\n      width: '90%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid gray',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid gray',\n      },\n      '& .label': {\n        float: 'left',\n      },\n    },\n    '& .section-dependent': {\n      border: '1px dashed gray',\n    },\n    '& .section-requirements': {\n      border: '1px dashed black',\n    },\n    '& .fa-pencil-alt, & .fa-pencil': {\n      border: '1px solid #1d71ad',\n      color: '#1d71ad',\n    },\n    '& .modal-body': {\n      maxHeight: '500px',\n      overflowY: 'scroll',\n    },\n    '& .card-container:hover': { border: '1px solid green' },\n    '& .card-dependent': { border: '1px dashed gray' },\n    '& .card-add': {\n      cursor: 'pointer',\n      display: 'block',\n      color: '$green',\n      fontSize: '1.5em',\n    },\n\n    '& .section-container:hover': { border: '1px solid green' },\n  },\n});\n\nexport default function PredefinedGallery({\n  schema,\n  uischema,\n  onChange,\n  mods,\n}: {\n  schema: string;\n  uischema: string;\n  onChange: (schema: string, uischema: string) => any;\n  mods?: Mods;\n}): ReactElement {\n  const classes = useStyles();\n  const schemaData = React.useMemo(() => parse(schema) || {}, [schema]);\n  const uiSchemaData = React.useMemo(() => parse(uischema) || {}, [uischema]);\n  const allFormInputs = excludeKeys(\n    Object.assign(\n      {},\n      DEFAULT_FORM_INPUTS,\n      (mods && mods.customFormInputs) || {},\n    ),\n    mods && mods.deactivatedFormInputs,\n  );\n  const categoryHash = generateCategoryHash(allFormInputs);\n\n  React.useEffect(() => {\n    if (!uiSchemaData.definitions) {\n      // eslint-disable-next-line no-console\n      console.log('Parsing UI schema to assign UI for definitions');\n      // need to create definitions from scratch\n      const references: string[] = [];\n      // recursively search for all $refs in the schemaData\n      const findRefs = (name: string, schemaObject: { [key: string]: any }) => {\n        if (!schemaObject) return;\n        if (typeof schemaObject === 'object')\n          Object.keys(schemaObject).forEach((key) => {\n            if (typeof key === 'string') {\n              if (key === '$ref') references.push(name);\n              findRefs(key, schemaObject[key]);\n            }\n          });\n        if (Array.isArray(schemaObject))\n          schemaObject.forEach((innerObj) => {\n            findRefs(name, innerObj);\n          });\n      };\n\n      findRefs('root', schemaData);\n\n      uiSchemaData.definitions = {};\n      const referenceSet = new Set(references);\n      Object.keys(uiSchemaData).forEach((uiProp) => {\n        if (referenceSet.has(uiProp))\n          uiSchemaData.definitions[uiProp] = uiSchemaData[uiProp];\n      });\n      if (!Object.keys(uiSchemaData.definitions).length) {\n        uiSchemaData.definitions = undefined;\n      }\n      onChange(stringify(schemaData), stringify(uiSchemaData));\n    }\n  }, [uiSchemaData, schemaData, onChange]);\n  return (\n    <div className={classes.preDefinedGallery}>\n      <CardGallery\n        definitionSchema={schemaData.definitions || {}}\n        definitionUiSchema={uiSchemaData.definitions || {}}\n        onChange={(\n          newDefinitions: { [key: string]: any },\n          newDefinitionsUi: { [key: string]: any },\n        ) => {\n          // propagate changes in ui definitions to all relavant parties in main schema\n\n          propagateDefinitionChanges(\n            { ...schemaData, definitions: newDefinitions },\n            { ...uiSchemaData, definitions: newDefinitionsUi },\n            (newSchema, newUiSchema) =>\n              onChange(stringify(newSchema), stringify(newUiSchema)),\n            categoryHash,\n          );\n        }}\n        mods={mods}\n        categoryHash={categoryHash}\n      />\n    </div>\n  );\n}\n"],"names":["useStyles","createUseStyles","checkbox","display","marginRight","FBCheckbox","_ref","onChangeValue","_ref$value","value","_ref$isChecked","isChecked","_ref$label","label","_ref$use","use","_ref$disabled","disabled","_ref$id","id","_ref$dataTest","dataTest","_ref$labelClassName","labelClassName","classjss","classes","classnames","potentialCheckboxId","checkboxId","undefined","React","createElement","className","type","onChange","event","checked","htmlFor","FontAwesomeIcon","otherProps","_objectWithoutPropertiesLoose","_excluded","props","Object","assign","FortAwesomeFontAwesomeIcon","_objectSpread","collapseElement","cursor","marginTop","padding","fontSize","marginLeft","Collapse","disableToggle","onClick","toggleCollapse","icon","isOpen","faCaretDown","faCaretRight","title","RSCollapse","children","FBRadioButton","name","required","autoFocus","_useState","useState","Math","floor","random","key","radio","marginBottom","height","verticalAlign","FBRadioGroup","options","defaultValue","horizontal","toString","elementId","map","option","index","typeMap","alert","faAsterisk","help","faQuestionCircle","toolTip","color","Example","text","Fragment","style","textDecoration","UncontrolledTooltip","autohide","placement","target","parse","JSON","stringify","obj","defaultDataProps","category","allFormInputs","defaultDataSchema","defaultUiProps","defaultUiSchema","categoryType","getCardBody","cardBody","categoryToNameMap","categoryNameMap","keys","forEach","inputName","displayName","updateElementNames","elementArray","elementNames","elem","newElem","neighborNames","generateCategoryHash","categoryHash","categoryName","formInput","matchIf","match","types","hash","widget","field","format","$ref","Error","getCardCategory","cardProps","currentHash","dataOptions","uiOptions","console","error","supportedPropertyParameters","Set","supportedUiParameters","checkObjectForUnsupportedFeatures","schema","uischema","supportedWidgets","supportedFields","supportedOptions","unsupportedFeatures","property","has","push","uiProperty","propDefined","properties","includes","dependencies","dependencyKey","parameter","oneOf","grouping","entries","element","uiProp","uiOption","checkForUnsupportedFeatures","widgets","fields","inputType","possibleOptions","Array","isArray","apply","generateDependencyElement","dataProps","uiProperties","requiredNames","definitionData","definitionUi","useDefinitionDetails","uiProps","newElement","elementDetails","pathArr","split","definedUiProps","propType","reservedKeys","uiKey","generateElementPropsFromSchemas","parameters","elementDict","_ref2","_elementDetails","startsWith","parent","group","possibilityIndex","possibility","dependents","requiredValues","_ref3","length","dependent","_ref4","cardPropList","remainder","remCard","countElementsFromSchema","schemaData","elementCount","_ref5","_ref6","_ref7","generateSchemaElementFromElement","_element$schema","_element$schema$requi","description","returnElement","prop","generateSchemaFromElementProps","elementArr","newSchema","dependentElements","dependentElement","add","elementName","_possibility$children","_objectSpread2","childrenComponents","child","filter","_ref8","_ref9","generateUiSchemaFromElementProps","uiSchema","uiOrder","definitions","substring","getCardParameterInputComponentForType","modalBody","updateSchemas","newUiSchema","DEFAULT_INPUT_NAME","getIdFromElementsBlock","elements","names","defaultNameLength","max","Number","parseInt","isNaN","addCardObj","mods","newElementObjArr","i","getNewElementDefaultDataOptions","newElementDefaultUiSchema","splice","addSectionObj","generateElementComponentsFromSchemas","uiSchemaData","hideKey","path","cardOpenArray","setCardOpenArray","Card","Section","elementPropArr","elementList","elementProp","MIN_CARD_OPEN_ARRAY_LENGTH","currentLength","addProperties","fill","expanded","TypeSpecificParameters","componentProps","newCardObj","newDataProps","newUiProps","propName","oldElement","onDelete","concat","slice","onMoveUp","tempBlock","onMoveDown","addElem","choice","cardOpen","setCardOpen","newState","newRef","oldSection","onNameChange","newName","onRequireToggle","onDependentsChange","newDependents","reference","parentProperties","onDragEnd","result","details","src","source","dest","destination","propagateElementChange","updatedElementArr","childrenElements","updatedChildren","propagateDefinitionChanges","bodyElements","updatedBodyElements","subtractArray","array1","array2","reduce","acc","curr","_objectSpread3","v","excludeKeys","keysHash","_objectSpread4","_objectSpread5","newElementDefaultDataOptions","getRandomId","chars","numberOfChars","randomIdLength","from","join","DependencyWarning","definedVals","val","undefinedVals","Tooltip","CardSelector","possibleChoices","chosenChoices","placeholder","chosenChoice","faTimes","Select","cardEnumOption","width","flexDirection","justifyContent","CardEnumOptions","initialValues","showNames","possibleValues","_loop","Input","ev","newVal","parseFloat","isInteger","faPlus","ValueSelector","parentEnums","parentType","parentName","parentSchema","enumType","enumArr","getInput","oldCombo","combination","newCase","propArr","newEnum","DependencyPossibility","newPossibility","dependencyField","textAlign","border","borderRadius","margin","checkIfValueBasedDependency","valueBased","DependencyField","selection","cardModal","paddingTop","paddingBottom","CardModal","onClose","componentPropsState","setComponentProps","useEffect","Modal","ModalHeader","ModalBody","href","rel","min","ModalFooter","Button","GeneralParameterInputs","CardBody","CardGeneralParameterInputs","_ref$showObjectNameIn","showObjectNameInput","_React$useState","keyState","setKeyState","_React$useState2","keyError","setKeyError","_React$useState3","titleState","setTitleState","_React$useState4","descriptionState","setDescriptionState","_React$useState5","categoryMap","fetchLabel","labelName","defaultLabel","labels","objectNameLabel","displayNameLabel","descriptionLabel","inputTypeLabel","availableInputTypes","definitionsInSchema","inputKeys","deactivatedFormInputs","sort","a","b","localeCompare","tooltipDescriptions","cardObjectName","FormGroup","invalid","onBlur","FormFeedback","cardDisplayName","cardDescription","cardInputType","newCategory","newProps","firstDefinition","Add","_labels$addElementLab","_labels$addSectionLab","hidden","tooltipDescription","anchorEl","setAnchorEl","_useState2","createChoice","setCreateChoice","handleOpen","currentTarget","handleClose","variant","Popover","open","Boolean","Typography","RadioGroup","FormControlLabel","control","Radio","addElementLabel","addSectionLabel","cardEntries","backgroundColor","fontWeight","cardInteractions","_mods$components","_mods$components2","_mods$components3","modalOpen","setModalOpen","faArrowUp","faArrowDown","faPencilAlt","faTrash","newComponentProps","components","CardDefaultParameterInputs","getInputCardBodyComponent","InputCardBodyComponent","Checkbox","MultipleChoice","enumArray","containsUnparsableString","some","containsString","isNumber","setIsNumber","enumNames","newNum","newEnumNames","defaultInputs","dateTime","date","time","dropdown","sectionContainer","borderBottom","borderTop","_uischema$uiColumn","_uischema$uiOptions","_mods$components4","elementNum","defaultCollapseStates","keyName","setKeyName","hideAddButton","cardSectionObjectName","readOnly","cardSectionDisplayName","cardSectionDescription","Alert","message","DragDropContext","Droppable","droppableId","providedDroppable","ref","innerRef","droppableProps","Draggable","draggableId","providedDraggable","draggableProps","dragHandleProps","arrows","PlaceholderInput","formatDictionary","email","hostname","uri","regex","formatTypeDictionary","url","autoDictionary","username","password","country","CardShortAnswerParameterInputs","minLength","maxLength","pattern","ShortAnswerField","Password","shortAnswerInput","shortAnswer","CardLongAnswerParameterInputs","LongAnswer","longAnswerInput","longAnswer","CardNumberParameterInputs","multipleOf","minimum","exclusiveMinimum","newMin","maximum","exclusiveMaximum","newMax","NumberField","numberInputs","integer","number","CardArrayParameterInputs","minItems","maxItems","InnerCard","defaultFormInputs","customFormInputs","items","item","newArr","getInnerCardComponent","shortAnswerInputs","longAnswerInputs","array","ArrayInputs","CardReferenceParameterInputs","RefChoice","currentValueLabel","referenceInputs","DEFAULT_FORM_INPUTS","arrayInputs","formBuilder","arrowsStyle","formHead","formBody","maxHeight","overflowY","formFooter","FormBuilder","_mods$labels","onMount","isFirstRender","setIsFirstRender","showFormHead","formNameLabel","formDescriptionLabel","CardGallery","definitionSchema","definitionUiSchema","componentArr","newDefinitions","newDefinitionUis","oldUi","newUi","definedUi","definedUiSchemaKey","preDefinedGallery","PredefinedGallery","useMemo","log","references","findRefs","schemaObject","innerObj","referenceSet","newDefinitionsUi"],"mappings":"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"}
{"version":3,"file":"index.modern.mjs","sources":["../src/formBuilder/checkbox/FBCheckbox.tsx","../src/formBuilder/FontAwesomeIcon.tsx","../src/formBuilder/Collapse/Collapse.tsx","../src/formBuilder/radio/FBRadioButton.tsx","../src/formBuilder/radio/FBRadioGroup.tsx","../src/formBuilder/Tooltip.tsx","../src/formBuilder/utils.tsx","../src/formBuilder/dependencies/DependencyWarning.tsx","../src/formBuilder/dependencies/CardSelector.tsx","../src/formBuilder/CardEnumOptions.tsx","../src/formBuilder/dependencies/ValueSelector.tsx","../src/formBuilder/dependencies/DependencyPossibility.tsx","../src/formBuilder/dependencies/DependencyField.tsx","../src/formBuilder/CardModal.tsx","../src/formBuilder/GeneralParameterInputs.tsx","../src/formBuilder/CardGeneralParameterInputs.tsx","../src/formBuilder/Add.tsx","../src/formBuilder/Card.tsx","../src/formBuilder/defaults/defaultInputs.tsx","../src/formBuilder/Section.tsx","../src/formBuilder/styles.ts","../src/formBuilder/inputs/PlaceholderInput.tsx","../src/formBuilder/defaults/shortAnswerInputs.tsx","../src/formBuilder/defaults/longAnswerInputs.tsx","../src/formBuilder/defaults/numberInputs.tsx","../src/formBuilder/defaults/arrayInputs.tsx","../src/formBuilder/defaults/referenceInputs.tsx","../src/formBuilder/defaults/defaultFormInputs.ts","../src/formBuilder/FormBuilder.tsx","../src/formBuilder/CardGallery.tsx","../src/formBuilder/PredefinedGallery.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport classnames from 'classnames';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  checkbox: {\n    '& *': {\n      display: 'inline-block',\n    },\n    '& input': {\n      marginRight: '5px',\n    },\n  },\n});\n\ninterface FBCheckboxProps {\n  onChangeValue: (_arg0: { [key: string]: any }) => void;\n  isChecked: boolean;\n  id?: string;\n  label?: string;\n  use?: string;\n  value?: string;\n  disabled?: boolean;\n  dataTest?: string;\n  labelClassName?: string;\n}\n\nconst FBCheckbox: FC<FBCheckboxProps> = ({\n  onChangeValue,\n  value = '',\n  isChecked = false,\n  label = '',\n  use = 'action',\n  disabled = false,\n  id = '',\n  dataTest = '',\n  labelClassName = '',\n}) => {\n  const classjss = useStyles();\n  const classes = classnames('fb-checkbox', {\n    'edit-checkbox': !disabled && use === 'edit',\n    'action-checkbox': !disabled && use === 'action',\n    'disabled-checked-checkbox': disabled && isChecked,\n    'disabled-unchecked-checkbox': disabled && !isChecked,\n  });\n  const potentialCheckboxId = id !== '' ? id : label;\n  const checkboxId =\n    potentialCheckboxId !== '' ? potentialCheckboxId : undefined;\n  return (\n    <div data-test='checkbox' className={`${classes} ${classjss.checkbox}`}>\n      <input\n        type='checkbox'\n        id={checkboxId}\n        data-test={dataTest || undefined}\n        onChange={(event) => {\n          if (!disabled) {\n            onChangeValue(event);\n          }\n        }}\n        value={value}\n        disabled={disabled}\n        checked={isChecked}\n      />\n      <div className='checkbox-overlay'>\n        {label && (\n          <label htmlFor={checkboxId} className={labelClassName || undefined}>\n            {label}\n          </label>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FBCheckbox;\n","import React, { FC } from 'react';\nimport classnames from 'classnames';\nimport {\n  FontAwesomeIcon as FortAwesomeFontAwesomeIcon,\n  FontAwesomeIconProps,\n} from '@fortawesome/react-fontawesome';\n\nconst FontAwesomeIcon: FC<FontAwesomeIconProps> = ({\n  className,\n  ...otherProps\n}) => {\n  const props = Object.assign(\n    { className: classnames([className, 'fa']) },\n    otherProps,\n  );\n  return <FortAwesomeFontAwesomeIcon {...props} />;\n};\n\nexport default FontAwesomeIcon;\n","import React, { FC, ReactNode, MouseEvent } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { Collapse as RSCollapse } from 'reactstrap';\nimport classnames from 'classnames';\nimport { faCaretDown, faCaretRight } from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\n\nconst useStyles = createUseStyles({\n  collapseElement: {\n    '& .disabled': { '.toggle-collapse': { cursor: 'default' } },\n    '& h4': { marginTop: '7px', padding: '13px 10px 10px 10px' },\n    '& .toggle-collapse': {\n      fontSize: '2.3rem',\n      cursor: 'pointer',\n      marginLeft: '33px',\n      '& .fa-caret-right': {\n        marginRight: '9px',\n      },\n    },\n  },\n});\n\ninterface CollapseProps {\n  // Determines if the Collapse component is open\n  isOpen: boolean;\n  // Toggles the isOpen boolean between true and false\n  toggleCollapse: (event: MouseEvent<SVGSVGElement>) => void;\n  // The title to display in the collapse header\n  title: ReactNode;\n  // Anything to be rendered within the collapse\n  children: Array<ReactNode>;\n  // If true will gray out and disable */\n  disableToggle?: boolean;\n  className?: string;\n}\n\nconst Collapse: FC<CollapseProps> = (props) => {\n  const classes = classnames(\n    `collapse-element ${props.className || ''} ${useStyles().collapseElement}`,\n    {\n      disabled: props.disableToggle,\n    },\n  );\n\n  return (\n    <div className={classes}>\n      <div className='d-flex'>\n        <span className='toggle-collapse'>\n          <FontAwesomeIcon\n            onClick={(event) => {\n              if (!props.disableToggle) {\n                props.toggleCollapse(event);\n              }\n            }}\n            icon={props.isOpen ? faCaretDown : faCaretRight}\n          />\n        </span>\n        <h4>{props.title}</h4>\n      </div>\n      <RSCollapse isOpen={props.isOpen}>\n        <div>{props.children}</div>\n      </RSCollapse>\n    </div>\n  );\n};\n\nexport default Collapse;\n","import React, { useState, ReactElement } from 'react';\nimport classnames from 'classnames';\n\ntype Props = {\n  label: ReactElement | string;\n  value?: any;\n  name?: string;\n  checked?: boolean;\n  required?: boolean;\n  disabled?: boolean;\n  autoFocus?: boolean;\n  onChange: (selection: string) => void;\n};\n\nexport default function FBRadioButton(props: Props): ReactElement {\n  const {\n    label,\n    value,\n    checked,\n    name,\n    onChange,\n    required,\n    disabled,\n    autoFocus,\n  } = props;\n  const [id] = useState(`radio-${Math.floor(Math.random() * 1000000)}`);\n  const classes = classnames('fb-radio-button', { disabled });\n  return (\n    <div className={classes} key={value}>\n      <input\n        id={id}\n        type='radio'\n        name={name}\n        value={value}\n        checked={checked}\n        required={required}\n        disabled={disabled}\n        autoFocus={autoFocus}\n        onChange={() => onChange(value)}\n      />\n      <label htmlFor={id}>{label}</label>\n    </div>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport classnames from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport FBRadioButton from './FBRadioButton';\n\nconst useStyles = createUseStyles({\n  radio: {\n    '& .fb-radio-button': {\n      display: 'block',\n      '& input[type=\"radio\"]': {\n        marginRight: '5px',\n        marginBottom: 0,\n        height: '1em',\n        verticalAlign: 'middle',\n      },\n      '& input[type=\"radio\"] + label': {\n        marginTop: 0,\n        marginBottom: 0,\n        verticalAlign: 'middle',\n      },\n    },\n  },\n});\n\ntype FBRadioGroupPropsType = {\n  options: Array<{ label: string | ReactElement; value: string | number }>;\n  onChange: (selection: string) => void;\n  defaultValue?: any;\n  horizontal?: boolean;\n  id?: string | number;\n  required?: boolean;\n  disabled?: boolean;\n  autoFocus?: boolean;\n  className?: string;\n};\n\nexport default function FBRadioGroup(\n  props: FBRadioGroupPropsType,\n): ReactElement {\n  const {\n    options,\n    defaultValue,\n    onChange,\n    horizontal,\n    id,\n    autoFocus,\n    disabled,\n  } = props;\n  const name = Math.random().toString();\n  const classjss = useStyles();\n  const classes = classnames('fb-radio-group', {\n    horizontal,\n  });\n\n  // Conditionallly add 'id' prop in case id was not passed in from parent.\n  let elementId = {};\n  if (id) {\n    elementId = { id };\n  }\n\n  return (\n    <div {...elementId} className={`${classes} ${classjss.radio}`}>\n      {options.map((option, index) => (\n        <FBRadioButton\n          value={option.value}\n          label={option.label}\n          {...elementId}\n          name={name}\n          key={option.value}\n          checked={option.value === defaultValue}\n          autoFocus={autoFocus && index === 1}\n          onChange={onChange}\n          disabled={disabled}\n        />\n      ))}\n    </div>\n  );\n}\n","/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\nimport React, { ReactElement } from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport {\n  faAsterisk,\n  faQuestionCircle,\n} from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from './FontAwesomeIcon';\n\nconst typeMap = {\n  alert: faAsterisk,\n  help: faQuestionCircle,\n};\n\nconst useStyles = createUseStyles({\n  toolTip: {\n    color: 'white',\n    'background-color': 'black',\n  },\n});\n\nexport default function Example({\n  text,\n  type,\n  id,\n}: {\n  text: string;\n  type: 'alert' | 'help';\n  id: string;\n}): ReactElement {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <span style={{ textDecoration: 'underline', color: 'blue' }} id={id}>\n        <FontAwesomeIcon icon={typeMap[type]} />\n      </span>\n      <UncontrolledTooltip\n        autohide={false}\n        className={classes.toolTip}\n        placement='top'\n        target={id}\n      >\n        {text}\n      </UncontrolledTooltip>\n    </React.Fragment>\n  );\n}\n","import React, { ReactNode } from 'react';\nimport {\n  SectionType,\n  CardType,\n  CardProps,\n  ElementProps,\n  FormInput,\n  Mods,\n  CardComponentType,\n  DataOptions,\n  DataType,\n  FormElement,\n  CardComponentPropsType,\n  AddFormObjectParametersType,\n  DefinitionData,\n  InputSelectDataType,\n} from './types';\n\n// parse in either YAML or JSON\nexport function parse(text: string): any {\n  if (!text) return {};\n  return JSON.parse(text);\n}\n\n// stringify in either YAML or JSON\nexport function stringify(obj: any): string {\n  if (!obj) return '{}';\n  return JSON.stringify(obj);\n}\n\nexport function defaultDataProps(\n  category: string,\n  allFormInputs: { [key: string]: FormInput },\n): InputSelectDataType {\n  return allFormInputs[category]\n    .defaultDataSchema as unknown as InputSelectDataType;\n}\n\nexport function defaultUiProps(\n  category: string,\n  allFormInputs: { [key: string]: FormInput },\n): InputSelectDataType {\n  return allFormInputs[category]\n    .defaultUiSchema as unknown as InputSelectDataType;\n}\nexport function categoryType(\n  category: string,\n  allFormInputs: { [key: string]: FormInput },\n): DataType {\n  return allFormInputs[category].type;\n}\nexport function getCardBody(\n  category: string,\n  allFormInputs: { [key: string]: FormInput },\n) {\n  return (\n    (allFormInputs[category] && allFormInputs[category].cardBody) ||\n    (() => null)\n  );\n}\n\nexport function categoryToNameMap(allFormInputs: {\n  [key: string]: FormInput;\n}): { [key: string]: string } {\n  const categoryNameMap: { [key: string]: any } = {};\n  Object.keys(allFormInputs).forEach((inputName) => {\n    categoryNameMap[inputName] = allFormInputs[inputName].displayName;\n  });\n  return categoryNameMap;\n}\n\nfunction updateElementNames(elementArray: Array<ElementProps>) {\n  const elementNames = elementArray.map((elem) => elem.name);\n  return elementArray.map((elem) => {\n    const newElem = elem;\n    newElem.neighborNames = elementNames;\n    return newElem;\n  });\n}\n\nexport function generateCategoryHash(allFormInputs: {\n  [key: string]: FormInput;\n}) {\n  const categoryHash: { [key: string]: any } = {};\n  Object.keys(allFormInputs).forEach((categoryName) => {\n    const formInput = allFormInputs[categoryName];\n    formInput.matchIf.forEach((match) => {\n      match.types.forEach((type) => {\n        const hash = `type:${type === 'null' ? '' : type};widget:${\n          match.widget || ''\n        };field:${match.field || ''};format:${match.format || ''};$ref:${\n          match.$ref ? 'true' : 'false'\n        };enum:${match.enum ? 'true' : 'false'}`;\n        if (categoryHash[hash]) {\n          throw new Error(`Duplicate hash: ${hash}`);\n        }\n        categoryHash[hash] = categoryName;\n      });\n    });\n  });\n  return categoryHash;\n}\n\n// determines a card's category based on it's properties\n// mostly useful for reading a schema for the first time\nexport function getCardCategory(\n  cardProps: CardProps,\n  categoryHash: { [key: string]: string },\n): string {\n  const currentHash = `type:${cardProps.dataOptions.type || ''};widget:${\n    cardProps.uiOptions['ui:widget'] || ''\n  };field:${cardProps.uiOptions['ui:field'] || ''};format:${\n    cardProps.dataOptions.format || ''\n  };$ref:${cardProps.$ref !== undefined ? 'true' : 'false'};enum:${\n    cardProps.dataOptions.enum ? 'true' : 'false'\n  }`;\n  const category = categoryHash[currentHash];\n  if (!category) {\n    if (cardProps.$ref) return 'ref';\n    // eslint-disable-next-line no-console\n    console.error(`No match for card': ${currentHash} among set`);\n    return 'shortAnswer';\n  }\n  return category;\n}\n\n// check for unsupported feature in schema and uischema\nconst supportedPropertyParameters = new Set([\n  'title',\n  'description',\n  'enum',\n  'minLength',\n  'maxLength',\n  'multipleOf',\n  'minimum',\n  'maximum',\n  'format',\n  'exclusiveMinimum',\n  'exclusiveMaximum',\n  'type',\n  'default',\n  'pattern',\n  'required',\n  'properties',\n  'items',\n  'definitions',\n  '$ref',\n  'minItems',\n  'maxItems',\n  'enumNames',\n  'dependencies',\n  '$id',\n  '$schema',\n  'meta',\n  'additionalProperties',\n]);\n\nconst supportedUiParameters = new Set([\n  'ui:order',\n  'ui:widget',\n  'ui:autofocus',\n  'ui:autocomplete',\n  'ui:options',\n  'ui:field',\n  'ui:placeholder',\n  'ui:column',\n  'items',\n  'definitions',\n]);\n\n// recursively called function to check an object for unsupported features\nfunction checkObjectForUnsupportedFeatures(\n  schema: { [key: string]: any },\n  uischema: { [key: string]: any },\n  supportedWidgets: Set<string>,\n  supportedFields: Set<string>,\n  supportedOptions: Set<string>,\n) {\n  // add each unsupported feature to this array\n  const unsupportedFeatures: Array<string> = [];\n\n  // check for unsupported whole object features\n  if (schema && typeof schema === 'object') {\n    Object.keys(schema).forEach((property) => {\n      if (\n        !supportedPropertyParameters.has(property) &&\n        property !== 'properties'\n      ) {\n        unsupportedFeatures.push(`Unrecognized Object Property: ${property}`);\n      }\n    });\n  }\n\n  if (uischema && typeof uischema === 'object') {\n    Object.keys(uischema).forEach((uiProperty) => {\n      let propDefined = false;\n      // search for the property in the schema properties and dependencies\n      if (\n        schema.properties &&\n        Object.keys(schema.properties).includes(uiProperty)\n      ) {\n        propDefined = true;\n      }\n      if (schema.dependencies) {\n        Object.keys(schema.dependencies).forEach((dependencyKey) => {\n          Object.keys(schema.dependencies[dependencyKey]).forEach(\n            (parameter) => {\n              if (parameter === 'oneOf') {\n                schema.dependencies[dependencyKey].oneOf.forEach(\n                  (grouping: { [key: string]: any }) => {\n                    if (grouping.properties) {\n                      if (\n                        Object.keys(grouping.properties).includes(uiProperty)\n                      ) {\n                        propDefined = true;\n                      }\n                    }\n                  },\n                );\n              } else if (parameter === 'properties') {\n                if (\n                  Object.keys(\n                    schema.dependencies[dependencyKey].properties,\n                  ).includes(uiProperty)\n                ) {\n                  propDefined = true;\n                }\n              }\n            },\n          );\n        });\n      }\n\n      if (!propDefined && !supportedUiParameters.has(uiProperty)) {\n        unsupportedFeatures.push(\n          `Unrecognized UI schema property: ${uiProperty}`,\n        );\n      }\n    });\n  }\n\n  // check for unsupported property parameters\n  if (schema.properties) {\n    Object.entries(schema.properties).forEach(\n      ([parameter, element]: [string, any]) => {\n        if (\n          element &&\n          typeof element === 'object' &&\n          element.type &&\n          element.type !== 'object'\n        ) {\n          // make sure that the type is valid\n          if (\n            !['array', 'string', 'integer', 'number', 'boolean'].includes(\n              element.type,\n            )\n          ) {\n            unsupportedFeatures.push(\n              `Unrecognized type: ${element.type} in ${parameter}`,\n            );\n          }\n          // check the properties of each property if it is a basic object\n          Object.keys(element).forEach((key) => {\n            if (!supportedPropertyParameters.has(key)) {\n              unsupportedFeatures.push(\n                `Property Parameter: ${key} in ${parameter}`,\n              );\n            }\n          });\n        } else {\n          // check the properties of each property if it is a basic object\n          Object.keys(element).forEach((key) => {\n            if (!supportedPropertyParameters.has(key)) {\n              unsupportedFeatures.push(\n                `Property Parameter: ${key} in ${parameter}`,\n              );\n            }\n          });\n        }\n\n        // check for unsupported UI components\n        if (\n          uischema &&\n          uischema[parameter] &&\n          element &&\n          (!element.type || element.type !== 'object')\n        ) {\n          // check for unsupported ui properties\n          Object.keys(uischema[parameter]).forEach((uiProp) => {\n            if (!supportedUiParameters.has(uiProp)) {\n              unsupportedFeatures.push(\n                `UI Property: ${uiProp} for ${parameter}`,\n              );\n            }\n\n            // check for unsupported ui widgets\n            if (\n              uiProp === 'ui:widget' &&\n              !supportedWidgets.has(uischema[parameter][uiProp])\n            ) {\n              unsupportedFeatures.push(\n                `UI Widget: ${uischema[parameter][uiProp]} for ${parameter}`,\n              );\n            }\n\n            // check for unsupported ui fields\n            if (\n              uiProp === 'ui:field' &&\n              !supportedFields.has(uischema[parameter][uiProp])\n            ) {\n              unsupportedFeatures.push(\n                `UI Field: ${uischema[parameter][uiProp]} for ${parameter}`,\n              );\n            }\n\n            // check unsupported ui option\n            if (uiProp === 'ui:options') {\n              Object.keys(uischema[parameter]['ui:options']).forEach(\n                (uiOption) => {\n                  if (!supportedOptions.has(uiOption)) {\n                    unsupportedFeatures.push(\n                      `UI Property: ui:options.${uiOption} for ${parameter}`,\n                    );\n                  }\n                },\n              );\n            }\n          });\n        }\n      },\n    );\n  }\n\n  return unsupportedFeatures;\n}\n\n// parent function that checks for unsupported features in an entire document\nexport function checkForUnsupportedFeatures(\n  schema: { [key: string]: any },\n  uischema: { [key: string]: any },\n  allFormInputs: { [key: string]: FormInput },\n): string[] {\n  // add each unsupported feature to this array\n  const unsupportedFeatures = [];\n\n  const widgets: string[] = [];\n  const fields: string[] = [];\n  const options: string[] = [];\n  Object.keys(allFormInputs).forEach((inputType) => {\n    allFormInputs[inputType].matchIf.forEach((match) => {\n      if (match.widget && !widgets.includes(match.widget)) {\n        widgets.push(match.widget);\n      }\n      if (match.field && !fields.includes(match.field)) {\n        fields.push(match.field);\n      }\n    });\n    if (\n      allFormInputs[inputType].possibleOptions &&\n      Array.isArray(allFormInputs[inputType].possibleOptions)\n    ) {\n      options.push(...allFormInputs[inputType].possibleOptions!);\n    }\n  });\n  const supportedWidgets = new Set(widgets);\n  const supportedFields = new Set(fields);\n  const supportedOptions = new Set(options);\n\n  // check for unsupported whole form features\n  if (schema && typeof schema === 'object' && schema.type === 'object') {\n    unsupportedFeatures.push(\n      ...checkObjectForUnsupportedFeatures(\n        schema,\n        uischema,\n        supportedWidgets,\n        supportedFields,\n        supportedOptions,\n      ),\n    );\n  } else {\n    unsupportedFeatures.push('jsonSchema form is not of type object');\n  }\n\n  return unsupportedFeatures;\n}\n\n// make an element out of the corresponding properties and UI properties\nfunction generateDependencyElement(\n  name: string,\n  dataProps: any,\n  uiProperties: any,\n  requiredNames: any,\n  categoryHash: { [key: string]: string },\n  definitionData?: DefinitionData,\n  definitionUi?: { [key: string]: any },\n  useDefinitionDetails = true, // determines whether to use an element's definition details or not.\n) {\n  let uiProps = {\n    ...uiProperties,\n  };\n  const newElement: FormElement = {};\n  let elementDetails =\n    dataProps && typeof dataProps === 'object' ? dataProps : {};\n\n  // populate newElement with reference if applicable\n  if (elementDetails.$ref !== undefined && definitionData) {\n    const pathArr =\n      typeof elementDetails.$ref === 'string'\n        ? elementDetails.$ref.split('/')\n        : [];\n    if (\n      pathArr[0] === '#' &&\n      pathArr[1] === 'definitions' &&\n      definitionData[pathArr[2]] &&\n      useDefinitionDetails === true\n    ) {\n      elementDetails = {\n        ...elementDetails,\n        ...definitionData[pathArr[2]],\n      };\n    }\n\n    const definedUiProps = (definitionUi || {})[pathArr[2]];\n    uiProps = {\n      ...(definedUiProps || {}),\n      ...uiProps,\n    };\n  }\n\n  newElement.name = name;\n  newElement.required = requiredNames.includes(name);\n  newElement.$ref =\n    typeof elementDetails.$ref === 'string' ? elementDetails.$ref : undefined;\n\n  if (elementDetails.type && elementDetails.type === 'object') {\n    // create a section\n    newElement.schema = elementDetails;\n    newElement.uischema = uiProps || {};\n    newElement.propType = 'section';\n  } else {\n    // create a card\n    newElement.dataOptions = elementDetails;\n    newElement.uiOptions = uiProps || {};\n\n    // ensure that uiOptions does not have duplicate keys with dataOptions\n    const reservedKeys = Object.keys(newElement.dataOptions!);\n    Object.keys(newElement.uiOptions!).forEach((uiKey) => {\n      if (reservedKeys.includes(uiKey)) {\n        newElement.uiOptions![`ui:*${uiKey}`] = newElement.uiOptions![uiKey];\n      }\n    });\n\n    newElement.dataOptions!.category = getCardCategory(\n      newElement as CardProps,\n      categoryHash,\n    );\n    newElement.propType = 'card';\n  }\n  return newElement;\n}\n\n// generate an array of element objects from a schema and uischema\nexport function generateElementPropsFromSchemas(parameters: {\n  schema: { [key: string]: any };\n  uischema: { [key: string]: any };\n  definitionData?: DefinitionData;\n  definitionUi?: { [key: string]: any };\n  categoryHash: { [key: string]: string };\n}): ElementProps[] {\n  const { schema, uischema, definitionData, definitionUi, categoryHash } =\n    parameters;\n\n  if (!schema.properties) return [];\n\n  const elementDict: { [key: string]: any } = {};\n  const requiredNames = schema.required ? schema.required : [];\n\n  // read regular elements from properties\n  Object.entries(schema.properties).forEach(([parameter, element]) => {\n    const newElement: FormElement = {};\n    let elementDetails: FormElement =\n      element && typeof element === 'object' ? element : {};\n\n    // populate newElement with reference if applicable\n    if (elementDetails?.$ref !== undefined && definitionData) {\n      if (\n        elementDetails.$ref &&\n        !elementDetails.$ref.startsWith('#/definitions')\n      ) {\n        throw new Error(\n          `Invalid definition, not at '#/definitions': ${elementDetails.$ref}`,\n        );\n      }\n      const pathArr =\n        elementDetails.$ref !== undefined ? elementDetails.$ref.split('/') : [];\n      if (\n        pathArr[0] === '#' &&\n        pathArr[1] === 'definitions' &&\n        definitionData[pathArr[2]]\n      ) {\n        elementDetails = {\n          ...definitionData[pathArr[2]],\n          ...elementDetails,\n        };\n      }\n\n      const definedUiProps = (definitionUi || {})[pathArr[2]];\n      uischema[parameter] = {\n        ...(definedUiProps || {}),\n        ...uischema[parameter],\n      };\n    }\n    newElement.name = parameter;\n    newElement.required = requiredNames.includes(parameter);\n    newElement.$ref = elementDetails.$ref;\n    newElement.dataOptions = elementDetails;\n\n    if (elementDetails.type && elementDetails.type === 'object') {\n      // create a section\n      newElement.schema = elementDetails;\n      newElement.uischema = uischema[parameter] || {};\n      newElement.propType = 'section';\n    } else {\n      // create a card\n      newElement.uiOptions = uischema[parameter] || {};\n\n      // ensure that uiOptions does not have duplicate keys with dataOptions\n      const reservedKeys = Object.keys(newElement.dataOptions);\n      Object.keys(newElement.uiOptions!).forEach((uiKey) => {\n        if (reservedKeys.includes(uiKey)) {\n          newElement.uiOptions![`ui:*${uiKey}`] = newElement.uiOptions![uiKey];\n        }\n      });\n\n      newElement.dataOptions.category = getCardCategory(\n        newElement as CardProps,\n        categoryHash,\n      );\n      newElement.propType = 'card';\n    }\n    elementDict[newElement.name!] = newElement;\n  });\n  // read dependent elements from dependencies\n  if (schema.dependencies) {\n    const useDefinitionDetails = false;\n    Object.keys(schema.dependencies).forEach((parent) => {\n      const group = schema.dependencies[parent];\n      if (group.oneOf) {\n        let possibilityIndex = 0;\n        group.oneOf.forEach((possibility: { [key: string]: any }) => {\n          if (!(elementDict[parent] || {}).dependents) {\n            elementDict[parent] = elementDict[parent] || {};\n            elementDict[parent].dependents = [];\n          }\n          elementDict[parent].dependents.push({\n            children: [],\n            value: possibility.properties[parent],\n          });\n          const requiredValues = possibility.required || [];\n          Object.entries(possibility.properties).forEach(\n            ([parameter, element]) => {\n              // create a new element if not present in main properties\n              if (\n                !elementDict[parameter] ||\n                (parameter !== parent &&\n                  Object.keys(elementDict[parameter]).length === 1 &&\n                  elementDict[parameter].dependents)\n              ) {\n                const newElement = generateDependencyElement(\n                  parameter,\n                  element,\n                  uischema[parameter],\n                  requiredNames,\n                  categoryHash,\n                  definitionData,\n                  definitionUi,\n                  useDefinitionDetails,\n                );\n                if (\n                  elementDict[parameter] &&\n                  elementDict[parameter].dependents\n                ) {\n                  newElement.dependents = elementDict[parameter].dependents;\n                }\n                newElement.required = requiredValues.includes(newElement.name);\n                elementDict[newElement.name!] = newElement;\n              }\n              if (parameter !== parent) {\n                const newElement = elementDict[parameter];\n                newElement.dependent = true;\n                newElement.parent = parent;\n                elementDict[parent].dependents[possibilityIndex].children.push(\n                  parameter,\n                );\n              }\n            },\n          );\n          possibilityIndex += 1;\n        });\n      } else if (group.properties) {\n        const requiredValues = group.required || [];\n        Object.entries(group.properties).forEach(([parameter, element]) => {\n          const newElement = generateDependencyElement(\n            parameter,\n            element,\n            uischema[parameter],\n            requiredNames,\n            categoryHash,\n            definitionData,\n            definitionUi,\n            useDefinitionDetails,\n          );\n          newElement.required = requiredValues.includes(newElement.name);\n          newElement.dependent = true;\n          newElement.parent = parent;\n          elementDict[newElement.name!] = newElement;\n          if (elementDict[parent]) {\n            if (elementDict[parent].dependents) {\n              elementDict[parent].dependents[0].children.push(parameter);\n            } else {\n              elementDict[parent].dependents = [{ children: [parameter] }];\n            }\n          } else {\n            elementDict[parent] = {};\n            elementDict[parent].dependents = [{ children: [parameter] }];\n          }\n        });\n      } else {\n        // eslint-disable-next-line no-console\n        console.error('unsupported dependency type encountered');\n      }\n    });\n  }\n\n  // now reorder in accordance with ui:order if defined\n  const cardPropList: FormElement[] = [];\n  if (uischema['ui:order']) {\n    // in case there are any options not in ui:order\n    const remainder: FormElement[] = [];\n    Object.keys(elementDict).forEach((name) => {\n      if (!uischema['ui:order'].includes(name))\n        remainder.push(elementDict[name]);\n    });\n\n    // map ui order elements into the right order\n    uischema['ui:order'].forEach((name: string) => {\n      // if contains the wildcard *, insert remainder cards there\n      if (name === '*') {\n        remainder.forEach((remCard) => {\n          cardPropList.push(remCard);\n        });\n      } else if (elementDict[name]) {\n        cardPropList.push(elementDict[name]);\n      }\n    });\n  } else {\n    Object.keys(elementDict).forEach((name) => {\n      cardPropList.push(elementDict[name]);\n    });\n  }\n\n  updateElementNames(cardPropList as ElementProps[]);\n\n  return cardPropList as ElementProps[];\n}\n\n// determine the number of element objects from schema and uischema\nexport function countElementsFromSchema(schemaData: any): number {\n  if (!schemaData.properties) return 0;\n  const elementDict: { [key: string]: any } = {};\n  let elementCount = 0;\n\n  // read regular elements from properties\n  Object.entries(schemaData.properties).forEach(([parameter]) => {\n    elementDict[parameter] = {};\n    elementCount += 1;\n  });\n  // read dependent elements from dependencies\n  if (schemaData.dependencies) {\n    Object.keys(schemaData.dependencies).forEach((parent) => {\n      const group = schemaData.dependencies[parent];\n      if (group.oneOf) {\n        let possibilityIndex = 0;\n        group.oneOf.forEach((possibility: { [key: string]: any }) => {\n          if (!(elementDict[parent] || {}).dependents) {\n            elementDict[parent] = elementDict[parent] || {};\n            elementDict[parent].dependents = [];\n          }\n          elementDict[parent].dependents.push({\n            children: [],\n            value: possibility.properties[parent],\n          });\n          Object.entries(possibility.properties).forEach(([parameter]) => {\n            // create a new element if not present in main properties\n            if (!Object.keys(elementDict).includes(parameter)) {\n              elementDict[parameter] = {};\n              elementCount += 1;\n            }\n            if (parameter !== parent) {\n              const newElement = elementDict[parameter];\n              newElement.dependent = true;\n              newElement.parent = parent;\n              elementDict[parent].dependents[possibilityIndex].children.push(\n                parameter,\n              );\n            }\n          });\n          possibilityIndex += 1;\n        });\n      } else if (group.properties) {\n        Object.entries(group.properties).forEach(([parameter]) => {\n          elementDict[parameter] = elementDict[parameter] || {};\n          elementCount += 1;\n          if (elementDict[parent]) {\n            if (elementDict[parent].dependents) {\n              elementDict[parent].dependents[0].children.push(parameter);\n            } else {\n              elementDict[parent].dependents = [{ children: [parameter] }];\n            }\n          } else {\n            elementDict[parent] = {};\n            elementDict[parent].dependents = [{ children: [parameter] }];\n          }\n        });\n      } else {\n        // eslint-disable-next-line no-console\n        console.error('unsupported dependency type encountered');\n      }\n    });\n  }\n\n  return elementCount;\n}\n\n// convert an element into a schema equivalent\nfunction generateSchemaElementFromElement(element: ElementProps) {\n  if (element.$ref !== undefined) {\n    const title =\n      element.schema !== undefined && element.schema.title !== undefined\n        ? element.schema.title\n        : element.dataOptions.title;\n    const description =\n      element.schema !== undefined && element.schema.description !== undefined\n        ? element.schema.description\n        : element.dataOptions.description;\n\n    let returnElement: FormElement = {\n      $ref: element.$ref,\n      title: title,\n      description: description,\n    };\n\n    const length = element?.schema?.required?.length;\n    if (length !== undefined && length > 0) {\n      returnElement = { ...returnElement, required: element.schema.required };\n    }\n    return returnElement;\n  } else if (element.propType === 'card') {\n    if (element.dataOptions.category === 'section') {\n      return {\n        type: 'object',\n      };\n    } else {\n      const prop: { [key: string]: any } = {};\n\n      Object.keys(element.dataOptions).forEach((key) => {\n        if (\n          ![\n            'category',\n            'hideKey',\n            'path',\n            'definitionData',\n            'definitionUi',\n            'allFormInputs',\n          ].includes(key) &&\n          element.dataOptions[key] !== ''\n        )\n          prop[key] = element.dataOptions[key];\n      });\n      return prop;\n    }\n  } else if (element.propType === 'section') {\n    return element.schema;\n  } else {\n    throw new Error('Element that is neither card, section, nor ref');\n  }\n}\n\n// generate a new schema from a complete array of card objects\nexport function generateSchemaFromElementProps(elementArr: ElementProps[]): {\n  [key: string]: any;\n  definitions?: { [key: string]: any };\n} {\n  if (!elementArr) return {};\n  const newSchema: { [key: string]: any } = {};\n\n  const props: { [key: string]: any } = {};\n  const dependencies: { [key: string]: any } = {};\n  const elementDict: { [key: string]: ElementProps } = {};\n  const dependentElements = new Set();\n  for (let index = 0; index < elementArr.length; index += 1) {\n    const element = elementArr[index];\n    elementDict[element.name] = { ...element };\n    if (element.dependents)\n      element.dependents.forEach((possibility) => {\n        possibility.children.forEach((dependentElement) => {\n          dependentElements.add(dependentElement);\n        });\n      });\n  }\n  Object.keys(elementDict).forEach((elementName) => {\n    const element = elementDict[elementName];\n    if (element.dependents && element.dependents[0]) {\n      if (element.dependents[0].value) {\n        // handle value based case\n        dependencies[elementName] = {\n          oneOf: element.dependents.map((possibility: FormElement) => {\n            const childrenComponents: { [key: string]: any } = {};\n            const requiredValues: string[] = [];\n            possibility?.children?.forEach((child) => {\n              if (elementDict[child]) {\n                childrenComponents[child] = generateSchemaElementFromElement(\n                  elementDict[child],\n                );\n                if (elementDict[child].required) requiredValues.push(child);\n              }\n            });\n            return {\n              properties: {\n                [elementName]: possibility.value,\n                ...childrenComponents,\n              },\n              required: requiredValues,\n            };\n          }),\n        };\n      } else {\n        // handle definition based case\n        const childrenComponents: { [key: string]: any } = {};\n        const requiredValues: string[] = [];\n        element.dependents[0].children.forEach((child) => {\n          childrenComponents[child] = generateSchemaElementFromElement(\n            elementDict[child],\n          );\n          if (elementDict[child].required) requiredValues.push(child);\n        });\n        dependencies[elementName] = {\n          properties: childrenComponents,\n          required: requiredValues,\n        };\n      }\n    }\n    if (!dependentElements.has(elementName)) {\n      props[element.name] = generateSchemaElementFromElement(element);\n    }\n  });\n\n  newSchema.properties = props;\n  newSchema.dependencies = dependencies;\n  newSchema.required = elementArr\n    .filter(({ required, dependent }) => required && !dependent)\n    .map(({ name }) => name);\n\n  return newSchema;\n}\n\nexport function generateUiSchemaFromElementProps(\n  elementArr: Array<ElementProps>,\n  definitionUi: any,\n): { [key: string]: any; definitions?: { [key: string]: any } } {\n  if (!elementArr) return {};\n\n  const uiSchema: { [key: string]: any } = {};\n  const uiOrder: { [key: string]: any } = [];\n  const definitions = definitionUi;\n\n  elementArr.forEach((element) => {\n    uiOrder.push(element.name);\n    if (element.$ref !== undefined) {\n      // look for the reference\n      const pathArr =\n        typeof element.$ref === 'string' ? element.$ref.split('/') : [];\n      if (definitions && definitions[pathArr[2]]) {\n        uiSchema[element.name] = definitions[pathArr[2]];\n      }\n    }\n    if (element.propType === 'card' && element.uiOptions) {\n      Object.keys(element.uiOptions).forEach((uiOption) => {\n        if (!uiSchema[element.name]) uiSchema[element.name] = {};\n        if (uiOption.startsWith('ui:*')) {\n          uiSchema[element.name][uiOption.substring(4)] =\n            element.uiOptions[uiOption];\n        } else {\n          uiSchema[element.name][uiOption] = element.uiOptions[uiOption];\n        }\n      });\n    } else if (\n      element.propType === 'section' &&\n      Object.keys(element.uischema).length > 0\n    ) {\n      uiSchema[element.name] = element.uischema;\n    }\n  });\n\n  uiSchema['ui:order'] = uiOrder;\n\n  return uiSchema;\n}\n\nexport function getCardParameterInputComponentForType(\n  category: string,\n  allFormInputs: { [key: string]: FormInput },\n): CardComponentType {\n  return (\n    (allFormInputs[category] && allFormInputs[category].modalBody) ||\n    (() => null)\n  );\n}\n\n// takes in an array of Card Objects and updates both schemas\nexport function updateSchemas(\n  elementArr: ElementProps[],\n  parameters: {\n    schema: { [key: string]: any; definitions?: { [key: string]: any } };\n    uischema: { [key: string]: any; definitions?: { [key: string]: any } };\n    onChange: (\n      schema: { [key: string]: any },\n      uischema: { [key: string]: any },\n    ) => any;\n    definitionData?: { [key: string]: any };\n    definitionUi?: { [key: string]: any };\n  },\n) {\n  const { schema, uischema, onChange, definitionUi } = parameters;\n  const newSchema = Object.assign(\n    { ...schema },\n    generateSchemaFromElementProps(elementArr),\n  );\n\n  const newUiSchema: {\n    [key: string]: any;\n    definitions?: { [key: string]: any };\n  } = generateUiSchemaFromElementProps(elementArr, definitionUi);\n  if (uischema.definitions) {\n    newUiSchema.definitions = uischema.definitions;\n  }\n\n  // mandate that the type is an object if not already done\n  newSchema.type = 'object';\n  onChange(newSchema, newUiSchema);\n}\n\nexport const DEFAULT_INPUT_NAME = 'New Input';\n\n// ensure that each added block has a unique name\nfunction getIdFromElementsBlock(elements: Array<ElementProps>) {\n  const names = elements.map((element) => element.name);\n  const defaultNameLength = DEFAULT_INPUT_NAME.length;\n\n  return names.length > 0\n    ? Math.max(\n        ...names.map((name) => {\n          if (name.startsWith(DEFAULT_INPUT_NAME)) {\n            const index = name.substring(defaultNameLength, name.length);\n            const value = Number.parseInt(index);\n\n            if (!isNaN(value)) {\n              return value;\n            }\n          }\n\n          return 0;\n        }),\n      ) + 1\n    : 1;\n}\n\n// given an initial schema, update with a new card appended\nexport function addCardObj(parameters: AddFormObjectParametersType) {\n  const {\n    schema,\n    uischema,\n    mods,\n    onChange,\n    definitionData,\n    definitionUi,\n    index,\n    categoryHash,\n  } = parameters;\n  const newElementObjArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  const i = getIdFromElementsBlock(newElementObjArr);\n  const dataOptions = getNewElementDefaultDataOptions(i, mods);\n\n  const newElement: ElementProps = {\n    name: `${DEFAULT_INPUT_NAME}${i}`,\n    required: false,\n    dataOptions: dataOptions,\n    uiOptions: (mods && mods.newElementDefaultUiSchema) || {},\n    propType: 'card',\n    schema: {},\n    uischema: {},\n    neighborNames: [],\n  };\n\n  if (index !== undefined && index !== null) {\n    newElementObjArr.splice(index + 1, 0, newElement);\n  } else {\n    newElementObjArr.push(newElement);\n  }\n  updateSchemas(newElementObjArr, {\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    onChange,\n  });\n}\n\n// given an initial schema, update with a new section appended\nexport function addSectionObj(parameters: AddFormObjectParametersType) {\n  const {\n    schema,\n    uischema,\n    onChange,\n    definitionData,\n    definitionUi,\n    index,\n    categoryHash,\n  } = parameters;\n  const newElementObjArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  const i = getIdFromElementsBlock(newElementObjArr);\n\n  const newElement: ElementProps = {\n    name: `${DEFAULT_INPUT_NAME}${i}`,\n    required: false,\n    dataOptions: {\n      title: `New Input ${i}`,\n      type: 'object',\n      default: '',\n    },\n    uiOptions: {},\n    propType: 'section',\n    schema: { title: `New Input ${i}`, type: 'object' },\n    uischema: {},\n    neighborNames: [],\n  };\n\n  if (index !== undefined && index !== null) {\n    newElementObjArr.splice(index + 1, 0, newElement);\n  } else {\n    newElementObjArr.push(newElement);\n  }\n  updateSchemas(newElementObjArr, {\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    onChange,\n  });\n}\n\n// generate an array of Card and Section components from a schema\nexport function generateElementComponentsFromSchemas(parameters: {\n  schemaData: { [key: string]: any };\n  uiSchemaData: { [key: string]: any };\n  onChange: (\n    schema: { [key: string]: any },\n    uischema: { [key: string]: any },\n  ) => any;\n  definitionData?: { [key: string]: any };\n  definitionUi?: { [key: string]: any };\n  hideKey?: boolean;\n  path: string;\n  cardOpenArray: Array<boolean>;\n  setCardOpenArray: (newArr: Array<boolean>) => void;\n  allFormInputs: { [key: string]: FormInput };\n  mods?: Mods;\n  categoryHash: { [key: string]: string };\n  Card: CardType;\n  Section: SectionType;\n}): ReactNode[] {\n  const {\n    schemaData,\n    uiSchemaData,\n    onChange,\n    definitionData,\n    definitionUi,\n    hideKey,\n    path,\n    cardOpenArray,\n    setCardOpenArray,\n    allFormInputs,\n    mods,\n    categoryHash,\n    Card,\n    Section,\n  } = parameters;\n\n  const schema = parse(stringify(schemaData));\n  const uischema = parse(stringify(uiSchemaData));\n\n  if (!schema.properties) return [];\n  const elementPropArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  const elementList = elementPropArr.map((elementProp, index) => {\n    const MIN_CARD_OPEN_ARRAY_LENGTH = index + 1;\n    const currentLength = cardOpenArray.length;\n    const addProperties = {\n      schema,\n      uischema,\n      mods,\n      onChange,\n      definitionData: definitionData || {},\n      definitionUi: definitionUi || {},\n      index,\n      categoryHash,\n    };\n\n    if (currentLength < MIN_CARD_OPEN_ARRAY_LENGTH) {\n      cardOpenArray.push(\n        ...new Array(MIN_CARD_OPEN_ARRAY_LENGTH - currentLength).fill(false),\n      );\n    }\n    const expanded =\n      (cardOpenArray && index < cardOpenArray.length && cardOpenArray[index]) ||\n      false;\n    if (elementProp.propType === 'card') {\n      // choose the appropriate type specific parameters\n      const TypeSpecificParameters = getCardParameterInputComponentForType(\n        elementProp.dataOptions.category || 'string',\n        allFormInputs,\n      );\n\n      // add a fully defined card component to the list of components\n      return (\n        <Card\n          componentProps={\n            Object.assign(\n              {\n                name: elementPropArr[index].name,\n                required: elementPropArr[index].required,\n                hideKey,\n                path: `${path}_${elementPropArr[index].name}`,\n                definitionData,\n                definitionUi,\n                neighborNames: elementPropArr[index].neighborNames,\n                dependents: elementPropArr[index].dependents,\n                dependent: elementPropArr[index].dependent,\n                parent: elementPropArr[index].parent,\n              },\n              elementPropArr[index].uiOptions,\n              elementPropArr[index].dataOptions,\n            ) as CardComponentPropsType\n          }\n          key={`${path}_${elementPropArr[index].name}`}\n          TypeSpecificParameters={TypeSpecificParameters}\n          onChange={(newCardObj: { [key: string]: any }) => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n\n            // extract uiOptions and other properties\n            const newDataProps: { [key: string]: any } = {};\n            const newUiProps: { [key: string]: any } = {};\n            Object.keys(newCardObj).forEach((propName) => {\n              if (propName.startsWith('ui:')) {\n                if (propName.startsWith('ui:*')) {\n                  newUiProps[propName.substring(4)] = newCardObj[propName];\n                } else {\n                  newUiProps[propName] = newCardObj[propName];\n                }\n              } else if (\n                ![\n                  'name',\n                  'required',\n                  'neighborNames',\n                  'dependents',\n                  'dependent',\n                  'parent',\n                ].includes(propName)\n              ) {\n                newDataProps[propName] = newCardObj[propName];\n              }\n            });\n\n            if (newElementObjArr[index].propType === 'card') {\n              const oldElement = newElementObjArr[index];\n              newElementObjArr[index] = {\n                ...oldElement,\n                dataOptions: newDataProps,\n                uiOptions: newUiProps,\n                required: newCardObj.required,\n                dependents: newCardObj.dependents,\n                dependent: newCardObj.dependent,\n                parent: newCardObj.parent,\n                name: newCardObj.name,\n                $ref: newCardObj.$ref,\n                propType: 'card',\n              };\n            } else {\n              throw new Error('Card editing non card element');\n            }\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onDelete={() => {\n            // splice out this index from the card array\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr.splice(index, 1);\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              ...cardOpenArray.slice(index + 1),\n            ]);\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveUp={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === 0) return;\n\n            const tempBlock = newElementObjArr[index - 1];\n            newElementObjArr[index - 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveDown={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === elementPropArr.length - 1) return;\n\n            const tempBlock = newElementObjArr[index + 1];\n            newElementObjArr[index + 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          addElem={(choice: string) => {\n            if (choice === 'card') {\n              addCardObj(addProperties);\n            } else if (choice === 'section') {\n              addSectionObj(addProperties);\n            }\n            setCardOpenArray([...cardOpenArray, false]);\n          }}\n          cardOpen={expanded}\n          setCardOpen={(newState: boolean) =>\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              newState,\n              ...cardOpenArray.slice(index + 1),\n            ])\n          }\n          allFormInputs={allFormInputs}\n          mods={mods}\n          addProperties={addProperties}\n        />\n      );\n    } else if (elementProp.propType === 'section') {\n      // create a section with the appropriate schemas here\n      const addProperties = {\n        schema,\n        uischema,\n        mods,\n        onChange,\n        definitionData: definitionData || {},\n        definitionUi: definitionUi || {},\n        index,\n        categoryHash,\n      };\n      return (\n        <Section\n          schema={elementProp.schema}\n          uischema={elementProp.uischema}\n          onChange={(\n            newSchema: { [key: string]: any },\n            newUiSchema: { [key: string]: any },\n            newRef?: string,\n          ) => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n\n            const oldSection = newElementObjArr[index];\n\n            newElementObjArr[index] = {\n              ...oldSection,\n              schema: newSchema,\n              uischema: newUiSchema,\n              propType: 'section',\n            };\n\n            if (newRef) newElementObjArr[index].$ref = newRef;\n\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onNameChange={(newName: string) => {\n            const oldSection = elementProp;\n\n            // check if newName overlaps with an existing name\n            if (elementPropArr.map((elem) => elem.name).includes(newName))\n              return;\n\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr[index] = {\n              ...oldSection,\n              name: newName,\n            };\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onRequireToggle={() => {\n            const oldSection = elementProp;\n\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr[index] = {\n              ...oldSection,\n              required: !oldSection.required,\n            };\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onDependentsChange={(\n            newDependents: Array<{\n              children: Array<string>;\n              value?: any;\n            }>,\n          ) => {\n            const oldSection = elementProp;\n\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr[index] = {\n              ...oldSection,\n              dependents: newDependents,\n            };\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              onChange,\n              definitionData,\n              definitionUi,\n            });\n          }}\n          onDelete={() => {\n            // splice out this index from the card array\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr.splice(index, 1);\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              ...cardOpenArray.slice(index + 1),\n            ]);\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveUp={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === 0) return;\n\n            const tempBlock = newElementObjArr[index - 1];\n            newElementObjArr[index - 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveDown={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === elementPropArr.length - 1) return;\n\n            const tempBlock = newElementObjArr[index + 1];\n            newElementObjArr[index + 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          name={elementProp.name}\n          key={`${path}_${elementPropArr[index].name}`}\n          required={elementProp.required}\n          path={`${path}_${elementProp.name}`}\n          definitionData={definitionData || {}}\n          definitionUi={definitionUi || {}}\n          hideKey={hideKey}\n          reference={elementProp.$ref}\n          neighborNames={elementProp.neighborNames}\n          dependents={elementProp.dependents!}\n          dependent={elementProp.dependent}\n          parent={elementProp.parent}\n          parentProperties={addProperties}\n          cardOpen={expanded}\n          setCardOpen={(newState: boolean) =>\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              newState,\n              ...cardOpenArray.slice(index + 1),\n            ])\n          }\n          allFormInputs={allFormInputs}\n          categoryHash={categoryHash}\n          mods={mods}\n        />\n      );\n    } else {\n      return (\n        <div>\n          <h2> Error parsing element </h2>\n        </div>\n      );\n    }\n  });\n\n  return elementList;\n}\n\n// function called when drag and drop ends\nexport function onDragEnd(\n  result: any,\n  details: {\n    schema: { [key: string]: any };\n    uischema: { [key: string]: any };\n    onChange: (\n      schema: { [key: string]: any },\n      uischema: { [key: string]: any },\n    ) => any;\n    definitionData?: { [key: string]: any };\n    definitionUi?: { [key: string]: any };\n    categoryHash: { [key: string]: string };\n  },\n) {\n  const {\n    schema,\n    uischema,\n    onChange,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  } = details;\n  const src = result.source.index;\n  const dest = result.destination.index;\n  const newElementObjArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  const tempBlock = newElementObjArr[src];\n  newElementObjArr[src] = newElementObjArr[dest];\n  newElementObjArr[dest] = tempBlock;\n\n  updateSchemas(newElementObjArr, {\n    schema,\n    uischema,\n    definitionData: definitionData || {},\n    definitionUi: definitionUi || {},\n    onChange,\n  });\n}\n\n// helper function to recursively update sections\nfunction propagateElementChange(\n  elementArr: ElementProps[],\n  definitionData: { [key: string]: any },\n  definitionUi: { [key: string]: any },\n  categoryHash: { [key: string]: string },\n) {\n  const updatedElementArr: ElementProps[] = [];\n  elementArr.forEach((element) => {\n    // update section and it's children\n    if (element.propType === 'section') {\n      const childrenElements = generateElementPropsFromSchemas({\n        schema: element.schema,\n        uischema: element.uischema,\n        definitionData,\n        definitionUi,\n        categoryHash,\n      });\n      const updatedChildren = propagateElementChange(\n        childrenElements,\n        definitionData,\n        definitionUi,\n        categoryHash,\n      );\n      const newUiSchema = Object.assign(\n        { ...element.uischema },\n        generateSchemaFromElementProps(updatedChildren),\n      );\n      const newSchema = Object.assign(\n        { ...element.schema },\n        generateSchemaFromElementProps(updatedChildren),\n      );\n      const newElement = {\n        ...element,\n        schema: newSchema,\n        uischema: newUiSchema,\n      };\n      updatedElementArr.push(newElement);\n    } else {\n      updatedElementArr.push(element);\n    }\n  });\n  return updatedElementArr;\n}\n\n// propogate changes in a schema and ui schema with updated definitions but outdated body componenents\nexport function propagateDefinitionChanges(\n  schema: { [key: string]: any },\n  uischema: { [key: string]: any },\n  onChange: (\n    schema: { [key: string]: any },\n    uischema: { [key: string]: any },\n  ) => void,\n  categoryHash: { [key: string]: string },\n) {\n  const definitionData = schema.definitions;\n  const definitionUi = uischema.definitions;\n  const bodyElements = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n  const updatedBodyElements = propagateElementChange(\n    bodyElements,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  );\n\n  updateSchemas(updatedBodyElements, {\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    onChange,\n  });\n}\n\n// Member-wise subtraction of array2 from array1\nexport function subtractArray(array1: string[], array2?: string[]): string[] {\n  if (array2 === undefined || array2 === null) return array1;\n\n  // Create a map for performant array filtering on large arrays\n  const keys: { [key: string]: any } = array2.reduce(\n    (acc, curr) => ({\n      ...acc,\n      [curr]: true,\n    }),\n    {},\n  );\n\n  return array1.filter((v: string) => !keys[v]);\n}\n\nexport function excludeKeys(\n  obj: { [key: string]: any },\n  keys?: string[] | null,\n) {\n  if (!keys) return { ...obj };\n\n  // Create a map for performant object filtering\n  const keysHash: { [key: string]: any } = keys.reduce(\n    (acc, curr) => ({\n      ...acc,\n      [curr]: true,\n    }),\n    {},\n  );\n\n  // Create a map for performant array filtering\n  return Object.keys(obj).reduce(\n    (acc, curr) => (keysHash[curr] ? acc : { ...acc, [curr]: obj[curr] }),\n    {},\n  );\n}\n\nexport function getNewElementDefaultDataOptions(\n  i: number,\n  mods?: Mods,\n): DataOptions {\n  if (mods && mods.newElementDefaultDataOptions !== undefined) {\n    const title = `${mods.newElementDefaultDataOptions.title} ${i}`;\n    return { ...mods.newElementDefaultDataOptions, ...{ title: title } };\n  } else {\n    return {\n      title: `New Input ${i}`,\n      type: 'string',\n      default: '',\n    };\n  }\n}\n\nexport function getRandomId(): string {\n  const chars = [\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'u',\n    'v',\n    'w',\n    'x',\n    'y',\n    'z',\n  ];\n  const numberOfChars = chars.length;\n  const randomIdLength = 50;\n\n  return Array.from({ length: randomIdLength })\n    .map(() => chars[Math.floor(Math.random() * numberOfChars)])\n    .join('');\n}\n","import React, { useState, ReactElement } from 'react';\nimport { getRandomId } from '../utils';\nimport Tooltip from '../Tooltip';\n\ninterface DependencyWarningProps {\n  parameters: {\n    [key: string]: any;\n    name?: string;\n    dependents?: Array<{\n      children: Array<string>;\n      value?: any;\n    }>;\n    type?: string;\n    enum?: Array<string | number>;\n    neighborNames?: Array<string>;\n    schema?: string;\n  };\n}\n\n// warning message if not all possibilities specified\nexport default function DependencyWarning({\n  parameters,\n}: DependencyWarningProps): ReactElement | null {\n  const [elementId] = useState(getRandomId());\n  if (\n    parameters.enum &&\n    parameters.dependents &&\n    parameters.dependents.length &&\n    parameters.dependents[0].value\n  ) {\n    // get the set of defined enum values\n    const definedVals = new Set([]);\n    (parameters.dependents || []).forEach((possibility) => {\n      if (possibility.value && possibility.value.enum)\n        possibility.value.enum.forEach((val: never) => definedVals.add(val));\n    });\n    const undefinedVals: never[] = [];\n    if (Array.isArray(parameters.enum))\n      parameters.enum.forEach((val) => {\n        if (!definedVals.has(val as never)) undefinedVals.push(val as never);\n      });\n    if (undefinedVals.length === 0) return null;\n    return (\n      <React.Fragment>\n        <p>\n          Warning! The following values do not have associated dependency\n          values:{' '}\n          <Tooltip\n            id={`${elementId}_valuewarning`}\n            type='help'\n            text='Each possible value for a value-based dependency must be defined to work properly'\n          />\n        </p>\n\n        <ul>\n          {undefinedVals.map((val, index) => (\n            <li key={index}>{val}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  return null;\n}\n","import React, { useState, ReactElement } from 'react';\nimport Select from 'react-select';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\nimport { getRandomId } from '../utils';\n\n// a field that lets you choose adjacent blocks\nexport default function CardSelector({\n  possibleChoices,\n  chosenChoices,\n  onChange,\n  placeholder,\n  path,\n}: {\n  possibleChoices: Array<string>;\n  chosenChoices: Array<string>;\n  onChange: (chosenChoices: Array<string>) => void;\n  placeholder: string;\n  path: string;\n}): ReactElement {\n  const [elementId] = useState(getRandomId());\n  return (\n    <React.Fragment>\n      <ul>\n        {chosenChoices.map((chosenChoice, index) => (\n          <li key={`${elementId}_neighbor_${index}`}>\n            {chosenChoice}{' '}\n            <FontAwesomeIcon\n              icon={faTimes}\n              onClick={() =>\n                onChange([\n                  ...chosenChoices.slice(0, index),\n                  ...chosenChoices.slice(index + 1),\n                ])\n              }\n            />\n          </li>\n        ))}\n      </ul>\n      <Select\n        value={{\n          value: '',\n          label: '',\n        }}\n        placeholder={placeholder}\n        options={possibleChoices\n          .filter((choice) => !chosenChoices.includes(choice))\n          .map((choice) => ({\n            value: choice,\n            label: choice,\n          }))}\n        onChange={(val: any) => {\n          onChange([...chosenChoices, val.value]);\n        }}\n        className='card-modal-select'\n      />\n    </React.Fragment>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport { Input } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from './FontAwesomeIcon';\n\nconst useStyles = createUseStyles({\n  cardEnumOption: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    marginBottom: '.5em',\n    '& input': { width: '80%', marginRight: '1em', marginBottom: 0 },\n    '& .delete-button': {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n    },\n  },\n});\n\ninterface CardEnumOptionsProps {\n  initialValues: Array<any>;\n  names?: Array<string>;\n  showNames: boolean;\n  onChange: (newEnums: Array<any>, newEnumNames?: Array<string>) => void;\n  type: string;\n}\n\n// Input field corresponding to an array of values, add and remove\nexport default function CardEnumOptions({\n  initialValues,\n  names,\n  showNames,\n  onChange,\n  type,\n}: CardEnumOptionsProps): ReactElement {\n  const classes = useStyles();\n\n  const possibleValues = [];\n  for (let index = 0; index < initialValues.length; index += 1) {\n    const value = initialValues[index];\n    let name = `${value}`;\n    if (names && index < names.length) name = names[index];\n    possibleValues.push(\n      <div key={index} className={classes.cardEnumOption}>\n        <Input\n          value={value === undefined || value === null ? '' : value}\n          placeholder='Possible Value'\n          key={`val-${index}`}\n          type={type === 'string' ? 'text' : 'number'}\n          onChange={(ev: any) => {\n            let newVal;\n            switch (type) {\n              case 'string':\n                newVal = ev.target.value;\n                break;\n              case 'number':\n              case 'integer':\n                newVal = parseFloat(ev.target.value);\n                if (Number.isInteger(newVal))\n                  newVal = parseInt(ev.target.value, 10);\n                // TODO: Possible unused condition, since we know it is a number or integer in this case.\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore\n                if (Number.isNaN(newVal)) newVal = type === 'string' ? '' : 0;\n                break;\n              default:\n                throw new Error(`Enum called with unknown type ${type}`);\n            }\n            onChange(\n              [\n                ...initialValues.slice(0, index),\n                newVal,\n                ...initialValues.slice(index + 1),\n              ],\n              names,\n            );\n          }}\n          className='card-text'\n        />\n        <Input\n          value={name || ''}\n          placeholder='Label'\n          key={`name-${index}`}\n          type='text'\n          onChange={(ev: any) => {\n            if (names)\n              onChange(initialValues, [\n                ...names.slice(0, index),\n                ev.target.value,\n                ...names.slice(index + 1),\n              ]);\n          }}\n          className='card-text'\n          style={{ display: showNames ? 'initial' : 'none' }}\n        />\n        <div className='delete-button'>\n          <FontAwesomeIcon\n            icon={faTimes}\n            onClick={() => {\n              // remove this value\n              onChange(\n                [\n                  ...initialValues.slice(0, index),\n                  ...initialValues.slice(index + 1),\n                ],\n                names\n                  ? [...names.slice(0, index), ...names.slice(index + 1)]\n                  : undefined,\n              );\n            }}\n          />\n        </div>\n      </div>,\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {possibleValues}\n      <FontAwesomeIcon\n        icon={faPlus}\n        onClick={() => {\n          // add a new dropdown option\n          onChange(\n            [...initialValues, type === 'string' ? '' : 0],\n            names ? [...names, ''] : undefined,\n          );\n        }}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { useState, ReactElement } from 'react';\nimport { Input } from 'reactstrap';\nimport { faTimes, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport CardEnumOptions from '../CardEnumOptions';\nimport CardSelector from './CardSelector';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\nimport { getRandomId } from '../utils';\n\ntype combinationValue = string | number | any[] | { [key: string]: any };\n\n// handle value options for different card types\nexport default function ValueSelector({\n  possibility,\n  onChange,\n  parentEnums,\n  parentType,\n  parentName,\n  parentSchema,\n  path,\n}: {\n  possibility: {\n    children: Array<string>;\n    value?: any;\n  };\n  onChange: (newPossibility: { children: Array<string>; value?: any }) => void;\n  parentEnums?: Array<string | number>;\n  parentType?: string;\n  parentName?: string;\n  parentSchema?: any;\n  path: string;\n}): ReactElement {\n  const [elementId] = useState(getRandomId());\n  if (possibility.value) {\n    // enum type\n    if (parentEnums) {\n      const enumType = typeof parentEnums[0] === 'number' ? 'number' : 'string';\n      if (enumType === 'string')\n        return (\n          <CardSelector\n            possibleChoices={parentEnums.map((val) => `${val}`)}\n            chosenChoices={possibility.value.enum}\n            onChange={(chosenChoices: Array<string>) =>\n              onChange({ ...possibility, value: { enum: chosenChoices } })\n            }\n            placeholder='Allowed value'\n            path={path}\n          />\n        );\n      if (enumType === 'number')\n        return (\n          <CardSelector\n            possibleChoices={parentEnums.map((val) => `${val}`)}\n            chosenChoices={possibility.value.enum}\n            onChange={(chosenChoices: Array<string>) =>\n              onChange({\n                ...possibility,\n                value: {\n                  enum: chosenChoices.map((val) => Number.parseFloat(val)),\n                },\n              })\n            }\n            placeholder='Allowed value'\n            path={path}\n          />\n        );\n    }\n    // check box type\n    if (parentType === 'boolean') {\n      return (\n        <FBCheckbox\n          onChangeValue={() => {\n            if (possibility.value.enum && possibility.value.enum[0]) {\n              onChange({\n                ...possibility,\n                value: { enum: [false] },\n              });\n            } else {\n              onChange({\n                ...possibility,\n                value: { enum: [true] },\n              });\n            }\n          }}\n          isChecked={possibility.value.enum && possibility.value.enum[0]}\n          label={parentName}\n        />\n      );\n    }\n    // object type\n    if (parentType === 'object') {\n      const enumArr: Array<{\n        [key: string]: combinationValue;\n      }> = possibility.value.enum;\n\n      const getInput = (\n        val: string | number | any[] | { [key: string]: any },\n        index: number,\n        key: string,\n      ) => {\n        switch (typeof val) {\n          case 'string':\n            return (\n              <Input\n                value={val || ''}\n                placeholder='String value'\n                type='text'\n                onChange={(ev: any) => {\n                  const newVal = ev.target.value;\n                  const oldCombo = possibility.value.enum[index];\n                  onChange({\n                    ...possibility,\n                    value: {\n                      enum: [\n                        ...enumArr.slice(0, index),\n                        { ...oldCombo, [key]: newVal },\n                        ...enumArr.slice(index + 1),\n                      ],\n                    },\n                  });\n                }}\n                className='card-modal-text'\n              />\n            );\n            break;\n          case 'number':\n            return (\n              <Input\n                value={val || ''}\n                placeholder='Number value'\n                type='number'\n                onChange={(ev: any) => {\n                  const newVal = Number.parseFloat(ev.target.value);\n                  const oldCombo = possibility.value.enum[index];\n                  onChange({\n                    ...possibility,\n                    value: {\n                      enum: [\n                        ...enumArr.slice(0, index),\n                        { ...oldCombo, [key]: newVal },\n                        ...enumArr.slice(index + 1),\n                      ],\n                    },\n                  });\n                }}\n                className='card-modal-number'\n              />\n            );\n            break;\n          // TODO: arrays are classified as objects - this may be unreachable code.\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          case 'array':\n            return (\n              <Input\n                value={JSON.stringify(val) || ''}\n                placeholder='Array in JSON'\n                type='textarea'\n                onChange={(ev: any) => {\n                  let newVal = val;\n                  try {\n                    newVal = JSON.parse(ev.target.value);\n                  } catch (error) {\n                    // eslint-disable-next-line no-console\n                    console.error('invalid JSON array input');\n                  }\n                  const oldCombo = possibility.value.enum[index];\n                  onChange({\n                    ...possibility,\n                    value: {\n                      enum: [\n                        ...enumArr.slice(0, index),\n                        { ...oldCombo, [key]: newVal },\n                        ...enumArr.slice(index + 1),\n                      ],\n                    },\n                  });\n                }}\n                className='card-modal-text'\n              />\n            );\n            break;\n          case 'object':\n            return (\n              <Input\n                value={JSON.stringify(val) || ''}\n                placeholder='Object in JSON'\n                type='textarea'\n                onChange={(ev: any) => {\n                  let newVal = val;\n                  try {\n                    newVal = JSON.parse(ev.target.value);\n                  } catch (error) {\n                    // eslint-disable-next-line no-console\n                    console.error('invalid JSON object input');\n                  }\n                  const oldCombo = possibility.value.enum[index];\n                  onChange({\n                    ...possibility,\n                    value: {\n                      enum: [\n                        ...enumArr.slice(0, index),\n                        { ...oldCombo, [key]: newVal },\n                        ...enumArr.slice(index + 1),\n                      ],\n                    },\n                  });\n                }}\n                className='card-modal-text'\n              />\n            );\n            break;\n        }\n      };\n\n      return (\n        <div>\n          {enumArr.map((combination, index) => (\n            <li key={`${elementId}_possibleValue${index}`}>\n              {Object.keys(combination).map((key) => {\n                const val: combinationValue = combination[key];\n                return (\n                  <div key={key}>\n                    <h5>{key}:</h5>\n                    {getInput(val, index, key)}\n                  </div>\n                );\n              })}\n              <FontAwesomeIcon\n                icon={faTimes}\n                onClick={() =>\n                  onChange({\n                    ...possibility,\n                    value: {\n                      enum: [\n                        ...enumArr.slice(0, index),\n                        ...enumArr.slice(index + 1),\n                      ],\n                    },\n                  })\n                }\n              />\n            </li>\n          ))}\n          <FontAwesomeIcon\n            icon={faPlus}\n            onClick={() => {\n              const newCase: { [key: string]: any } = {};\n              const propArr: { [key: string]: any } = parentSchema\n                ? parentSchema.properties\n                : {};\n              Object.keys(propArr).forEach((key) => {\n                if (\n                  propArr[key].type === 'number' ||\n                  propArr[key].type === 'integer'\n                ) {\n                  newCase[key] = 0;\n                } else if (propArr[key].type === 'array' || propArr[key].enum) {\n                  newCase[key] = [];\n                } else if (\n                  propArr[key].type === 'object' ||\n                  propArr[key].properties\n                ) {\n                  newCase[key] = {};\n                } else {\n                  newCase[key] = '';\n                }\n              });\n              onChange({\n                ...possibility,\n                value: { enum: [...enumArr, newCase] },\n              });\n            }}\n          />\n        </div>\n      );\n    }\n    return (\n      <CardEnumOptions\n        initialValues={possibility.value.enum}\n        onChange={(newEnum: Array<any>) =>\n          onChange({ ...possibility, value: { enum: newEnum } })\n        }\n        type={parentType || 'string'}\n        showNames={false}\n      />\n    );\n  } else {\n    return <h5> Appear if defined </h5>;\n  }\n}\n","import React, { useState, ReactElement } from 'react';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport Tooltip from '../Tooltip';\nimport CardSelector from './CardSelector';\nimport ValueSelector from './ValueSelector';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\nimport { getRandomId } from '../utils';\n\n// a possible dependency\nexport default function DependencyPossibility({\n  possibility,\n  neighborNames,\n  path,\n  onChange,\n  onDelete,\n  parentEnums,\n  parentType,\n  parentName,\n  parentSchema,\n}: {\n  possibility: {\n    children: Array<string>;\n    value?: any;\n  };\n  neighborNames: Array<string>;\n  path: string;\n  onChange: (newPossibility: { children: Array<string>; value?: any }) => void;\n  onDelete: () => void;\n  parentEnums?: Array<string | number>;\n  parentType?: string;\n  parentName?: string;\n  parentSchema?: any;\n}): ReactElement {\n  const [elementId] = useState(getRandomId());\n  return (\n    <div className='form-dependency-condition'>\n      <h5>\n        Display the following:{' '}\n        <Tooltip\n          id={`${elementId}_bulk`}\n          type='help'\n          text='Choose the other form elements that depend on this one'\n        />\n      </h5>\n      <CardSelector\n        possibleChoices={\n          neighborNames.filter((name) => name !== parentName) || []\n        }\n        chosenChoices={possibility.children}\n        onChange={(chosenChoices: Array<string>) =>\n          onChange({ ...possibility, children: [...chosenChoices] })\n        }\n        placeholder='Choose a dependent...'\n        path={path}\n      />\n      <h5>\n        If \"{parentName}\" has {possibility.value ? 'the value:' : 'a value.'}\n      </h5>\n      <div style={{ display: possibility.value ? 'block' : 'none' }}>\n        <ValueSelector\n          possibility={possibility}\n          onChange={(newPossibility: {\n            children: Array<string>;\n            value?: any;\n          }) => onChange(newPossibility)}\n          parentEnums={parentEnums}\n          parentType={parentType}\n          parentName={parentName}\n          parentSchema={parentSchema}\n          path={path}\n        />\n      </div>\n      <FontAwesomeIcon icon={faTimes} onClick={() => onDelete()} />\n    </div>\n  );\n}\n","import React, { useState, ReactElement } from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport FBRadioGroup from '../radio/FBRadioGroup';\nimport Tooltip from '../Tooltip';\nimport DependencyWarning from './DependencyWarning';\nimport DependencyPossibility from './DependencyPossibility';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\nimport { getRandomId } from '../utils';\n\nconst useStyles = createUseStyles({\n  dependencyField: {\n    '& .fa': { cursor: 'pointer' },\n    '& .plus': { marginLeft: '1em' },\n    '& h4': { marginBottom: '.5em' },\n    '& h5': { fontSize: '1em' },\n    '& .form-dependency-select': { fontSize: '0.75em', marginBottom: '1em' },\n    '& .form-dependency-conditions': {\n      textAlign: 'left',\n      '& .form-dependency-condition': {\n        padding: '1em',\n        border: '1px solid gray',\n        borderRadius: '4px',\n        margin: '1em',\n        '& *': { textAlign: 'initial' },\n      },\n    },\n    '& p': { fontSize: '0.75em' },\n    '& .fb-radio-button': {\n      display: 'block',\n    },\n  },\n});\n\n// checks whether an array corresponds to oneOf dependencies\nfunction checkIfValueBasedDependency(\n  dependents: Array<{\n    children: Array<string>;\n    value?: any;\n  }>,\n) {\n  let valueBased = true;\n  if (dependents && Array.isArray(dependents) && dependents.length > 0) {\n    dependents.forEach((possibility) => {\n      if (!possibility.value || !possibility.value.enum) {\n        valueBased = false;\n      }\n    });\n  } else {\n    valueBased = false;\n  }\n\n  return valueBased;\n}\n\ntype DependencyParams = {\n  [key: string]: any;\n  name?: string;\n  dependents?: Array<{\n    children: Array<string>;\n    value?: any;\n  }>;\n  type?: string;\n  enum?: Array<string | number>;\n  neighborNames?: Array<string>;\n  schema?: any;\n};\n\nexport default function DependencyField({\n  parameters,\n  onChange,\n}: {\n  parameters: DependencyParams;\n  onChange: (newParams: DependencyParams) => void;\n}): ReactElement {\n  const [elementId] = useState(getRandomId());\n  const classes = useStyles();\n  const valueBased = checkIfValueBasedDependency(parameters.dependents || []);\n  return (\n    <div className={`form-dependency ${classes.dependencyField}`}>\n      <h4>\n        Dependencies{' '}\n        <Tooltip\n          id={`${elementId}_dependent`}\n          type='help'\n          text='Control whether other form elements show based on this one'\n        />\n      </h4>\n      {!!parameters.dependents && parameters.dependents.length > 0 && (\n        <React.Fragment>\n          <FBRadioGroup\n            defaultValue={valueBased ? 'value' : 'definition'}\n            horizontal={false}\n            options={[\n              {\n                value: 'definition',\n                label: 'Any value dependency',\n              },\n              {\n                value: 'value',\n                label: (\n                  <React.Fragment>\n                    Specific value dependency{' '}\n                    <Tooltip\n                      id={`${elementId}_valuebased`}\n                      type='help'\n                      text=\"Specify whether these elements should show based on this element's value\"\n                    />\n                  </React.Fragment>\n                ),\n              },\n            ]}\n            onChange={(selection) => {\n              if (parameters.dependents) {\n                const newDependents = [...parameters.dependents];\n                if (selection === 'definition') {\n                  parameters.dependents.forEach((possibility, index) => {\n                    newDependents[index] = {\n                      ...possibility,\n                      value: undefined,\n                    };\n                  });\n                } else {\n                  parameters.dependents.forEach((possibility, index) => {\n                    newDependents[index] = {\n                      ...possibility,\n                      value: { enum: [] },\n                    };\n                  });\n                }\n                onChange({\n                  ...parameters,\n                  dependents: newDependents,\n                });\n              }\n            }}\n          />\n        </React.Fragment>\n      )}\n      <DependencyWarning parameters={parameters} />\n      <div className='form-dependency-conditions'>\n        {parameters.dependents\n          ? parameters.dependents.map((possibility, index) => (\n              <DependencyPossibility\n                possibility={possibility}\n                neighborNames={parameters.neighborNames || []}\n                parentEnums={parameters.enum}\n                parentType={parameters.type}\n                parentName={parameters.name}\n                parentSchema={parameters.schema}\n                path={parameters.path}\n                key={`${elementId}_possibility${index}`}\n                onChange={(newPossibility: {\n                  children: Array<string>;\n                  value?: any;\n                }) => {\n                  const newDependents = parameters.dependents\n                    ? [...parameters.dependents]\n                    : [];\n                  newDependents[index] = newPossibility;\n                  onChange({\n                    ...parameters,\n                    dependents: newDependents,\n                  });\n                }}\n                onDelete={() => {\n                  const newDependents = parameters.dependents\n                    ? [...parameters.dependents]\n                    : [];\n                  onChange({\n                    ...parameters,\n                    dependents: [\n                      ...newDependents.slice(0, index),\n                      ...newDependents.slice(index + 1),\n                    ],\n                  });\n                }}\n              />\n            ))\n          : ''}\n\n        <span className='plus' id={`${elementId}_adddependency`}>\n          <FontAwesomeIcon\n            icon={faPlus}\n            onClick={() => {\n              const newDependents = parameters.dependents\n                ? [...parameters.dependents]\n                : [];\n              newDependents.push({\n                children: [],\n                value: valueBased ? { enum: [] } : undefined,\n              });\n              onChange({\n                ...parameters,\n                dependents: newDependents,\n              });\n            }}\n          />\n        </span>\n        <UncontrolledTooltip\n          placement='top'\n          target={`${elementId}_adddependency`}\n        >\n          Add another dependency relation linking this element and other form\n          elements\n        </UncontrolledTooltip>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  Modal,\n  ModalHeader,\n  Button,\n  ModalBody,\n  ModalFooter,\n  Input,\n} from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport DependencyField from './dependencies/DependencyField';\nimport type { CardModalType, CardComponentPropsType } from './types';\nimport Tooltip from './Tooltip';\n\nconst useStyles = createUseStyles({\n  cardModal: {\n    '& .card-modal-header': { paddingTop: '.5em', paddingBottom: '.5em' },\n    '& .card-modal-entries': { padding: '1em' },\n    '& h4, h5, p, label, li': { marginTop: '.5em', marginBottom: '.5em' },\n    '& h5, p, label, li': { fontSize: '14px' },\n    '& h4': { fontSize: '16px' },\n    '& h3': { fontSize: '18px', marginBottom: 0 },\n    '& .card-modal-entries > div > input': {\n      marginBottom: '1em',\n      height: '32px',\n    },\n    '& .fa-question-circle, & .fa-circle-question': { color: 'gray' },\n    '& .card-modal-boolean': {\n      '& *': { marginRight: '0.25em', height: 'auto', display: 'inline-block' },\n    },\n    '& .card-modal-select': {\n      '& input': { margin: '0', height: '20px' },\n      marginBottom: '1em',\n    },\n  },\n});\n\nconst CardModal: CardModalType = ({\n  componentProps,\n  onChange,\n  isOpen,\n  onClose,\n  TypeSpecificParameters,\n}) => {\n  const classes = useStyles();\n  // assign state values for parameters that should only change on hitting \"Save\"\n  const [componentPropsState, setComponentProps] = useState(componentProps);\n\n  useEffect(() => {\n    setComponentProps(componentProps);\n  }, [componentProps]);\n\n  return (\n    <Modal isOpen={isOpen} data-test='card-modal' className={classes.cardModal}>\n      <ModalHeader className='card-modal-header'>\n        <div style={{ display: componentProps.hideKey ? 'none' : 'initial' }}>\n          <h3>Additional Settings</h3>\n        </div>\n      </ModalHeader>\n      <ModalBody className='card-modal-entries'>\n        <TypeSpecificParameters\n          parameters={componentPropsState}\n          onChange={(newState: CardComponentPropsType) => {\n            setComponentProps({\n              ...componentPropsState,\n              ...newState,\n            });\n          }}\n        />\n        <div>\n          <h4>\n            Column Size{' '}\n            <a\n              href='https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              <Tooltip\n                id='column_size_tooltip'\n                type='help'\n                text='Set the column size of the input'\n              />\n            </a>\n          </h4>\n          <Input\n            value={\n              componentPropsState['ui:column']\n                ? componentPropsState['ui:column']\n                : ''\n            }\n            placeholder='Column size'\n            key='ui:column'\n            type='number'\n            min={0}\n            onChange={(ev) => {\n              setComponentProps({\n                ...componentPropsState,\n                'ui:column': ev.target.value,\n              });\n            }}\n            className='card-modal-text'\n          />\n        </div>\n        <DependencyField\n          parameters={componentPropsState}\n          onChange={(newState) => {\n            setComponentProps({\n              ...componentPropsState,\n              ...newState,\n            });\n          }}\n        />\n      </ModalBody>\n      <ModalFooter>\n        <Button\n          onClick={() => {\n            onClose();\n            onChange(componentPropsState);\n          }}\n          color='primary'\n        >\n          Save\n        </Button>\n        <Button\n          onClick={() => {\n            onClose();\n            setComponentProps(componentProps);\n          }}\n          color='secondary'\n        >\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default CardModal;\n","import React, { FC } from 'react';\nimport { getCardBody } from './utils';\nimport type { Mods, FormInput, CardComponentPropsType } from './types';\n\ninterface GeneralParameterInputsProps {\n  category: string;\n  parameters: CardComponentPropsType;\n  onChange: (newParams: CardComponentPropsType) => void;\n  mods?: Mods;\n  allFormInputs: { [key: string]: FormInput };\n}\n\n// specify the inputs required for any type of object\nconst GeneralParameterInputs: FC<GeneralParameterInputsProps> = ({\n  category,\n  parameters,\n  onChange,\n  mods,\n  allFormInputs,\n}) => {\n  const CardBody = getCardBody(category, allFormInputs);\n  return (\n    <div>\n      <CardBody parameters={parameters} onChange={onChange} mods={mods || {}} />\n    </div>\n  );\n};\n\nexport default GeneralParameterInputs;\n","import React, { ReactElement } from 'react';\nimport Select from 'react-select';\nimport { Input, FormGroup, FormFeedback } from 'reactstrap';\nimport classnames from 'classnames';\nimport GeneralParameterInputs from './GeneralParameterInputs';\nimport {\n  defaultUiProps,\n  defaultDataProps,\n  categoryToNameMap,\n  categoryType,\n  subtractArray,\n  getRandomId,\n} from './utils';\nimport type {\n  Mods,\n  ModLabels,\n  FormInput,\n  CardComponentPropsType,\n} from './types';\nimport Tooltip from './Tooltip';\n\n// specify the inputs required for any type of object\nexport default function CardGeneralParameterInputs({\n  parameters,\n  onChange,\n  allFormInputs,\n  mods,\n  showObjectNameInput = true,\n}: {\n  parameters: CardComponentPropsType;\n  onChange: (newParams: CardComponentPropsType) => void;\n  mods?: Mods;\n  allFormInputs: { [key: string]: FormInput };\n  showObjectNameInput?: boolean;\n}): ReactElement {\n  const [keyState, setKeyState] = React.useState(parameters.name);\n  const [keyError, setKeyError] = React.useState<null | string>(null);\n  const [titleState, setTitleState] = React.useState(parameters.title);\n  const [descriptionState, setDescriptionState] = React.useState(\n    parameters.description,\n  );\n  const [elementId] = React.useState(getRandomId());\n  const categoryMap = categoryToNameMap(allFormInputs);\n\n  const fetchLabel = (\n    labelName: string,\n    defaultLabel: string,\n  ): string | undefined => {\n    return mods &&\n      mods.labels &&\n      typeof mods.labels[labelName as keyof ModLabels] === 'string'\n      ? mods.labels[labelName as keyof ModLabels]\n      : defaultLabel;\n  };\n\n  const objectNameLabel = fetchLabel('objectNameLabel', 'Label');\n  const displayNameLabel = fetchLabel('displayNameLabel', 'Display Name');\n  const descriptionLabel = fetchLabel('descriptionLabel', 'Description');\n  const inputTypeLabel = fetchLabel('inputTypeLabel', 'Input Type');\n\n  const availableInputTypes = () => {\n    const definitionsInSchema =\n      parameters.definitionData &&\n      Object.keys(parameters.definitionData).length !== 0;\n\n    // Hide the \"Reference\" option if there are no definitions in the schema\n    let inputKeys = Object.keys(categoryMap).filter(\n      (key) => key !== 'ref' || definitionsInSchema,\n    );\n    // Exclude hidden inputs based on mods\n    if (mods) inputKeys = subtractArray(inputKeys, mods.deactivatedFormInputs);\n\n    return inputKeys\n      .map((key) => ({ value: key, label: categoryMap[key] }))\n      .sort((a, b) => a.label.localeCompare(b.label));\n  };\n\n  return (\n    <React.Fragment>\n      <div className='card-entry-row'>\n        {showObjectNameInput && (\n          <div className='card-entry form-field-name'>\n            <h5>\n              {`${objectNameLabel} `}\n              <Tooltip\n                text={\n                  mods &&\n                  mods.tooltipDescriptions &&\n                  typeof mods.tooltipDescriptions.cardObjectName === 'string'\n                    ? mods.tooltipDescriptions.cardObjectName\n                    : 'The back-end name of the object'\n                }\n                id={`${elementId}_nameinfo`}\n                type='help'\n              />\n            </h5>\n\n            <FormGroup>\n              <Input\n                invalid={keyError !== null}\n                value={keyState || ''}\n                placeholder='Label'\n                type='text'\n                onChange={(ev) => {\n                  debugger;\n                  setKeyState(ev.target.value);\n                  setTitleState(ev.target.value);\n                }}\n                onBlur={(ev) => {\n                  const { value } = ev.target;\n                  if (\n                    value === parameters.name ||\n                    !(\n                      parameters.neighborNames &&\n                      parameters.neighborNames.includes(value)\n                    )\n                  ) {\n                    setKeyError(null);\n                    onChange({\n                      ...parameters,\n                      name: value,\n                      title: value,\n                    });\n                  } else {\n                    setKeyState(parameters.name);\n                    setTitleState(parameters.name);\n                    setKeyError(`\"${value}\" is already in use.`);\n                    onChange({ ...parameters });\n                  }\n                }}\n                className='card-text'\n              />\n              <FormFeedback>{keyError}</FormFeedback>\n            </FormGroup>\n          </div>\n        )}\n      </div>\n      <div className='card-entry-row'>\n        <div\n          className={`card-entry ${parameters.$ref ? 'disabled-input' : ''}`}\n        >\n          <h5>\n            {`${descriptionLabel} `}\n            <Tooltip\n              text={\n                mods &&\n                mods.tooltipDescriptions &&\n                typeof mods.tooltipDescriptions.cardDescription === 'string'\n                  ? mods.tooltipDescriptions.cardDescription\n                  : 'This will appear as help text on the form'\n              }\n              id={`${elementId}-descriptioninfo`}\n              type='help'\n            />\n          </h5>\n          <FormGroup>\n            <Input\n              value={descriptionState || ''}\n              placeholder='Description'\n              type='text'\n              onChange={(ev) => setDescriptionState(ev.target.value)}\n              onBlur={(ev) => {\n                onChange({ ...parameters, description: ev.target.value });\n              }}\n              className='card-text'\n            />\n          </FormGroup>\n        </div>\n        <div\n          className={classnames('card-entry', {\n            'wide-card-entry': !showObjectNameInput,\n          })}\n        >\n          <h5>\n            {`${inputTypeLabel} `}\n            <Tooltip\n              text={\n                mods &&\n                mods.tooltipDescriptions &&\n                typeof mods.tooltipDescriptions.cardInputType === 'string'\n                  ? mods.tooltipDescriptions.cardInputType\n                  : 'The type of form input displayed on the form'\n              }\n              id={`${elementId}-inputinfo`}\n              type='help'\n            />\n          </h5>\n          <Select\n            value={{\n              value: parameters.category,\n              label: categoryMap[parameters.category!],\n            }}\n            placeholder={inputTypeLabel}\n            options={availableInputTypes()}\n            onChange={(val: any) => {\n              // figure out the new 'type'\n              const newCategory = val.value;\n\n              const newProps = {\n                ...defaultUiProps(newCategory, allFormInputs),\n                ...defaultDataProps(newCategory, allFormInputs),\n                name: parameters.name,\n                required: parameters.required,\n              };\n              if (newProps.$ref !== undefined && !newProps.$ref) {\n                // assign an initial reference\n                const firstDefinition = Object.keys(\n                  parameters.definitionData!,\n                )[0];\n                newProps.$ref = `#/definitions/${firstDefinition || 'empty'}`;\n              }\n              onChange({\n                ...newProps,\n                title: newProps.title || parameters.title,\n                default: newProps.default || '',\n                type: newProps.type || categoryType(newCategory, allFormInputs),\n                category: newProps.category || newCategory,\n              });\n            }}\n            className='card-select'\n          />\n        </div>\n      </div>\n\n      <div className='card-category-options'>\n        <GeneralParameterInputs\n          category={parameters.category!}\n          parameters={parameters}\n          onChange={onChange}\n          mods={mods}\n          allFormInputs={allFormInputs}\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useState, ReactElement } from 'react';\nimport {\n  Popover,\n  PopoverHeader,\n  PopoverBody,\n  UncontrolledTooltip,\n  Button,\n} from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from './FontAwesomeIcon';\nimport FBRadioGroup from './radio/FBRadioGroup';\nimport { getRandomId } from './utils';\nimport type { ModLabels } from './types';\n\nconst useStyles = createUseStyles({\n  addDetails: {\n    '& .popover': {\n      width: '300px',\n      'z-index': '1051 !important',\n      '& .popover-inner': {\n        border: '1px solid #1d71ad',\n        borderRadius: '4px',\n        '& .popover-header': { borderBottom: '1px solid #1d71ad' },\n        '& .action-buttons': {\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginTop: '.5em',\n        },\n      },\n    },\n  },\n});\n\nexport default function Add({\n  addElem,\n  hidden,\n  tooltipDescription,\n  labels,\n}: {\n  addElem: (choice: string) => void;\n  hidden?: boolean;\n  tooltipDescription?: string;\n  labels?: ModLabels;\n}): ReactElement {\n  const classes = useStyles();\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  const [createChoice, setCreateChoice] = useState('card');\n  const [elementId] = useState(getRandomId());\n\n  return (\n    <div style={{ display: hidden ? 'none' : 'initial' }}>\n      <span id={`${elementId}_add`}>\n        <FontAwesomeIcon\n          icon={faPlusSquare}\n          onClick={() => setPopoverOpen(true)}\n        />\n      </span>\n      <UncontrolledTooltip placement='top' target={`${elementId}_add`}>\n        {tooltipDescription || 'Create new form element'}\n      </UncontrolledTooltip>\n      <Popover\n        placement='bottom'\n        target={`${elementId}_add`}\n        isOpen={popoverOpen}\n        toggle={() => setPopoverOpen(false)}\n        className={`add-details ${classes.addDetails}`}\n        id={`${elementId}_add_popover`}\n      >\n        <PopoverHeader>Create New</PopoverHeader>\n        <PopoverBody>\n          <FBRadioGroup\n            className='choose-create'\n            defaultValue={createChoice}\n            horizontal={false}\n            options={[\n              {\n                value: 'card',\n                label: labels?.addElementLabel ?? 'Form element',\n              },\n              {\n                value: 'section',\n                label: labels?.addSectionLabel ?? 'Form section',\n              },\n            ]}\n            onChange={(selection) => {\n              setCreateChoice(selection);\n            }}\n          />\n          <div className='action-buttons'>\n            <Button onClick={() => setPopoverOpen(false)} color='secondary'>\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {\n                addElem(createChoice);\n                setPopoverOpen(false);\n              }}\n              color='primary'\n            >\n              Create\n            </Button>\n          </div>\n        </PopoverBody>\n      </Popover>\n    </div>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport {\n  faArrowUp,\n  faArrowDown,\n  faPencilAlt,\n  faTrash,\n} from '@fortawesome/free-solid-svg-icons';\nimport FBCheckbox from './checkbox/FBCheckbox';\nimport Collapse from './Collapse/Collapse';\nimport CardModal from './CardModal';\nimport CardGeneralParameterInputs from './CardGeneralParameterInputs';\nimport Add from './Add';\nimport FontAwesomeIcon from './FontAwesomeIcon';\nimport Tooltip from './Tooltip';\nimport { getRandomId } from './utils';\nimport type { CardPropsType, CardComponentPropsType } from './types';\n\nconst useStyles = createUseStyles({\n  cardEntries: {\n    'border-bottom': '1px solid gray',\n    margin: '.5em 1.5em 0 1.5em',\n    '& h5': {\n      color: 'black',\n      'font-size': '14px',\n      'font-weight': 'bold',\n    },\n    '& .card-entry-row': {\n      display: 'flex',\n    },\n    '& .card-entry': {\n      margin: 0,\n      width: '50%',\n      'text-align': 'left',\n      padding: '0.5em',\n      '&.wide-card-entry': {\n        width: '100%',\n      },\n    },\n    '& input': {\n      border: '1px solid gray',\n      'border-radius': '4px',\n    },\n    '& .card-category-options': {\n      padding: '.5em',\n    },\n    '& .card-select': {\n      border: '1px solid gray',\n      'border-radius': '4px',\n    },\n    '& .card-array': {\n      '& .fa-plus-square, & .fa-square-plus': { display: 'none' },\n      '& .section-entries': {\n        '& .fa-plus-square, & .fa-square-plus': { display: 'initial' },\n      },\n    },\n    '& .card-enum': {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%',\n      backgroundColor: 'lightGray',\n      textAlign: 'left',\n      padding: '1em',\n      '& h3': { fontSize: '16px', margin: '0 0 .5em 0' },\n      '& label': { color: 'black', fontSize: '14px' },\n      '& .card-enum-header': {\n        marginTop: '0.5em',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        '& h5': { width: '50%', fontWeight: 'bold', fontSize: '14px' },\n      },\n      '& .fa': { cursor: 'pointer' },\n    },\n  },\n  cardInteractions: {\n    margin: '.5em 1.5em',\n    textAlign: 'left',\n    '& .fa': {\n      marginRight: '1em',\n      borderRadius: '4px',\n      padding: '.25em',\n      height: '25px',\n      width: '25px',\n    },\n    '& .fa-arrow-up, .fa-arrow-down': { marginRight: '.5em' },\n    '& .fa-trash': { border: '1px solid #DE5354', color: '#DE5354' },\n    '& .fb-checkbox': { display: 'inline-block' },\n    '& .interactions-left, & .interactions-right': {\n      display: 'inline-block',\n      width: '48%',\n      margin: '0 auto',\n    },\n    '& .interactions-left': { textAlign: 'left' },\n    '& .interactions-right': { textAlign: 'right' },\n  },\n});\n\nexport default function Card({\n  componentProps,\n  onChange,\n  onDelete,\n  onMoveUp,\n  onMoveDown,\n  TypeSpecificParameters,\n  addElem,\n  cardOpen,\n  setCardOpen,\n  allFormInputs,\n  mods,\n  showObjectNameInput = true,\n  addProperties,\n}: CardPropsType): ReactElement {\n  const classes = useStyles();\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [elementId] = React.useState(getRandomId());\n\n  return (\n    <React.Fragment>\n      <Collapse\n        isOpen={cardOpen}\n        toggleCollapse={() => setCardOpen(!cardOpen)}\n        title={\n          <React.Fragment>\n            <span onClick={() => setCardOpen(!cardOpen)} className='label'>\n              {componentProps.title || componentProps.name}{' '}\n              {componentProps.parent ? (\n                <Tooltip\n                  text={`Depends on ${componentProps.parent}`}\n                  id={`${elementId}_parentinfo`}\n                  type='alert'\n                />\n              ) : (\n                ''\n              )}\n              {componentProps.$ref !== undefined ? (\n                <Tooltip\n                  text={`Is an instance of pre-configured component ${componentProps.$ref}`}\n                  id={`${elementId}_refinfo`}\n                  type='alert'\n                />\n              ) : (\n                ''\n              )}\n            </span>\n            <span className='arrows'>\n              <span id={`${elementId}_moveupbiginfo`}>\n                <FontAwesomeIcon\n                  icon={faArrowUp}\n                  onClick={() => (onMoveUp ? onMoveUp() : {})}\n                />\n              </span>\n              <UncontrolledTooltip\n                placement='top'\n                target={`${elementId}_moveupbiginfo`}\n              >\n                Move form element up\n              </UncontrolledTooltip>\n              <span id={`${elementId}_movedownbiginfo`}>\n                <FontAwesomeIcon\n                  icon={faArrowDown}\n                  onClick={() => (onMoveDown ? onMoveDown() : {})}\n                />\n              </span>\n              <UncontrolledTooltip\n                placement='top'\n                target={`${elementId}_movedownbiginfo`}\n              >\n                Move form element down\n              </UncontrolledTooltip>\n            </span>\n          </React.Fragment>\n        }\n        className={`card-container ${\n          componentProps.dependent ? 'card-dependent' : ''\n        } ${componentProps.$ref === undefined ? '' : 'card-reference'}`}\n      >\n        <div className={classes.cardEntries}>\n          <CardGeneralParameterInputs\n            parameters={componentProps}\n            onChange={onChange}\n            allFormInputs={allFormInputs}\n            mods={mods}\n            showObjectNameInput={showObjectNameInput}\n          />\n        </div>\n        <div className={classes.cardInteractions}>\n          <span id={`${elementId}_editinfo`}>\n            <FontAwesomeIcon\n              icon={faPencilAlt}\n              onClick={() => setModalOpen(true)}\n            />\n          </span>\n          <UncontrolledTooltip placement='top' target={`${elementId}_editinfo`}>\n            Additional configurations for this form element\n          </UncontrolledTooltip>\n          <span id={`${elementId}_trashinfo`}>\n            <FontAwesomeIcon\n              icon={faTrash}\n              onClick={() => onDelete && onDelete()}\n            />\n          </span>\n          <UncontrolledTooltip\n            placement='top'\n            target={`${elementId}_trashinfo`}\n          >\n            Delete form element\n          </UncontrolledTooltip>\n          <FBCheckbox\n            onChangeValue={() =>\n              onChange({\n                ...componentProps,\n                required: !componentProps.required,\n              })\n            }\n            isChecked={!!componentProps.required}\n            label='Required'\n            id={`${elementId}_required`}\n          />\n        </div>\n        <CardModal\n          componentProps={componentProps as CardComponentPropsType}\n          isOpen={modalOpen}\n          onClose={() => setModalOpen(false)}\n          onChange={(newComponentProps: CardComponentPropsType) => {\n            onChange(newComponentProps);\n          }}\n          TypeSpecificParameters={TypeSpecificParameters}\n        />\n      </Collapse>\n      {mods?.components?.add && mods?.components?.add(addProperties)}\n      {!mods?.components?.add && addElem && (\n        <Add\n          tooltipDescription={((mods || {}).tooltipDescriptions || {}).add}\n          addElem={(choice: string) => addElem(choice)}\n        />\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Input } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport CardEnumOptions from '../CardEnumOptions';\nimport { getRandomId } from '../utils';\nimport type {\n  FormInput,\n  CardComponentType,\n  CardComponentPropsType,\n} from '../types';\nimport { InputType } from 'reactstrap/types/lib/Input';\n\nconst useStyles = createUseStyles({\n  hidden: {\n    display: 'none',\n  },\n});\n\n// specify the inputs required for a string type object\nexport const CardDefaultParameterInputs: CardComponentType = ({\n  parameters,\n  onChange,\n}) => {\n  return <div />;\n};\n\nconst getInputCardBodyComponent = ({ type }: { type: InputType }) =>\n  function InputCardBodyComponent({\n    parameters,\n    onChange,\n  }: {\n    parameters: CardComponentPropsType;\n    onChange: (newParams: CardComponentPropsType) => void;\n  }) {\n    return (\n      <React.Fragment>\n        <h5>Default value</h5>\n        <Input\n          value={(parameters.default || '') as string | number}\n          placeholder='Default'\n          type={type}\n          onChange={(ev) =>\n            onChange({ ...parameters, default: ev.target.value })\n          }\n          className='card-text'\n        />\n      </React.Fragment>\n    );\n  };\n\nconst Checkbox: CardComponentType = ({ parameters, onChange }) => {\n  return (\n    <div className='card-boolean'>\n      <FBCheckbox\n        onChangeValue={() => {\n          onChange({\n            ...parameters,\n            default: parameters.default ? parameters.default !== true : true,\n          });\n        }}\n        isChecked={parameters.default ? parameters.default === true : false}\n        label='Default'\n      />\n    </div>\n  );\n};\n\nfunction MultipleChoice({\n  parameters,\n  onChange,\n}: {\n  parameters: CardComponentPropsType;\n  onChange: (newParams: CardComponentPropsType) => void;\n}) {\n  const classes = useStyles();\n  const enumArray = Array.isArray(parameters.enum) ? parameters.enum : [];\n  // eslint-disable-next-line no-restricted-globals\n  const containsUnparsableString = enumArray.some((val) => {\n    return isNaN(val as number);\n  });\n  const containsString =\n    containsUnparsableString ||\n    enumArray.some((val) => typeof val === 'string');\n  const [isNumber, setIsNumber] = React.useState(\n    !!enumArray.length && !containsString,\n  );\n  const [elementId] = React.useState(getRandomId());\n  return (\n    <div className='card-enum'>\n      <h3>Possible Values</h3>\n      <FBCheckbox\n        onChangeValue={() => {\n          if (Array.isArray(parameters.enumNames)) {\n            // remove the enumNames\n            onChange({\n              ...parameters,\n              enumNames: null,\n            });\n          } else {\n            // create enumNames as a copy of enum values\n            onChange({\n              ...parameters,\n              enumNames: enumArray.map((val) => `${val}`),\n            });\n          }\n        }}\n        isChecked={Array.isArray(parameters.enumNames)}\n        label='Display label is different from value'\n        id={`${elementId}_different`}\n      />\n      <div\n        className={\n          containsUnparsableString || !enumArray.length ? classes.hidden : ''\n        }\n      >\n        <FBCheckbox\n          onChangeValue={() => {\n            if (containsString || !isNumber) {\n              // attempt converting enum values into numbers\n              try {\n                const newEnum = enumArray.map((val) => {\n                  let newNum = 0;\n                  if (val) newNum = parseFloat(val as string) || 0;\n                  if (Number.isNaN(newNum))\n                    throw new Error(`Could not convert ${val}`);\n                  return newNum;\n                });\n                setIsNumber(true);\n                onChange({\n                  ...parameters,\n                  enum: newEnum,\n                });\n              } catch (error) {\n                // eslint-disable-next-line no-console\n                console.error(error);\n              }\n            } else {\n              // convert enum values back into strings\n              const newEnum = enumArray.map((val) => `${val || 0}`);\n              setIsNumber(false);\n              onChange({\n                ...parameters,\n                enum: newEnum,\n              });\n            }\n          }}\n          isChecked={isNumber}\n          disabled={containsUnparsableString}\n          label='Force number'\n          id={`${elementId}_forceNumber`}\n        />\n      </div>\n      <CardEnumOptions\n        initialValues={enumArray}\n        names={\n          Array.isArray(parameters.enumNames)\n            ? parameters.enumNames.map((val) => `${val}`)\n            : undefined\n        }\n        showNames={Array.isArray(parameters.enumNames)}\n        onChange={(newEnum: Array<string>, newEnumNames?: Array<string>) =>\n          onChange({\n            ...parameters,\n            enum: newEnum,\n            enumNames: newEnumNames,\n          })\n        }\n        type={isNumber ? 'number' : 'string'}\n      />\n    </div>\n  );\n}\n\nconst defaultInputs: { [key: string]: FormInput } = {\n  dateTime: {\n    displayName: 'Date-Time',\n    matchIf: [\n      {\n        types: ['string'],\n        format: 'date-time',\n      },\n    ],\n    defaultDataSchema: {\n      format: 'date-time',\n    },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: getInputCardBodyComponent({ type: 'datetime-local' }),\n    modalBody: CardDefaultParameterInputs,\n  },\n  date: {\n    displayName: 'Date',\n    matchIf: [\n      {\n        types: ['string'],\n        format: 'date',\n      },\n    ],\n    defaultDataSchema: {\n      format: 'date',\n    },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: getInputCardBodyComponent({ type: 'date' }),\n    modalBody: CardDefaultParameterInputs,\n  },\n  time: {\n    displayName: 'Time',\n    matchIf: [\n      {\n        types: ['string'],\n        format: 'time',\n      },\n    ],\n    defaultDataSchema: {\n      format: 'time',\n    },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: getInputCardBodyComponent({ type: 'time' }),\n    modalBody: CardDefaultParameterInputs,\n  },\n  checkbox: {\n    displayName: 'Checkbox',\n    matchIf: [\n      {\n        types: ['boolean'],\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'boolean',\n    cardBody: Checkbox,\n    modalBody: CardDefaultParameterInputs,\n  },\n  radio: {\n    displayName: 'Radio',\n    matchIf: [\n      {\n        types: ['string', 'number', 'integer', 'array', 'boolean', 'null'],\n        widget: 'radio',\n        enum: true,\n      },\n    ],\n    defaultDataSchema: { enum: [] },\n    defaultUiSchema: {\n      'ui:widget': 'radio',\n    },\n    type: 'string',\n    cardBody: MultipleChoice,\n    modalBody: CardDefaultParameterInputs,\n  },\n  dropdown: {\n    displayName: 'Dropdown',\n    matchIf: [\n      {\n        types: ['string', 'number', 'integer', 'array', 'boolean', 'null'],\n        enum: true,\n      },\n    ],\n    defaultDataSchema: { enum: [] },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: MultipleChoice,\n    modalBody: CardDefaultParameterInputs,\n  },\n};\n\nexport default defaultInputs;\n","import React, { ReactElement } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Select from 'react-select';\nimport { createUseStyles } from 'react-jss';\nimport {\n  Alert,\n  Input,\n  UncontrolledTooltip,\n  FormGroup,\n  FormFeedback,\n} from 'reactstrap';\nimport {\n  faArrowUp,\n  faArrowDown,\n  faPencilAlt,\n  faTrash,\n} from '@fortawesome/free-solid-svg-icons';\nimport FBCheckbox from './checkbox/FBCheckbox';\nimport Collapse from './Collapse/Collapse';\nimport CardModal from './CardModal';\nimport { CardDefaultParameterInputs } from './defaults/defaultInputs';\nimport Tooltip from './Tooltip';\nimport Add from './Add';\nimport Card from './Card';\nimport {\n  checkForUnsupportedFeatures,\n  generateElementComponentsFromSchemas,\n  countElementsFromSchema,\n  addCardObj,\n  addSectionObj,\n  onDragEnd,\n} from './utils';\nimport FontAwesomeIcon from './FontAwesomeIcon';\nimport { getRandomId } from './utils';\nimport type { SectionPropsType } from './types';\n\nconst useStyles = createUseStyles({\n  sectionContainer: {\n    '& .section-head': {\n      display: 'flex',\n      borderBottom: '1px solid gray',\n      margin: '0.5em 1.5em 0 1.5em',\n      '& h5': {\n        color: 'black',\n        fontSize: '14px',\n        fontWeight: 'bold',\n      },\n      '& .section-entry': {\n        width: '33%',\n        textAlign: 'left',\n        padding: '0.5em',\n      },\n      '& .section-reference': { width: '100%' },\n    },\n    '& .section-footer': {\n      marginTop: '1em',\n      textAlign: 'center',\n      '& .fa': { cursor: 'pointer' },\n    },\n    '& .section-interactions': {\n      margin: '0.5em 1.5em',\n      textAlign: 'left',\n      borderTop: '1px solid gray',\n      paddingTop: '1em',\n      '& .fa': {\n        marginRight: '1em',\n        borderRadius: '4px',\n        padding: '0.25em',\n        height: '25px',\n        width: '25px',\n      },\n      '& .fa-pencil-alt, &.fa-pencil, & .fa-arrow-up, & .fa-arrow-down': {\n        border: '1px solid #1d71ad',\n        color: '#1d71ad',\n      },\n      '& .fa-trash': { border: '1px solid #de5354', color: '#de5354' },\n      '& .fa-arrow-up, & .fa-arrow-down': { marginRight: '0.5em' },\n      '& .fb-checkbox': {\n        display: 'inline-block',\n        label: { color: '#9aa4ab' },\n      },\n      '& .interactions-left, & .interactions-right': {\n        display: 'inline-block',\n        width: '48%',\n        margin: '0 auto',\n      },\n      '& .interactions-left': { textAlign: 'left' },\n      '& .interactions-right': { textAlign: 'right' },\n    },\n  },\n});\n\nexport default function Section({\n  name,\n  required,\n  schema,\n  uischema,\n  onChange,\n  onNameChange,\n  onRequireToggle,\n  onDependentsChange,\n  onDelete,\n  onMoveUp,\n  onMoveDown,\n  path,\n  definitionData,\n  definitionUi,\n  hideKey,\n  reference,\n  dependents,\n  dependent,\n  parent,\n  parentProperties,\n  neighborNames,\n  cardOpen,\n  setCardOpen,\n  allFormInputs,\n  mods,\n  categoryHash,\n}: SectionPropsType): ReactElement {\n  const classes = useStyles();\n  const unsupportedFeatures = checkForUnsupportedFeatures(\n    schema || {},\n    uischema || {},\n    allFormInputs,\n  );\n  const schemaData = schema || {};\n  const elementNum = countElementsFromSchema(schemaData);\n  const defaultCollapseStates = [...Array(elementNum)].map(() => false);\n  const [cardOpenArray, setCardOpenArray] = React.useState(\n    defaultCollapseStates,\n  );\n  // keep name in state to avoid losing focus\n  const [keyName, setKeyName] = React.useState(name);\n  const [keyError, setKeyError] = React.useState<null | string>(null);\n  // keep requirements in state to avoid rapid updates\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [elementId] = React.useState(getRandomId());\n  const addProperties = {\n    schema,\n    uischema,\n    mods,\n    onChange,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  };\n  const hideAddButton =\n    schemaData.properties && Object.keys(schemaData.properties).length !== 0;\n\n  return (\n    <React.Fragment>\n      <Collapse\n        isOpen={cardOpen}\n        toggleCollapse={() => setCardOpen(!cardOpen)}\n        title={\n          <React.Fragment>\n            <span onClick={() => setCardOpen(!cardOpen)} className='label'>\n              {schemaData.title || keyName}{' '}\n              {parent ? (\n                <Tooltip\n                  text={`Depends on ${parent}`}\n                  id={`${elementId}_parentinfo`}\n                  type='alert'\n                />\n              ) : (\n                ''\n              )}\n            </span>\n            <span className='arrows'>\n              <span id={`${elementId}_moveupbiginfo`}>\n                <FontAwesomeIcon\n                  icon={faArrowUp}\n                  onClick={() => (onMoveUp ? onMoveUp() : {})}\n                />\n              </span>\n              <UncontrolledTooltip\n                placement='top'\n                target={`${elementId}_moveupbiginfo`}\n              >\n                Move form element up\n              </UncontrolledTooltip>\n              <span id={`${elementId}_movedownbiginfo`}>\n                <FontAwesomeIcon\n                  icon={faArrowDown}\n                  onClick={() => (onMoveDown ? onMoveDown() : {})}\n                />\n              </span>\n              <UncontrolledTooltip\n                placement='top'\n                target={`${elementId}_movedownbiginfo`}\n              >\n                Move form element down\n              </UncontrolledTooltip>\n            </span>\n          </React.Fragment>\n        }\n        className={`section-container ${classes.sectionContainer} ${\n          dependent ? 'section-dependent' : ''\n        } ${reference ? 'section-reference' : ''}`}\n      >\n        <div\n          className={`section-entries ${reference ? 'section-reference' : ''}`}\n        >\n          <div className='section-head'>\n            {reference ? (\n              <div className='section-entry section-reference'>\n                <h5>Reference Section</h5>\n                <Select\n                  value={{\n                    value: reference,\n                    label: reference,\n                  }}\n                  placeholder='Reference'\n                  options={Object.keys(definitionData).map((key) => ({\n                    value: `#/definitions/${key}`,\n                    label: `#/definitions/${key}`,\n                  }))}\n                  onChange={(val: any) => {\n                    onChange(schema, uischema, val.value);\n                  }}\n                  className='section-select'\n                />\n              </div>\n            ) : (\n              ''\n            )}\n            <div className='section-entry' data-test='section-object-name'>\n              <h5>\n                Section Object Name{' '}\n                <Tooltip\n                  text={\n                    mods &&\n                    mods.tooltipDescriptions &&\n                    mods.tooltipDescriptions &&\n                    typeof mods.tooltipDescriptions.cardSectionObjectName ===\n                      'string'\n                      ? mods.tooltipDescriptions.cardSectionObjectName\n                      : 'The key to the object that will represent this form section.'\n                  }\n                  id={`${elementId}_nameinfo`}\n                  type='help'\n                />\n              </h5>\n              <FormGroup>\n                <Input\n                  invalid={keyError !== null}\n                  value={keyName || ''}\n                  placeholder='Key'\n                  type='text'\n                  onChange={(ev) => setKeyName(ev.target.value)}\n                  onBlur={(ev) => {\n                    const { value } = ev.target;\n                    if (\n                      value === name ||\n                      !(neighborNames && neighborNames.includes(value))\n                    ) {\n                      setKeyError(null);\n                      onNameChange(value);\n                    } else {\n                      setKeyName(name);\n                      setKeyError(`\"${value}\" is already in use.`);\n                      onNameChange(name);\n                    }\n                  }}\n                  className='card-text'\n                  readOnly={hideKey}\n                />\n                <FormFeedback>{keyError}</FormFeedback>\n              </FormGroup>\n            </div>\n            <div className='section-entry' data-test='section-display-name'>\n              <h5>\n                Section Display Name{' '}\n                <Tooltip\n                  text={\n                    mods &&\n                    mods.tooltipDescriptions &&\n                    mods.tooltipDescriptions &&\n                    typeof mods.tooltipDescriptions.cardSectionDisplayName ===\n                      'string'\n                      ? mods.tooltipDescriptions.cardSectionDisplayName\n                      : 'The name of the form section that will be shown to users of the form.'\n                  }\n                  id={`${elementId}_titleinfo`}\n                  type='help'\n                />\n              </h5>\n              <Input\n                value={schemaData.title || ''}\n                placeholder='Title'\n                type='text'\n                onChange={(ev) =>\n                  onChange(\n                    {\n                      ...schema,\n                      title: ev.target.value,\n                    },\n                    uischema,\n                  )\n                }\n                className='card-text'\n              />\n            </div>\n            <div className='section-entry' data-test='section-description'>\n              <h5>\n                Section Description{' '}\n                <Tooltip\n                  text={\n                    mods &&\n                    mods.tooltipDescriptions &&\n                    mods.tooltipDescriptions &&\n                    typeof mods.tooltipDescriptions.cardSectionDescription ===\n                      'string'\n                      ? mods.tooltipDescriptions.cardSectionDescription\n                      : 'A description of the section which will be visible on the form.'\n                  }\n                  id={`${elementId}_descriptioninfo`}\n                  type='help'\n                />\n              </h5>\n              <Input\n                value={schemaData.description || ''}\n                placeholder='Description'\n                type='text'\n                onChange={(ev) =>\n                  onChange(\n                    {\n                      ...schema,\n                      description: ev.target.value,\n                    },\n                    uischema,\n                  )\n                }\n                className='card-text'\n              />\n            </div>\n            <Alert\n              style={{\n                display: unsupportedFeatures.length === 0 ? 'none' : 'block',\n              }}\n              color='warning'\n            >\n              <h5>Unsupported Features:</h5>\n              {unsupportedFeatures.map((message) => (\n                <li key={`${elementId}_${message}`}>{message}</li>\n              ))}\n            </Alert>\n          </div>\n          <div className='section-body'>\n            <DragDropContext\n              onDragEnd={(result) =>\n                onDragEnd(result, {\n                  schema,\n                  uischema,\n                  onChange,\n                  definitionData,\n                  definitionUi,\n                  categoryHash,\n                })\n              }\n            >\n              <Droppable droppableId='droppable'>\n                {(providedDroppable) => (\n                  <div\n                    ref={providedDroppable.innerRef}\n                    {...providedDroppable.droppableProps}\n                  >\n                    {generateElementComponentsFromSchemas({\n                      schemaData: schema,\n                      uiSchemaData: uischema,\n                      onChange,\n                      path,\n                      definitionData,\n                      definitionUi,\n                      cardOpenArray,\n                      setCardOpenArray,\n                      allFormInputs,\n                      mods,\n                      categoryHash,\n                      Card,\n                      Section,\n                    }).map((element: any, index) => (\n                      <Draggable\n                        key={element.key}\n                        draggableId={element.key}\n                        index={index}\n                      >\n                        {(providedDraggable) => (\n                          <div\n                            ref={providedDraggable.innerRef}\n                            {...providedDraggable.draggableProps}\n                            {...providedDraggable.dragHandleProps}\n                          >\n                            {element}\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {providedDroppable.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n          </div>\n          <div className='section-footer'>\n            {!hideAddButton &&\n              mods?.components?.add &&\n              mods.components.add(addProperties)}\n            {!mods?.components?.add && (\n              <Add\n                tooltipDescription={\n                  ((mods || {}).tooltipDescriptions || {}).add\n                }\n                addElem={(choice: string) => {\n                  if (choice === 'card') {\n                    addCardObj(addProperties);\n                  } else if (choice === 'section') {\n                    addSectionObj(addProperties);\n                  }\n                }}\n                hidden={hideAddButton}\n              />\n            )}\n          </div>\n          <div className='section-interactions'>\n            <span id={`${elementId}_editinfo`}>\n              <FontAwesomeIcon\n                icon={faPencilAlt}\n                onClick={() => setModalOpen(true)}\n              />\n            </span>\n            <UncontrolledTooltip\n              placement='top'\n              target={`${elementId}_editinfo`}\n            >\n              Additional configurations for this form element\n            </UncontrolledTooltip>\n            <span id={`${elementId}_trashinfo`}>\n              <FontAwesomeIcon\n                icon={faTrash}\n                onClick={() => (onDelete ? onDelete() : {})}\n              />\n            </span>\n            <UncontrolledTooltip\n              placement='top'\n              target={`${elementId}_trashinfo`}\n            >\n              Delete form element\n            </UncontrolledTooltip>\n            <FBCheckbox\n              onChangeValue={() => onRequireToggle()}\n              isChecked={required}\n              label='Required'\n              id={`${elementId}_required`}\n            />\n          </div>\n        </div>\n        <CardModal\n          componentProps={{\n            dependents,\n            neighborNames,\n            name: keyName,\n            schema,\n            type: 'object',\n            'ui:column': uischema['ui:column'] ?? '',\n            'ui:options': uischema['ui:options'] ?? '',\n          }}\n          isOpen={modalOpen}\n          onClose={() => setModalOpen(false)}\n          onChange={(newComponentProps: { [key: string]: any }) => {\n            onDependentsChange(newComponentProps.dependents);\n            onChange(schema, {\n              ...uischema,\n              'ui:column': newComponentProps['ui:column'],\n            });\n          }}\n          TypeSpecificParameters={CardDefaultParameterInputs}\n        />\n      </Collapse>\n      {mods?.components?.add && mods.components.add(parentProperties)}\n      {!mods?.components?.add && (\n        <Add\n          tooltipDescription={((mods || {}).tooltipDescriptions || {}).add}\n          addElem={(choice: string) => {\n            if (choice === 'card') {\n              addCardObj(parentProperties);\n            } else if (choice === 'section') {\n              addSectionObj(parentProperties);\n            }\n            setCardOpen(false);\n          }}\n        />\n      )}\n    </React.Fragment>\n  );\n}\n","export const arrows = {\n  '& .arrows': {\n    float: 'right',\n    '& .fa-arrow-up, & .fa-arrow-down': {\n      'border-radius': '4px',\n      padding: '.25em',\n      margin: '0 .5em 0 0',\n      border: '1px solid #1d71ad',\n      color: '#1d71ad',\n      height: '28px',\n      width: '28px',\n    },\n  },\n};\n","import React, { useState } from 'react';\nimport type { CardComponentType } from '../types';\nimport { getRandomId } from '../utils';\nimport Tooltip from '../Tooltip';\nimport { Input } from 'reactstrap';\n\nexport const PlaceholderInput: CardComponentType = ({\n  parameters,\n  onChange,\n}) => {\n  const [elementId] = useState(getRandomId());\n  return (\n    <React.Fragment>\n      <h4>\n        Placeholder{' '}\n        <a\n          href='https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-placeholder'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <Tooltip\n            id={`${elementId}_placeholder`}\n            type='help'\n            text='Hint to the user as to what kind of information is expected in the field'\n          />\n        </a>\n      </h4>\n      <Input\n        value={parameters['ui:placeholder'] ? parameters['ui:placeholder'] : ''}\n        placeholder='Placeholder'\n        key='placeholder'\n        type='text'\n        onChange={(ev) => {\n          onChange({\n            ...parameters,\n            'ui:placeholder': ev.target.value,\n          });\n        }}\n        className='card-modal-text'\n      />\n    </React.Fragment>\n  );\n};\n","import React, { useState } from 'react';\nimport Select from 'react-select';\nimport { Input } from 'reactstrap';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport Tooltip from '../Tooltip';\nimport { getRandomId } from '../utils';\nimport type { CardComponentType, FormInput, DataType } from '../types';\nimport { PlaceholderInput } from '../inputs/PlaceholderInput';\n\nconst formatDictionary = {\n  '': 'None',\n  email: 'Email',\n  hostname: 'Hostname',\n  uri: 'URI',\n  regex: 'Regular Expression',\n};\n\ntype FormatDictionaryKey = '' | 'email' | 'hostname' | 'uri' | 'regex';\n\nconst formatTypeDictionary = {\n  email: 'email',\n  url: 'uri',\n};\n\ntype FormatTypeDictionaryKey = 'email' | 'url';\n\nconst autoDictionary = {\n  '': 'None',\n  email: 'Email',\n  username: 'User Name',\n  password: 'Password',\n  'street-address': 'Street Address',\n  country: 'Country',\n};\n\ntype AutoDictionaryKey =\n  | ''\n  | 'email'\n  | 'username'\n  | 'password'\n  | 'street-address'\n  | 'country';\n\n// specify the inputs required for a string type object\nconst CardShortAnswerParameterInputs: CardComponentType = ({\n  parameters,\n  onChange,\n}) => {\n  const [elementId] = useState(getRandomId());\n  return (\n    <div>\n      <h4>Minimum Length</h4>\n      <Input\n        value={parameters.minLength ? parameters.minLength : ''}\n        placeholder='Minimum Length'\n        key='minLength'\n        type='number'\n        onChange={(ev) => {\n          onChange({\n            ...parameters,\n            minLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>Maximum Length</h4>\n      <Input\n        value={parameters.maxLength ? parameters.maxLength : ''}\n        placeholder='Maximum Length'\n        key='maxLength'\n        type='number'\n        onChange={(ev) => {\n          onChange({\n            ...parameters,\n            maxLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>\n        Regular Expression Pattern{' '}\n        <a\n          href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <Tooltip\n            id={`${elementId}_regex`}\n            type='help'\n            text='Regular expression pattern that this must satisfy'\n          />\n        </a>\n      </h4>\n      <Input\n        value={parameters.pattern ? parameters.pattern : ''}\n        placeholder='Regular Expression Pattern'\n        key='pattern'\n        type='text'\n        onChange={(ev) => {\n          onChange({\n            ...parameters,\n            pattern: ev.target.value,\n          });\n        }}\n        className='card-modal-text'\n      />\n      <h4>\n        Format{' '}\n        <Tooltip\n          id={`${elementId}_format`}\n          type='help'\n          text='Require string input to match a certain common format'\n        />\n      </h4>\n      <Select\n        value={{\n          value: Object.keys(formatDictionary).includes(parameters.format!)\n            ? formatDictionary[parameters.format as FormatDictionaryKey]\n            : '',\n          label: Object.keys(formatDictionary).includes(parameters.format!)\n            ? formatDictionary[parameters.format as FormatDictionaryKey]\n            : 'None',\n        }}\n        placeholder='Format'\n        key='format'\n        options={Object.keys(formatDictionary).map((key: string) => ({\n          value: key,\n          label: formatDictionary[key as FormatDictionaryKey],\n        }))}\n        onChange={(val: any) => {\n          onChange({\n            ...parameters,\n            format: val.value,\n          });\n        }}\n        className='card-modal-select'\n      />\n      <h5>\n        Auto Complete Category{' '}\n        <a\n          href='https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <Tooltip\n            id={`${elementId}_autocomplete`}\n            type='help'\n            text=\"Suggest entries based on the user's browser history\"\n          />\n        </a>\n      </h5>\n      <Select\n        value={{\n          value: parameters['ui:autocomplete']\n            ? autoDictionary[\n                typeof parameters['ui:autocomplete'] === 'string'\n                  ? (parameters['ui:autocomplete'] as AutoDictionaryKey)\n                  : ''\n              ]\n            : '',\n          label: parameters['ui:autocomplete']\n            ? autoDictionary[\n                typeof parameters['ui:autocomplete'] === 'string'\n                  ? (parameters['ui:autocomplete'] as AutoDictionaryKey)\n                  : ''\n              ]\n            : 'None',\n        }}\n        placeholder='Auto Complete'\n        key='ui:autocomplete'\n        options={Object.keys(autoDictionary).map((key) => ({\n          value: key,\n          label: autoDictionary[key as AutoDictionaryKey],\n        }))}\n        onChange={(val: any) => {\n          onChange({\n            ...parameters,\n            'ui:autocomplete': val.value,\n          });\n        }}\n        className='card-modal-select'\n      />\n      <PlaceholderInput parameters={parameters} onChange={onChange} />\n      <h4>\n        Column Size{' '}\n        <a\n          href='https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <Tooltip\n            id={`${elementId}_column_size`}\n            type='help'\n            text='Set the column size of the input'\n          />\n        </a>\n      </h4>\n      <Input\n        value={parameters['ui:column'] ? parameters['ui:column'] : ''}\n        placeholder='Column size'\n        key='ui:column'\n        type='number'\n        onChange={(ev) => {\n          onChange({\n            ...parameters,\n            'ui:column': ev.target.value,\n          });\n        }}\n        className='card-modal-text'\n      />\n      <div className='card-modal-boolean'>\n        <FBCheckbox\n          onChangeValue={() => {\n            onChange({\n              ...parameters,\n              'ui:autofocus': parameters['ui:autofocus']\n                ? parameters['ui:autofocus'] !== true\n                : true,\n            });\n          }}\n          isChecked={\n            parameters['ui:autofocus']\n              ? parameters['ui:autofocus'] === true\n              : false\n          }\n          label='Auto Focus'\n        />\n      </div>\n    </div>\n  );\n};\n\nconst ShortAnswerField: CardComponentType = ({ parameters, onChange }) => {\n  return (\n    <React.Fragment>\n      <h5>Default value</h5>\n      <Input\n        value={\n          parameters.default as string | number | readonly string[] | undefined\n        }\n        placeholder='Default'\n        type={\n          (formatTypeDictionary[\n            parameters.format as FormatTypeDictionaryKey\n          ] as 'email' | 'url') || 'text'\n        }\n        onChange={(ev) => onChange({ ...parameters, default: ev.target.value })}\n        className='card-text'\n      />\n    </React.Fragment>\n  );\n};\n\nconst Password: CardComponentType = ({ parameters, onChange }) => {\n  return (\n    <React.Fragment>\n      <h5>Default password</h5>\n      <Input\n        value={\n          parameters.default as string | number | readonly string[] | undefined\n        }\n        placeholder='Default'\n        type='password'\n        onChange={(ev) => onChange({ ...parameters, default: ev.target.value })}\n        className='card-text'\n      />\n    </React.Fragment>\n  );\n};\n\nconst shortAnswerInput: { [key: string]: FormInput } = {\n  shortAnswer: {\n    displayName: 'Short Answer',\n    matchIf: [\n      {\n        types: ['string'],\n      },\n      ...['email', 'hostname', 'uri', 'regex'].map((format) => ({\n        types: ['string'] as DataType[],\n        format,\n      })),\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: ShortAnswerField,\n    modalBody: CardShortAnswerParameterInputs,\n  },\n  password: {\n    displayName: 'Password',\n    matchIf: [\n      {\n        types: ['string'],\n        widget: 'password',\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {\n      'ui:widget': 'password',\n    },\n    type: 'string',\n    cardBody: Password,\n    modalBody: CardShortAnswerParameterInputs,\n  },\n};\n\nexport default shortAnswerInput;\n","import React, { useState } from 'react';\nimport { Input } from 'reactstrap';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport Tooltip from '../Tooltip';\nimport { getRandomId } from '../utils';\nimport type { FormInput, CardComponentType } from '../types';\nimport { PlaceholderInput } from '../inputs/PlaceholderInput';\n\n// specify the inputs required for a string type object\nconst CardLongAnswerParameterInputs: CardComponentType = ({\n  parameters,\n  onChange,\n}) => {\n  const [elementId] = useState(getRandomId());\n  return (\n    <div>\n      <h4>Minimum Length</h4>\n      <Input\n        value={parameters.minLength ? parameters.minLength : ''}\n        placeholder='Minimum Length'\n        key='minLength'\n        type='number'\n        onChange={(ev) => {\n          onChange({\n            ...parameters,\n            minLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>Maximum Length</h4>\n      <Input\n        value={parameters.maxLength ? parameters.maxLength : ''}\n        placeholder='Maximum Length'\n        key='maxLength'\n        type='number'\n        onChange={(ev) => {\n          onChange({\n            ...parameters,\n            maxLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>\n        Regular Expression Pattern{' '}\n        <a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions'>\n          <Tooltip\n            id={`${elementId}_regex`}\n            type='help'\n            text='Regular expression pattern that this must satisfy'\n          />\n        </a>\n      </h4>\n      <Input\n        value={parameters.pattern ? parameters.pattern : ''}\n        placeholder='Regular Expression Pattern'\n        key='pattern'\n        type='text'\n        onChange={(ev) => {\n          onChange({\n            ...parameters,\n            pattern: ev.target.value,\n          });\n        }}\n        className='card-modal-text'\n      />\n      <PlaceholderInput parameters={parameters} onChange={onChange} />\n      <div className='card-modal-boolean'>\n        <FBCheckbox\n          onChangeValue={() => {\n            onChange({\n              ...parameters,\n              'ui:autofocus': parameters['ui:autofocus']\n                ? parameters['ui:autofocus'] !== true\n                : true,\n            });\n          }}\n          isChecked={\n            parameters['ui:autofocus']\n              ? parameters['ui:autofocus'] === true\n              : false\n          }\n          label='Auto Focus'\n        />\n      </div>\n    </div>\n  );\n};\n\nconst LongAnswer: CardComponentType = ({ parameters, onChange }) => {\n  return (\n    <React.Fragment>\n      <h5>Default value</h5>\n      <Input\n        value={\n          parameters.default as string | number | readonly string[] | undefined\n        }\n        placeholder='Default'\n        type='textarea'\n        onChange={(ev) => onChange({ ...parameters, default: ev.target.value })}\n        className='card-textarea'\n      />\n    </React.Fragment>\n  );\n};\n\nconst longAnswerInput: { [key: string]: FormInput } = {\n  longAnswer: {\n    displayName: 'Long Answer',\n    matchIf: [\n      {\n        types: ['string'],\n        widget: 'textarea',\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {\n      'ui:widget': 'textarea',\n    },\n    type: 'string',\n    cardBody: LongAnswer,\n    modalBody: CardLongAnswerParameterInputs as CardComponentType,\n  },\n};\n\nexport default longAnswerInput;\n","import React, { useState } from 'react';\nimport { Input } from 'reactstrap';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport Tooltip from '../Tooltip';\nimport { getRandomId } from '../utils';\nimport type { FormInput, CardComponentType } from '../types';\n\n// specify the inputs required for a number type object\nconst CardNumberParameterInputs: CardComponentType = ({\n  parameters,\n  onChange,\n}) => {\n  const [elementId] = useState(getRandomId());\n  return (\n    <div>\n      <h4>\n        Multiple of{' '}\n        <Tooltip\n          id={`${elementId}_multiple`}\n          type='help'\n          text='Require number to be a multiple of this number'\n        />\n      </h4>\n      <Input\n        value={parameters.multipleOf ? parameters.multipleOf : ''}\n        placeholder='ex: 2'\n        key='multipleOf'\n        type='number'\n        onChange={(ev) => {\n          let newVal: null | number = parseFloat(ev.target.value);\n          if (Number.isNaN(newVal)) newVal = null;\n          onChange({\n            ...parameters,\n            multipleOf: newVal,\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>Minimum</h4>\n      <Input\n        value={parameters.minimum || parameters.exclusiveMinimum || ''}\n        placeholder='ex: 3'\n        key='minimum'\n        type='number'\n        onChange={(ev) => {\n          let newVal: null | number = parseFloat(ev.target.value);\n          if (Number.isNaN(newVal)) newVal = null;\n          // change either min or exclusiveMin depending on which one is active\n          if (parameters.exclusiveMinimum) {\n            onChange({\n              ...parameters,\n              exclusiveMinimum: newVal,\n              minimum: null,\n            });\n          } else {\n            onChange({\n              ...parameters,\n              minimum: newVal,\n              exclusiveMinimum: null,\n            });\n          }\n        }}\n        className='card-modal-number'\n      />\n      <div className='card-modal-boolean'>\n        <FBCheckbox\n          key='exclusiveMinimum'\n          onChangeValue={() => {\n            const newMin = parameters.minimum || parameters.exclusiveMinimum;\n            if (parameters.exclusiveMinimum) {\n              onChange({\n                ...parameters,\n                exclusiveMinimum: null,\n                minimum: newMin,\n              });\n            } else {\n              onChange({\n                ...parameters,\n                exclusiveMinimum: newMin,\n                minimum: null,\n              });\n            }\n          }}\n          isChecked={!!parameters.exclusiveMinimum}\n          disabled={!parameters.minimum && !parameters.exclusiveMinimum}\n          label='Exclusive Minimum'\n        />\n      </div>\n      <h4>Maximum</h4>\n      <Input\n        value={parameters.maximum || parameters.exclusiveMaximum || ''}\n        placeholder='ex: 8'\n        key='maximum'\n        type='number'\n        onChange={(ev) => {\n          let newVal: null | number = parseFloat(ev.target.value);\n          if (Number.isNaN(newVal)) newVal = null;\n          // change either max or exclusiveMax depending on which one is active\n          if (parameters.exclusiveMinimum) {\n            onChange({\n              ...parameters,\n              exclusiveMaximum: newVal,\n              maximum: null,\n            });\n          } else {\n            onChange({\n              ...parameters,\n              maximum: newVal,\n              exclusiveMaximum: null,\n            });\n          }\n        }}\n        className='card-modal-number'\n      />\n      <div className='card-modal-boolean'>\n        <FBCheckbox\n          key='exclusiveMaximum'\n          onChangeValue={() => {\n            const newMax = parameters.maximum || parameters.exclusiveMaximum;\n            if (parameters.exclusiveMaximum) {\n              onChange({\n                ...parameters,\n                exclusiveMaximum: null,\n                maximum: newMax,\n              });\n            } else {\n              onChange({\n                ...parameters,\n                exclusiveMaximum: newMax,\n                maximum: null,\n              });\n            }\n          }}\n          isChecked={!!parameters.exclusiveMaximum}\n          disabled={!parameters.maximum && !parameters.exclusiveMaximum}\n          label='Exclusive Maximum'\n        />\n      </div>\n    </div>\n  );\n};\n\nconst NumberField: CardComponentType = ({ parameters, onChange }) => {\n  return (\n    <React.Fragment>\n      <h5>Default number</h5>\n      <Input\n        value={\n          parameters.default as string | number | readonly string[] | undefined\n        }\n        placeholder='Default'\n        type='number'\n        onChange={(ev) =>\n          onChange({\n            ...parameters,\n            default: parseFloat(ev.target.value),\n          })\n        }\n        className='card-number'\n      />\n    </React.Fragment>\n  );\n};\n\nconst numberInputs: { [key: string]: FormInput } = {\n  integer: {\n    displayName: 'Integer',\n    matchIf: [\n      {\n        types: ['integer'],\n      },\n      {\n        types: ['integer'],\n        widget: 'number',\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'integer',\n    cardBody: NumberField,\n    modalBody: CardNumberParameterInputs,\n  },\n  number: {\n    displayName: 'Number',\n    matchIf: [\n      {\n        types: ['number'],\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'number',\n    cardBody: NumberField,\n    modalBody: CardNumberParameterInputs,\n  },\n};\n\nexport default numberInputs;\n","import React, { useState } from 'react';\nimport { Input } from 'reactstrap';\nimport {\n  excludeKeys,\n  generateElementComponentsFromSchemas,\n  generateCategoryHash,\n} from '../utils';\nimport Card from '../Card';\nimport Section from '../Section';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport shortAnswerInputs from './shortAnswerInputs';\nimport longAnswerInputs from './longAnswerInputs';\nimport numberInputs from './numberInputs';\nimport defaultInputs from './defaultInputs';\nimport { getRandomId } from '../utils';\nimport type {\n  FormInput,\n  CardComponentType,\n  CardComponentPropsType,\n} from '../types';\n\n// specify the inputs required for a string type object\nconst CardArrayParameterInputs: CardComponentType = ({\n  parameters,\n  onChange,\n}) => {\n  return (\n    <div>\n      <h4>Minimum Items</h4>\n      <Input\n        value={parameters.minItems || ''}\n        placeholder='ex: 2'\n        key='minimum'\n        type='number'\n        onChange={(ev) => {\n          onChange({\n            ...parameters,\n            minItems: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>Maximum Items</h4>\n      <Input\n        value={parameters.maxItems || ''}\n        placeholder='ex: 2'\n        key='maximum'\n        type='number'\n        onChange={(ev) => {\n          onChange({\n            ...parameters,\n            maxItems: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n    </div>\n  );\n};\n\nconst InnerCard: CardComponentType = ({ parameters, onChange, mods }) => {\n  const [elementId] = useState(getRandomId);\n  const newDataProps: { [key: string]: any } = {};\n  const newUiProps: { [key: string]: any } = {};\n  const allFormInputs = excludeKeys(\n    Object.assign({}, defaultFormInputs, (mods && mods.customFormInputs) || {}),\n    mods && mods.deactivatedFormInputs,\n  );\n\n  // parse components into data and ui relevant pieces\n  Object.keys(parameters).forEach((propName: string) => {\n    if (propName.startsWith('ui:*')) {\n      newUiProps[propName.substring(4)] =\n        parameters[propName as keyof CardComponentPropsType];\n    } else if (propName.startsWith('ui:')) {\n      newUiProps[propName] =\n        parameters[propName as keyof CardComponentPropsType];\n    } else if (!['name', 'required'].includes(propName)) {\n      newDataProps[propName] =\n        parameters[propName as keyof CardComponentPropsType];\n    }\n  });\n\n  const definitionData = parameters.definitionData\n    ? parameters.definitionData\n    : {};\n  const definitionUi = parameters.definitionUi ? parameters.definitionUi : {};\n  const [cardOpen, setCardOpen] = React.useState(false);\n  if (parameters.type !== 'array') {\n    return <h4>Not an array </h4>;\n  }\n  return (\n    <div className='card-array'>\n      <FBCheckbox\n        onChangeValue={() => {\n          if (newDataProps.items.type === 'object') {\n            onChange({\n              ...parameters,\n              items: {\n                ...newDataProps.items,\n                type: 'string',\n              },\n            });\n          } else {\n            onChange({\n              ...parameters,\n              items: {\n                ...newDataProps.items,\n                type: 'object',\n              },\n            });\n          }\n        }}\n        isChecked={newDataProps.items.type === 'object'}\n        label='Section'\n        id={`${elementId}_issection`}\n      />\n      {generateElementComponentsFromSchemas({\n        schemaData: { properties: { item: newDataProps.items } },\n        uiSchemaData: { item: newUiProps.items },\n        onChange: (schema, uischema) => {\n          onChange({\n            ...parameters,\n            items: schema.properties.item,\n            'ui:*items': uischema.item || {},\n          });\n        },\n        path: elementId,\n        definitionData,\n        definitionUi,\n        hideKey: true,\n        cardOpenArray: [cardOpen],\n        setCardOpenArray: (newArr) => setCardOpen(newArr[0]),\n        allFormInputs,\n        mods,\n        categoryHash: generateCategoryHash(allFormInputs),\n        Card: (props) => <Card {...props} showObjectNameInput={false} />,\n        Section,\n      })}\n    </div>\n  );\n};\n\nfunction getInnerCardComponent({\n  defaultFormInputs,\n}: {\n  defaultFormInputs: { [key: string]: FormInput };\n}): CardComponentType {\n  return InnerCard;\n}\n\nconst defaultFormInputs: { [key: string]: FormInput } = {\n  ...defaultInputs,\n  ...shortAnswerInputs,\n  ...longAnswerInputs,\n  ...numberInputs,\n};\ndefaultFormInputs.array = {\n  displayName: 'Array',\n  matchIf: [\n    {\n      types: ['array'],\n    },\n  ],\n  defaultDataSchema: {\n    items: { type: 'string' },\n  },\n  defaultUiSchema: {},\n  type: 'array',\n  cardBody: getInnerCardComponent({ defaultFormInputs }),\n  modalBody: CardArrayParameterInputs,\n};\n\nconst ArrayInputs: { [key: string]: FormInput } = {\n  array: {\n    displayName: 'Array',\n    matchIf: [\n      {\n        types: ['array'],\n      },\n    ],\n    defaultDataSchema: {\n      items: { type: 'string' },\n    },\n    defaultUiSchema: {},\n    type: 'array',\n    cardBody: getInnerCardComponent({ defaultFormInputs }),\n    modalBody: CardArrayParameterInputs,\n  },\n};\n\nexport default ArrayInputs;\n","import React from 'react';\nimport type { FormInput, CardComponentType } from '../types';\nimport Select from 'react-select';\nimport { PlaceholderInput } from '../inputs/PlaceholderInput';\n\nexport const CardReferenceParameterInputs: CardComponentType = ({\n  parameters,\n  onChange,\n}) => {\n  return (\n    <div>\n      <PlaceholderInput parameters={parameters} onChange={onChange} />\n    </div>\n  );\n};\n\nconst RefChoice: CardComponentType = ({ parameters, onChange }) => {\n  const pathArr = (parameters.$ref || '').split('/');\n  const currentValueLabel =\n    pathArr.length === 3 &&\n    pathArr[0] === '#' &&\n    pathArr[1] === 'definitions' &&\n    (parameters.definitionData || {})[pathArr[2]]\n      ? parameters.definitionData![pathArr[2]].title || parameters.$ref\n      : parameters.$ref;\n\n  return (\n    <div className='card-select'>\n      <Select\n        value={{\n          value: parameters.$ref,\n          label: currentValueLabel,\n        }}\n        placeholder='Reference'\n        options={Object.keys(parameters.definitionData || {}).map((key) => ({\n          value: `#/definitions/${key}`,\n          label:\n            parameters.definitionData![key].title || `#/definitions/${key}`,\n        }))}\n        onChange={(val: any) => {\n          onChange({ ...parameters, $ref: val.value });\n        }}\n        className='card-select'\n      />\n    </div>\n  );\n};\n\nconst referenceInputs: { [key: string]: FormInput } = {\n  ref: {\n    displayName: 'Reference',\n    matchIf: [\n      {\n        types: ['null'],\n        $ref: true,\n      },\n    ],\n    defaultDataSchema: {\n      $ref: '',\n      title: '',\n      description: '',\n    },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: RefChoice,\n    modalBody: CardReferenceParameterInputs,\n  },\n};\n\nexport default referenceInputs;\n","import shortAnswerInputs from './shortAnswerInputs';\nimport longAnswerInputs from './longAnswerInputs';\nimport numberInputs from './numberInputs';\nimport arrayInputs from './arrayInputs';\nimport defaultInputs from './defaultInputs';\nimport referenceInputs from './referenceInputs';\nimport { FormInput } from '../types';\n\nconst DEFAULT_FORM_INPUTS: { [key: string]: FormInput } = {\n  ...defaultInputs,\n  ...referenceInputs,\n  ...shortAnswerInputs,\n  ...longAnswerInputs,\n  ...numberInputs,\n  ...arrayInputs,\n};\n\nexport default DEFAULT_FORM_INPUTS;\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Alert, Input } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport Card from './Card';\nimport Section from './Section';\nimport Add from './Add';\nimport { arrows as arrowsStyle } from './styles';\nimport {\n  parse,\n  stringify,\n  checkForUnsupportedFeatures,\n  generateElementComponentsFromSchemas,\n  addCardObj,\n  addSectionObj,\n  onDragEnd,\n  countElementsFromSchema,\n  generateCategoryHash,\n  excludeKeys,\n} from './utils';\nimport DEFAULT_FORM_INPUTS from './defaults/defaultFormInputs';\nimport type {\n  Mods,\n  InitParameters,\n  AddFormObjectParametersType,\n} from './types';\n\nconst useStyles = createUseStyles({\n  formBuilder: {\n    'text-align': 'center',\n    '& .fa': {\n      cursor: 'pointer',\n    },\n    '& .fa-question-circle, & .fa-circle-question': {\n      color: 'gray',\n    },\n    '& .fa-asterisk': {\n      'font-size': '.9em',\n      color: 'green',\n    },\n    '& .fa-plus-square, & .fa-square-plus': {\n      color: 'green',\n      'font-size': '1.5em',\n      margin: '0 auto',\n    },\n    ...arrowsStyle,\n    '& .card-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      display: 'block',\n      width: '70%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid gray',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid gray',\n      },\n      '& .label': {\n        float: 'left',\n      },\n    },\n    '& .card-container:hover': { border: '1px solid green' },\n    '& .card-dependent': {\n      border: '1px dashed gray',\n    },\n    '& .card-requirements': {\n      border: '1px dashed black',\n    },\n    '& .section-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      display: 'block',\n      width: '90%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid gray',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid gray',\n      },\n      '& .label': {\n        float: 'left',\n      },\n    },\n    '& .section-container:hover': { border: '1px solid green' },\n    '& .section-dependent': {\n      border: '1px dashed gray',\n    },\n    '& .section-requirements': {\n      border: '1px dashed black',\n    },\n    '& .alert': {\n      textAlign: 'left',\n      width: '70%',\n      margin: '1em auto',\n      '& h5': {\n        color: 'black',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        margin: '0',\n      },\n      '& .fa': { fontSize: '14px' },\n    },\n    '& .disabled-unchecked-checkbox': {\n      color: 'gray',\n      '& div::before': { backgroundColor: 'lightGray' },\n    },\n    '& .disabled-input': {\n      '& input': { backgroundColor: 'lightGray' },\n      '& input:focus': {\n        backgroundColor: 'lightGray',\n        border: '1px solid gray',\n      },\n    },\n  },\n  formHead: {\n    display: 'block',\n    margin: '0 auto',\n    'background-color': '#EBEBEB',\n    border: '1px solid #858F96',\n    'border-radius': '4px',\n    width: '70%',\n    padding: '10px',\n    '& div': {\n      width: '30%',\n      display: 'inline-block',\n      'text-align': 'left',\n      padding: '10px',\n    },\n    '& .form-title': {\n      'text-align': 'left',\n    },\n    '& .form-description': {\n      'text-align': 'left',\n    },\n    '& h5': {\n      'font-size': '14px',\n      'line-height': '21px',\n      'font-weight': 'bold',\n    },\n  },\n  formBody: {\n    display: 'flex',\n    flexDirection: 'column',\n    '& .fa-pencil-alt, & .fa-pencil': {\n      border: '1px solid #1d71ad',\n      color: '#1d71ad',\n    },\n    '& .modal-body': {\n      maxHeight: '500px',\n      overflowY: 'scroll',\n    },\n    '& .card-add': {\n      cursor: 'pointer',\n      display: 'block',\n      color: '$green',\n      fontSize: '1.5em',\n    },\n  },\n  formFooter: {\n    marginTop: '1em',\n    textAlign: 'center',\n    '& .fa': { cursor: 'pointer', color: '$green', fontSize: '1.5em' },\n  },\n});\n\nexport default function FormBuilder({\n  schema,\n  uischema,\n  onMount,\n  onChange,\n  mods,\n  className,\n}: {\n  schema: string;\n  uischema: string;\n  onMount?: (parameters: InitParameters) => any;\n  onChange: (schema: string, uischema: string) => any;\n  mods?: Mods;\n  className?: string;\n}): ReactElement {\n  const classes = useStyles();\n  const schemaData = parse(schema);\n  schemaData.type = 'object';\n  const uiSchemaData = parse(uischema);\n  const allFormInputs = excludeKeys(\n    Object.assign(\n      {},\n      DEFAULT_FORM_INPUTS,\n      (mods && mods.customFormInputs) || {},\n    ),\n    mods && mods.deactivatedFormInputs,\n  );\n\n  const unsupportedFeatures = checkForUnsupportedFeatures(\n    schemaData,\n    uiSchemaData,\n    allFormInputs,\n  );\n\n  const elementNum = countElementsFromSchema(schemaData);\n  const defaultCollapseStates = [...Array(elementNum)].map(() => false);\n  const [cardOpenArray, setCardOpenArray] = React.useState(\n    defaultCollapseStates,\n  );\n  const categoryHash = generateCategoryHash(allFormInputs);\n\n  const [isFirstRender, setIsFirstRender] = useState(true);\n\n  const addProperties: AddFormObjectParametersType = {\n    schema: schemaData,\n    uischema: uiSchemaData,\n    mods: mods,\n    onChange: (\n      newSchema: { [key: string]: any },\n      newUiSchema: { [key: string]: any },\n    ) => onChange(stringify(newSchema), stringify(newUiSchema)),\n    definitionData: schemaData.definitions,\n    definitionUi: uiSchemaData.definitions,\n    categoryHash,\n  };\n\n  const hideAddButton =\n    schemaData.properties && Object.keys(schemaData.properties).length !== 0;\n\n  useEffect(() => {\n    if (isFirstRender) {\n      onMount &&\n        onMount({\n          categoryHash,\n        });\n      setIsFirstRender(false);\n    }\n  }, [isFirstRender, onMount, categoryHash]);\n\n  return (\n    <div className={`${classes.formBuilder} ${className || ''}`}>\n      <Alert\n        style={{\n          display: unsupportedFeatures.length === 0 ? 'none' : 'block',\n        }}\n        color='warning'\n      >\n        <h5>Unsupported Features:</h5>\n        {unsupportedFeatures.map((message, index) => (\n          <li key={index}>{message}</li>\n        ))}\n      </Alert>\n      {(!mods || mods.showFormHead !== false) && (\n        <div className={classes.formHead} data-test='form-head'>\n          <div>\n            <h5 data-test='form-name-label'>\n              {mods &&\n              mods.labels &&\n              typeof mods.labels.formNameLabel === 'string'\n                ? mods.labels.formNameLabel\n                : 'Form Title'}\n            </h5>\n            <Input\n              value={schemaData.title || ''}\n              placeholder='Title'\n              type='text'\n              onChange={(ev) => {\n                onChange(\n                  stringify({\n                    ...schemaData,\n                    title: ev.target.value,\n                  }),\n                  uischema,\n                );\n              }}\n              className='form-title'\n            />\n          </div>\n          <div>\n            <h5 data-test='form-description-label'>\n              {mods &&\n              mods.labels &&\n              typeof mods.labels.formDescriptionLabel === 'string'\n                ? mods.labels.formDescriptionLabel\n                : 'Form Description'}\n            </h5>\n            <Input\n              value={schemaData.description || ''}\n              placeholder='Description'\n              type='text'\n              onChange={(ev) =>\n                onChange(\n                  stringify({\n                    ...schemaData,\n                    description: ev.target.value,\n                  }),\n                  uischema,\n                )\n              }\n              className='form-description'\n            />\n          </div>\n        </div>\n      )}\n      <div className={`form-body ${classes.formBody}`}>\n        <DragDropContext\n          onDragEnd={(result) =>\n            onDragEnd(result, {\n              schema: schemaData,\n              uischema: uiSchemaData,\n              onChange: (newSchema, newUiSchema) =>\n                onChange(stringify(newSchema), stringify(newUiSchema)),\n              definitionData: schemaData.definitions,\n              definitionUi: uiSchemaData.definitions,\n              categoryHash,\n            })\n          }\n        >\n          <Droppable droppableId='droppable'>\n            {(providedDroppable) => (\n              <div\n                ref={providedDroppable.innerRef}\n                {...providedDroppable.droppableProps}\n              >\n                {generateElementComponentsFromSchemas({\n                  schemaData,\n                  uiSchemaData,\n                  onChange: (newSchema, newUiSchema) =>\n                    onChange(stringify(newSchema), stringify(newUiSchema)),\n                  definitionData: schemaData.definitions,\n                  definitionUi: uiSchemaData.definitions,\n                  path: 'root',\n                  cardOpenArray,\n                  setCardOpenArray,\n                  allFormInputs,\n                  mods,\n                  categoryHash,\n                  Card,\n                  Section,\n                }).map((element: any, index) => (\n                  <Draggable\n                    key={element.key}\n                    draggableId={element.key}\n                    index={index}\n                  >\n                    {(providedDraggable) => (\n                      <div\n                        ref={providedDraggable.innerRef}\n                        {...providedDraggable.draggableProps}\n                        {...providedDraggable.dragHandleProps}\n                      >\n                        {element}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {providedDroppable.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n      <div className={`form-footer ${classes.formFooter}`}>\n        {!hideAddButton &&\n          mods?.components?.add &&\n          mods.components.add(addProperties)}\n        {!mods?.components?.add && (\n          <Add\n            tooltipDescription={((mods || {}).tooltipDescriptions || {}).add}\n            labels={mods?.labels ?? {}}\n            addElem={(choice: string) => {\n              if (choice === 'card') {\n                addCardObj(addProperties);\n              } else if (choice === 'section') {\n                addSectionObj(addProperties);\n              }\n            }}\n            hidden={hideAddButton}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport {\n  generateElementComponentsFromSchemas,\n  countElementsFromSchema,\n  addCardObj,\n  addSectionObj,\n} from './utils';\nimport Card from './Card';\nimport Section from './Section';\nimport Add from './Add';\nimport DEFAULT_FORM_INPUTS from './defaults/defaultFormInputs';\nimport type { Mods } from './types';\n\ninterface CardGalleryProps {\n  definitionSchema: { [key: string]: any };\n  definitionUiSchema: { [key: string]: any };\n  onChange: (\n    schema: { [key: string]: any },\n    uischema: { [key: string]: any },\n  ) => void;\n  mods?: Mods;\n  categoryHash: { [key: string]: string };\n}\n\nexport default function CardGallery({\n  definitionSchema,\n  definitionUiSchema,\n  onChange,\n  mods,\n  categoryHash,\n}: CardGalleryProps): ReactElement {\n  const elementNum = countElementsFromSchema({\n    properties: definitionSchema,\n  });\n  const defaultCollapseStates = [...Array(elementNum)].map(() => false);\n  const [cardOpenArray, setCardOpenArray] = React.useState(\n    defaultCollapseStates,\n  );\n  const allFormInputs = Object.assign(\n    {},\n    DEFAULT_FORM_INPUTS,\n    (mods && mods.customFormInputs) || {},\n  );\n  const componentArr = generateElementComponentsFromSchemas({\n    schemaData: { properties: definitionSchema },\n    uiSchemaData: definitionUiSchema,\n    onChange: (newDefinitions, newDefinitionUis) => {\n      const oldUi = newDefinitionUis;\n      const newUi: { [key: string]: any } = {};\n\n      Object.keys(oldUi).forEach((definedUi) => {\n        if (!['definitions', 'ui:order'].includes(definedUi))\n          newUi[definedUi] = oldUi[definedUi];\n      });\n      onChange(newDefinitions.properties, newUi);\n    },\n    path: 'definitions',\n    definitionData: definitionSchema,\n    definitionUi: definitionUiSchema,\n    cardOpenArray,\n    setCardOpenArray,\n    allFormInputs,\n    mods,\n    categoryHash,\n    Card,\n    Section,\n  }).map((element: any) => (\n    <div\n      key={typeof element.key === 'string' ? element.key : ''}\n      className='form_gallery_container'\n    >\n      {element}\n    </div>\n  ));\n\n  const hideAddButton =\n    !!definitionSchema && Object.keys(definitionSchema).length !== 0;\n\n  const addProperties = {\n    schema: { properties: definitionSchema },\n    uischema: definitionUiSchema,\n    mods: mods,\n    onChange: (\n      newDefinitions: { [key: string]: any },\n      newDefinitionUis: { [key: string]: any },\n    ) => {\n      const oldUi = newDefinitionUis;\n      const newUi: { [key: string]: any } = {};\n\n      Object.keys(oldUi).forEach((definedUiSchemaKey) => {\n        if (!['definitions', 'ui:order'].includes(definedUiSchemaKey))\n          newUi[definedUiSchemaKey] = oldUi[definedUiSchemaKey];\n      });\n      onChange(newDefinitions.properties, newUi);\n    },\n    definitionData: definitionSchema,\n    definitionUi: definitionUiSchema,\n    categoryHash,\n  };\n\n  return (\n    <div className='form_gallery'>\n      {componentArr}\n      {componentArr.length === 0 && <h5>No components in \"definitions\"</h5>}\n      <div className='form_footer'>\n        {!hideAddButton &&\n          mods?.components?.add &&\n          mods.components.add(addProperties)}\n        {!mods?.components?.add && (\n          <Add\n            tooltipDescription={((mods || {}).tooltipDescriptions || {}).add}\n            addElem={(choice: string) => {\n              if (choice === 'card') {\n                addCardObj(addProperties);\n              } else if (choice === 'section') {\n                addSectionObj(addProperties);\n              }\n            }}\n            hidden={hideAddButton}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport CardGallery from './CardGallery';\nimport {\n  parse,\n  stringify,\n  propagateDefinitionChanges,\n  generateCategoryHash,\n  excludeKeys,\n} from './utils';\nimport { arrows as arrowsStyle } from './styles';\nimport DEFAULT_FORM_INPUTS from './defaults/defaultFormInputs';\nimport type { Mods } from './types';\n\nconst useStyles = createUseStyles({\n  preDefinedGallery: {\n    display: 'flex',\n    flexDirection: 'column',\n    'text-align': 'center',\n    '& .fa': {\n      cursor: 'pointer',\n    },\n    '& .fa-question-circle, & .fa-circle-question': {\n      color: 'gray',\n    },\n    '& .fa-asterisk': {\n      'font-size': '.9em',\n      color: 'green',\n    },\n    ...arrowsStyle,\n    '& .form_footer': {\n      marginTop: '1em',\n      textAlign: 'center',\n      '& .fa': { cursor: 'pointer', color: '$green', fontSize: '1.5em' },\n    },\n    '& .fa-plus-square & .fa-square-plus': {\n      color: 'green',\n      'font-size': '1.5em',\n      margin: '0 auto',\n    },\n    '& .card-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      width: '70%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid gray',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid gray',\n      },\n      '& .label': {\n        float: 'left',\n      },\n    },\n    '& .card-requirements': {\n      border: '1px dashed black',\n    },\n    '& .section-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      display: 'block',\n      width: '90%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid gray',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid gray',\n      },\n      '& .label': {\n        float: 'left',\n      },\n    },\n    '& .section-dependent': {\n      border: '1px dashed gray',\n    },\n    '& .section-requirements': {\n      border: '1px dashed black',\n    },\n    '& .fa-pencil-alt, & .fa-pencil': {\n      border: '1px solid #1d71ad',\n      color: '#1d71ad',\n    },\n    '& .modal-body': {\n      maxHeight: '500px',\n      overflowY: 'scroll',\n    },\n    '& .card-container:hover': { border: '1px solid green' },\n    '& .card-dependent': { border: '1px dashed gray' },\n    '& .card-add': {\n      cursor: 'pointer',\n      display: 'block',\n      color: '$green',\n      fontSize: '1.5em',\n    },\n\n    '& .section-container:hover': { border: '1px solid green' },\n  },\n});\n\nexport default function PredefinedGallery({\n  schema,\n  uischema,\n  onChange,\n  mods,\n}: {\n  schema: string;\n  uischema: string;\n  onChange: (schema: string, uischema: string) => any;\n  mods?: Mods;\n}): ReactElement {\n  const classes = useStyles();\n  const schemaData = React.useMemo(() => parse(schema) || {}, [schema]);\n  const uiSchemaData = React.useMemo(() => parse(uischema) || {}, [uischema]);\n  const allFormInputs = excludeKeys(\n    Object.assign(\n      {},\n      DEFAULT_FORM_INPUTS,\n      (mods && mods.customFormInputs) || {},\n    ),\n    mods && mods.deactivatedFormInputs,\n  );\n  const categoryHash = generateCategoryHash(allFormInputs);\n\n  React.useEffect(() => {\n    if (!uiSchemaData.definitions) {\n      // eslint-disable-next-line no-console\n      console.log('Parsing UI schema to assign UI for definitions');\n      // need to create definitions from scratch\n      const references: string[] = [];\n      // recursively search for all $refs in the schemaData\n      const findRefs = (name: string, schemaObject: { [key: string]: any }) => {\n        if (!schemaObject) return;\n        if (typeof schemaObject === 'object')\n          Object.keys(schemaObject).forEach((key) => {\n            if (typeof key === 'string') {\n              if (key === '$ref') references.push(name);\n              findRefs(key, schemaObject[key]);\n            }\n          });\n        if (Array.isArray(schemaObject))\n          schemaObject.forEach((innerObj) => {\n            findRefs(name, innerObj);\n          });\n      };\n\n      findRefs('root', schemaData);\n\n      uiSchemaData.definitions = {};\n      const referenceSet = new Set(references);\n      Object.keys(uiSchemaData).forEach((uiProp) => {\n        if (referenceSet.has(uiProp))\n          uiSchemaData.definitions[uiProp] = uiSchemaData[uiProp];\n      });\n      if (!Object.keys(uiSchemaData.definitions).length) {\n        uiSchemaData.definitions = undefined;\n      }\n      onChange(stringify(schemaData), stringify(uiSchemaData));\n    }\n  }, [uiSchemaData, schemaData, onChange]);\n  return (\n    <div className={classes.preDefinedGallery}>\n      <CardGallery\n        definitionSchema={schemaData.definitions || {}}\n        definitionUiSchema={uiSchemaData.definitions || {}}\n        onChange={(\n          newDefinitions: { [key: string]: any },\n          newDefinitionsUi: { [key: string]: any },\n        ) => {\n          // propagate changes in ui definitions to all relavant parties in main schema\n\n          propagateDefinitionChanges(\n            { ...schemaData, definitions: newDefinitions },\n            { ...uiSchemaData, definitions: newDefinitionsUi },\n            (newSchema, newUiSchema) =>\n              onChange(stringify(newSchema), stringify(newUiSchema)),\n            categoryHash,\n          );\n        }}\n        mods={mods}\n        categoryHash={categoryHash}\n      />\n    </div>\n  );\n}\n"],"names":["useStyles","createUseStyles","checkbox","display","marginRight","FBCheckbox","onChangeValue","value","isChecked","label","use","disabled","id","dataTest","labelClassName","classjss","classes","classnames","potentialCheckboxId","checkboxId","undefined","React","createElement","className","type","onChange","event","checked","htmlFor","FontAwesomeIcon","_ref","otherProps","_objectWithoutProperties","_excluded","props","Object","assign","FortAwesomeFontAwesomeIcon","_objectSpread","collapseElement","cursor","marginTop","padding","fontSize","marginLeft","Collapse","disableToggle","onClick","toggleCollapse","icon","isOpen","faCaretDown","faCaretRight","title","RSCollapse","children","FBRadioButton","name","required","autoFocus","useState","Math","floor","random","key","radio","marginBottom","height","verticalAlign","FBRadioGroup","options","defaultValue","horizontal","toString","elementId","map","option","index","typeMap","alert","faAsterisk","help","faQuestionCircle","toolTip","color","Example","text","Fragment","style","textDecoration","UncontrolledTooltip","autohide","placement","target","parse","JSON","stringify","obj","defaultDataProps","category","allFormInputs","defaultDataSchema","defaultUiProps","defaultUiSchema","categoryType","getCardBody","cardBody","categoryToNameMap","categoryNameMap","keys","forEach","inputName","displayName","updateElementNames","elementArray","elementNames","elem","newElem","neighborNames","generateCategoryHash","categoryHash","categoryName","formInput","matchIf","match","types","hash","widget","field","format","$ref","enum","Error","getCardCategory","cardProps","currentHash","dataOptions","uiOptions","console","error","supportedPropertyParameters","Set","supportedUiParameters","checkObjectForUnsupportedFeatures","schema","uischema","supportedWidgets","supportedFields","supportedOptions","unsupportedFeatures","property","has","push","uiProperty","propDefined","properties","includes","dependencies","dependencyKey","parameter","oneOf","grouping","entries","element","uiProp","uiOption","checkForUnsupportedFeatures","widgets","fields","inputType","possibleOptions","Array","isArray","generateDependencyElement","dataProps","uiProperties","requiredNames","definitionData","definitionUi","useDefinitionDetails","uiProps","newElement","elementDetails","pathArr","split","definedUiProps","propType","reservedKeys","uiKey","generateElementPropsFromSchemas","parameters","elementDict","_elementDetails","startsWith","parent","group","possibilityIndex","possibility","dependents","requiredValues","length","dependent","cardPropList","remainder","remCard","countElementsFromSchema","schemaData","elementCount","generateSchemaElementFromElement","_element$schema","_element$schema$requi","description","returnElement","prop","generateSchemaFromElementProps","elementArr","newSchema","dependentElements","dependentElement","add","elementName","_possibility$children","childrenComponents","child","filter","generateUiSchemaFromElementProps","uiSchema","uiOrder","definitions","substring","getCardParameterInputComponentForType","modalBody","updateSchemas","newUiSchema","DEFAULT_INPUT_NAME","getIdFromElementsBlock","elements","names","defaultNameLength","max","Number","parseInt","isNaN","addCardObj","mods","newElementObjArr","i","getNewElementDefaultDataOptions","newElementDefaultUiSchema","splice","addSectionObj","default","generateElementComponentsFromSchemas","uiSchemaData","hideKey","path","cardOpenArray","setCardOpenArray","Card","Section","elementPropArr","elementList","elementProp","MIN_CARD_OPEN_ARRAY_LENGTH","currentLength","addProperties","fill","expanded","TypeSpecificParameters","componentProps","newCardObj","newDataProps","newUiProps","propName","oldElement","onDelete","slice","onMoveUp","tempBlock","onMoveDown","addElem","choice","cardOpen","setCardOpen","newState","newRef","oldSection","onNameChange","newName","onRequireToggle","onDependentsChange","newDependents","reference","parentProperties","onDragEnd","result","details","src","source","dest","destination","propagateElementChange","updatedElementArr","childrenElements","updatedChildren","propagateDefinitionChanges","bodyElements","updatedBodyElements","subtractArray","array1","array2","reduce","acc","curr","v","excludeKeys","keysHash","newElementDefaultDataOptions","getRandomId","chars","numberOfChars","randomIdLength","from","join","DependencyWarning","definedVals","val","undefinedVals","Tooltip","CardSelector","possibleChoices","chosenChoices","placeholder","chosenChoice","faTimes","Select","cardEnumOption","width","flexDirection","justifyContent","CardEnumOptions","initialValues","showNames","possibleValues","Input","ev","newVal","parseFloat","isInteger","faPlus","ValueSelector","parentEnums","parentType","parentName","parentSchema","enumType","enumArr","getInput","oldCombo","combination","newCase","propArr","newEnum","DependencyPossibility","newPossibility","dependencyField","textAlign","border","borderRadius","margin","checkIfValueBasedDependency","valueBased","DependencyField","selection","cardModal","paddingTop","paddingBottom","CardModal","onClose","componentPropsState","setComponentProps","useEffect","Modal","ModalHeader","ModalBody","href","rel","min","ModalFooter","Button","GeneralParameterInputs","CardBody","CardGeneralParameterInputs","showObjectNameInput","keyState","setKeyState","keyError","setKeyError","titleState","setTitleState","descriptionState","setDescriptionState","categoryMap","fetchLabel","labelName","defaultLabel","labels","objectNameLabel","descriptionLabel","inputTypeLabel","availableInputTypes","definitionsInSchema","inputKeys","deactivatedFormInputs","sort","a","b","localeCompare","tooltipDescriptions","cardObjectName","FormGroup","invalid","onBlur","FormFeedback","cardDescription","cardInputType","newCategory","newProps","firstDefinition","addDetails","borderBottom","Add","hidden","tooltipDescription","_labels$addElementLab","_labels$addSectionLab","popoverOpen","setPopoverOpen","createChoice","setCreateChoice","faPlusSquare","Popover","toggle","PopoverHeader","PopoverBody","addElementLabel","addSectionLabel","cardEntries","backgroundColor","fontWeight","cardInteractions","_mods$components","_mods$components2","_mods$components3","modalOpen","setModalOpen","faArrowUp","faArrowDown","faPencilAlt","faTrash","newComponentProps","components","CardDefaultParameterInputs","getInputCardBodyComponent","InputCardBodyComponent","Checkbox","MultipleChoice","enumArray","containsUnparsableString","some","containsString","isNumber","setIsNumber","enumNames","newNum","newEnumNames","defaultInputs","dateTime","date","time","dropdown","sectionContainer","borderTop","_uischema$uiColumn","_uischema$uiOptions","_mods$components4","elementNum","defaultCollapseStates","keyName","setKeyName","hideAddButton","cardSectionObjectName","readOnly","cardSectionDisplayName","cardSectionDescription","Alert","message","DragDropContext","Droppable","droppableId","providedDroppable","ref","innerRef","droppableProps","Draggable","draggableId","providedDraggable","draggableProps","dragHandleProps","arrows","float","PlaceholderInput","formatDictionary","email","hostname","uri","regex","formatTypeDictionary","url","autoDictionary","username","password","country","CardShortAnswerParameterInputs","minLength","maxLength","pattern","ShortAnswerField","Password","shortAnswerInput","shortAnswer","CardLongAnswerParameterInputs","LongAnswer","longAnswerInput","longAnswer","CardNumberParameterInputs","multipleOf","minimum","exclusiveMinimum","newMin","maximum","exclusiveMaximum","newMax","NumberField","numberInputs","integer","number","CardArrayParameterInputs","minItems","maxItems","InnerCard","defaultFormInputs","customFormInputs","items","item","newArr","getInnerCardComponent","shortAnswerInputs","longAnswerInputs","array","ArrayInputs","CardReferenceParameterInputs","RefChoice","currentValueLabel","referenceInputs","DEFAULT_FORM_INPUTS","arrayInputs","formBuilder","arrowsStyle","formHead","formBody","maxHeight","overflowY","formFooter","FormBuilder","onMount","_mods$labels","isFirstRender","setIsFirstRender","showFormHead","formNameLabel","formDescriptionLabel","CardGallery","definitionSchema","definitionUiSchema","componentArr","newDefinitions","newDefinitionUis","oldUi","newUi","definedUi","definedUiSchemaKey","preDefinedGallery","PredefinedGallery","useMemo","log","references","findRefs","schemaObject","innerObj","referenceSet","newDefinitionsUi"],"mappings":"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"}